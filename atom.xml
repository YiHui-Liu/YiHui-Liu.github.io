<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fox Home</title>
  
  <subtitle>清疚</subtitle>
  <link href="https://foolishfox.cn/atom.xml" rel="self"/>
  
  <link href="https://foolishfox.cn/"/>
  <updated>2021-01-26T06:56:32.213Z</updated>
  <id>https://foolishfox.cn/</id>
  
  <author>
    <name>liuyihui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows | 包管理神器—Scoop</title>
    <link href="https://foolishfox.cn/posts/202101-a.html"/>
    <id>https://foolishfox.cn/posts/202101-a.html</id>
    <published>2021-01-25T15:46:56.000Z</published>
    <updated>2021-01-26T06:56:32.213Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="简介"   >          <a href="#简介" class="heading-link"><i class="fas fa-link"></i></a>简介</h2>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></div></figure><p>  在<code>Ubuntu</code>安装软件的时候敲入上面的命令是一件令人舒适的事情，而且也很便捷，想要在<code>MacOS</code>上这样操作，也可以使用<code>homebrew</code>等诸多的包管理工具。然而如果想在<code>Windows</code>安装软件，你<strong>可能</strong>需要：</p><ol><li>打开百度搜索软件</li><li>在搜索结果中找到无毒无捆绑的版本</li><li>进行安装，不停点击<code>Next</code>或者下一步</li><li>结束安装</li></ol><a id="more"></a><p>  在这个过程中，你还要担心是否会混入病毒，是否会有捆绑软件同时下载；软件还很可能会索要管理员权限，把它自己安装在C盘的好位置；有些开发工具还可能会搞乱你的环境变量；最最重要的是，最后你要卸载它的时候不知道有多麻烦。</p><p>  所以就有天降猛男来解决这个问题，开发了<code>Windows</code>的包管理工具。在<code>scoop</code>之前，<code>Windows</code>上的包管理工具中比较出名的是<code>Chocolaty</code>。在<code>scoop</code>横空出世之后，由于其自定义程度高、拓展性强的特性而发展迅猛，目前社区中总计有2000+的软件；另外<code>scoop</code>安装软件不依赖管理员权限，安装路径和环境变量管理也深得我这一类“绿色用户”的欢心。</p>        <h2 id="安装scoop"   >          <a href="#安装scoop" class="heading-link"><i class="fas fa-link"></i></a>安装scoop</h2>              <h3 id="安装要求"   >          <a href="#安装要求" class="heading-link"><i class="fas fa-link"></i></a>安装要求</h3>      <ul><li>Windows 7或更高版本</li><li>PowerShell 5.0或更高版本</li><li>.NET Framework 4.5或更高版本</li><li>User Name不含中文字符</li><li>确认打开了远程安装权限</li></ul><figure class="highlight powershell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$PSVersionTable</span>.PSVersion.Major                      <span class="comment"># 查看Powershell版本</span></span><br><span class="line"><span class="variable">$PSVersionTable</span>.CLRVersion.Major                     <span class="comment"># 查看.NET Framework版本</span></span><br><span class="line"><span class="built_in">set-executionpolicy</span> remotesigned <span class="literal">-scope</span> currentuser  <span class="comment"># 打开远程权限</span></span><br></pre></td></tr></table></div></figure><p>  当然还有很重要的一点就是能够正常访问<code>Github</code>。</p>        <h3 id="配置"   >          <a href="#配置" class="heading-link"><i class="fas fa-link"></i></a>配置</h3>      <p>  默认情况下,scoop以及大多数安装的软件都位于<code>%USERPROFILE%\scoop</code>,全局安装的程序位于<code>C:\ProgramData\scoop</code>，当然我们也可以自定义安装位置：</p><figure class="highlight powershell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:scoop</span>=<span class="string">&#x27;D:\scoop&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;scoop&#x27;</span>, <span class="variable">$env:scoop</span>, <span class="string">&#x27;User&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$env:scoop_GLOBAL</span>=<span class="string">&#x27;D:\scoop\GlobalApps&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;scoop_GLOBAL&#x27;</span>, <span class="variable">$env:scoop_GLOBAL</span>, <span class="string">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></div></figure>        <h3 id="安装"   >          <a href="#安装" class="heading-link"><i class="fas fa-link"></i></a>安装</h3>      <figure class="highlight powershell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class="line"><span class="comment"># or the shorter:</span></span><br><span class="line"><span class="built_in">iwr</span> <span class="literal">-useb</span> get.scoop.sh | <span class="built_in">iex</span></span><br></pre></td></tr></table></div></figure>        <h3 id="卸载"   >          <a href="#卸载" class="heading-link"><i class="fas fa-link"></i></a>卸载</h3>      <p>  以毒攻毒，以<code>scoop</code>卸载<code>scoop</code>(先卸载其他软件)：</p><figure class="highlight powershell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop uninstall scoop</span><br></pre></td></tr></table></div></figure>        <h2 id="基础"   >          <a href="#基础" class="heading-link"><i class="fas fa-link"></i></a>基础</h2>              <h3 id="常用命令"   >          <a href="#常用命令" class="heading-link"><i class="fas fa-link"></i></a>常用命令</h3>      <p>  <code>scoop</code>的命令设计逻辑是<code>scoop + command + [object] + [options]</code>，例如<code>scoop install git -g</code>，常用的基础命令有：</p><div class="table-container"><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">help <command></td><td style="text-align:center">查看帮助</td></tr><tr><td style="text-align:center">bucket add/rm [args]</td><td style="text-align:center">添加、删除仓库</td></tr><tr><td style="text-align:center">bucket list/know</td><td style="text-align:center">查看已有/已知仓库</td></tr><tr><td style="text-align:center">search <appname></td><td style="text-align:center">匹配查找</td></tr><tr><td style="text-align:center">info <app></td><td style="text-align:center">查看详情</td></tr><tr><td style="text-align:center">home <app></td><td style="text-align:center">查看主页</td></tr><tr><td style="text-align:center">install <app> [options]</td><td style="text-align:center">安装</td></tr><tr><td style="text-align:center">uninstall <app> [options]</td><td style="text-align:center">卸载</td></tr><tr><td style="text-align:center">update <app> [options]</td><td style="text-align:center">更新</td></tr><tr><td style="text-align:center">list</td><td style="text-align:center">查看已安装软件</td></tr><tr><td style="text-align:center">cache show/rm [app]</td><td style="text-align:center">查看或删除缓存</td></tr><tr><td style="text-align:center">cleanup <app> [options]</td><td style="text-align:center">删除旧版本</td></tr><tr><td style="text-align:center">checkup</td><td style="text-align:center">自检查</td></tr></tbody></table></div>        <h3 id="安装位置"   >          <a href="#安装位置" class="heading-link"><i class="fas fa-link"></i></a>安装位置</h3>      <p>  在<a href="#%E9%85%8D%E7%BD%AE">配置</a>这一步中，我们设置了<code>scoop</code>的安装位置为<code>D:\Scoop</code>，在这个文件夹下，会有这几个子目录：</p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2021/01/scoopdir.png"  alt="" />      </p><p>  <code>app</code>就是软件的安装位置；<code>buckets</code>则是已添加的仓库（后文会提到，<code>scoop</code>的仓库实际上就是<code>git</code>的<code>repository</code>，所以该文件夹下其实就是一个一个<code>git repository</code>）；<code>cache</code>是下载缓存；<code>GlobalApps</code>是自定义的全局安装位置；<code>persist</code>则是一些配置文件；<code>shim</code>会创建一些应用的软链接，让应用之间不会互相干扰。</p>        <h3 id="加速"   >          <a href="#加速" class="heading-link"><i class="fas fa-link"></i></a>加速</h3>              <h4 id="使用aria2"   >          <a href="#使用aria2" class="heading-link"><i class="fas fa-link"></i></a>使用aria2</h4>      <p>  <code>aria2</code>可以利用多线程加速下载：</p><figure class="highlight powershell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scoop install aria2</span><br><span class="line"><span class="comment"># 关闭aria2（默认开启）</span></span><br><span class="line">scoop config aria2<span class="literal">-enabled</span> false</span><br><span class="line"><span class="comment"># 配置aria2 ：重试秒数 单任务最大线程数(最大为16) 同一服务器最大连接数 最小文件分片大小</span></span><br><span class="line">scoop config aria2<span class="literal">-retry</span><span class="literal">-wait</span> <span class="number">4</span></span><br><span class="line">scoop config aria2<span class="operator">-split</span> <span class="number">16</span></span><br><span class="line">scoop config aria2<span class="literal">-max</span><span class="literal">-connection</span><span class="literal">-per</span><span class="literal">-server</span> <span class="number">16</span></span><br><span class="line">scoop config aria2<span class="literal">-min</span><span class="operator">-split</span><span class="literal">-size</span> <span class="number">4</span>M</span><br></pre></td></tr></table></div></figure>        <h4 id="设置代理"   >          <a href="#设置代理" class="heading-link"><i class="fas fa-link"></i></a>设置代理</h4>      <p>  <code>scoop</code>在拉取仓库更新和下载大部分软件时，都需要从国外服务器下载，速度十分感人，因此使用代理可以大大加速下载。有两种方式可以在<code>scoop</code>下载时使用代理：</p><ol><li>在Powershell内设置环境变量：<code>$Env:http_proxy=&quot;http://127.0.0.1:1080&quot;;$Env:https_proxy=&quot;http://127.0.0.1:1080&quot;</code></li><li>更改代理设置：<code>scoop config proxy [username:password@]host:port</code>，具体配置可以查看参考资料[5]</li></ol>        <h2 id="bucket管理"   >          <a href="#bucket管理" class="heading-link"><i class="fas fa-link"></i></a>Bucket管理</h2>              <h3 id="介绍"   >          <a href="#介绍" class="heading-link"><i class="fas fa-link"></i></a>介绍</h3>      <p>  <code>Bucket</code>其实就是一个<code>git repository</code>，主要组成就是描述如何安装软件的<code>json</code>文件。在安装<code>scoop</code>时已经附带安装<code>main bucket</code>，然后这个仓库的收录标准十分严格：</p><ul><li>主流的开发者工具</li><li>维护中的最新版本的软件</li><li>完整版本的软件</li><li>不可以有GUI</li><li>……</li></ul><p>  这使得我们只能在<code>main</code>中找到部分软件，不可以有<code>GUI</code>这一点使得大部分日常使用软件都无法下载，所以我们需要添加其他仓库，可以使用<code>scoop bucket know</code>查看官方维护的仓库，还可以在<span class="exturl"><a class="exturl__link"   href="https://scoop.netlify.app/buckets/" >这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>查看较受欢迎的仓库，较完整的仓库列表可以在<span class="exturl"><a class="exturl__link"   href="https://github.com/rasa/scoop-directory/blob/master/by-score.md" >这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>查看。</p>        <h3 id="管理"   >          <a href="#管理" class="heading-link"><i class="fas fa-link"></i></a>管理</h3>      <p>  官方维护的仓库可以直接添加，例如<code>scoop bucket add extras</code>；对于社区维护的仓库，使用<code>scoop bucket add &lt;name&gt; &lt;url&gt;</code>进行添加，例如<code>scoop bucket add dorado https://github.com/chawyehsu/dorado</code>。<br />  每一次安装和更新软件之前，<code>scoop</code>首先会从<code>github</code>拉取已添加仓库的更新，然后再进行操作。如果碰到不同的仓库中拥有名字相同的软件，可以加上仓库名以示区分，例如<code>scoop install main/git</code>。</p>        <h3 id="建立自己的bucket"   >          <a href="#建立自己的bucket" class="heading-link"><i class="fas fa-link"></i></a>建立自己的bucket</h3>      <p>  参考<span class="exturl"><a class="exturl__link"   href="https://zhuanlan.zhihu.com/p/165635039" >scoop 进阶 - 建立自己 的Bucket</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="app查询"   >          <a href="#app查询" class="heading-link"><i class="fas fa-link"></i></a>App查询</h2>      <p>  为了在<code>scoop</code>的许多仓库中找到自己需要的软件，可以在<span class="exturl"><a class="exturl__link"   href="https://scoop.netlify.app/apps/" >这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>查询安装脚本所在的bucket。</p>        <h2 id="qa"   >          <a href="#qa" class="heading-link"><i class="fas fa-link"></i></a>Q&amp;A</h2>      <ul><li>还有其他的包管理工具吗？</li></ul><blockquote><p>有呀，例如<span class="exturl"><a class="exturl__link"   href="https://github.com/microsoft/winget-cli" >winget</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，是由官方推出的推出命令行安装工具，全称<code>windows package manager client</code></p></blockquote>        <h2 id="仓库"   >          <a href="#仓库" class="heading-link"><i class="fas fa-link"></i></a>仓库</h2>      <div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">简介</th></tr></thead><tbody><tr><td style="text-align:center"><span class="exturl"><a class="exturl__link"   href="https://github.com/chawyehsu/dorado" >dorado</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td><td style="text-align:center">Yet another bucket for scoop.</td></tr><tr><td style="text-align:center"><span class="exturl"><a class="exturl__link"   href="https://github.com/integzz/scoopet" >scoopet</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td><td style="text-align:center">A Bucket for the Best Windows Package Manager scoop : Continuously Assisting in Academic Research.</td></tr><tr><td style="text-align:center"><span class="exturl"><a class="exturl__link"   href="https://github.com/kidonng/sushi" >sushi</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td><td style="text-align:center">A tasty and inclusive scoop bucket, providing various kinds of applications.</td></tr><tr><td style="text-align:center"><span class="exturl"><a class="exturl__link"   href="https://github.com/YiHui-Liu/limpit" >limpit</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td><td style="text-align:center">我的 scoop 的软件仓库</td></tr></tbody></table></div>        <h2 id="参考资料"   >          <a href="#参考资料" class="heading-link"><i class="fas fa-link"></i></a>参考资料</h2>      <ol><li><span class="exturl"><a class="exturl__link"   href="https://www.jianshu.com/p/29e9d40bd7a2" >Windows下最好的包管理器–scoop</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://www.jianshu.com/p/50993df76b1c" >scoop——强大的Windows命令行包管理工具</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://sspai.com/post/52710" >给 scoop 加上这些软件仓库，让它变成强大的 Windows 软件管理器</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://github.com/lukesampson/scoop/wiki/Using-scoop-behind-a-proxy" >Using scoop behind a proxy</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://github.com/lukesampson/scoop/wiki/Quick-Start" >Quick Start</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://chawyehsu.com/blog/talk-about-scoop-the-package-manager-for-windows-again" >再谈谈 scoop 这个 Windows 下的软件包管理器</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/muoyangoren/article/details/79531851" >Aria2下载简述</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;   &gt;
          &lt;a href=&quot;#简介&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;简介&lt;/h2&gt;
      
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;  在&lt;code&gt;Ubuntu&lt;/code&gt;安装软件的时候敲入上面的命令是一件令人舒适的事情，而且也很便捷，想要在&lt;code&gt;MacOS&lt;/code&gt;上这样操作，也可以使用&lt;code&gt;homebrew&lt;/code&gt;等诸多的包管理工具。然而如果想在&lt;code&gt;Windows&lt;/code&gt;安装软件，你&lt;strong&gt;可能&lt;/strong&gt;需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开百度搜索软件&lt;/li&gt;
&lt;li&gt;在搜索结果中找到无毒无捆绑的版本&lt;/li&gt;
&lt;li&gt;进行安装，不停点击&lt;code&gt;Next&lt;/code&gt;或者下一步&lt;/li&gt;
&lt;li&gt;结束安装&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Windows" scheme="https://foolishfox.cn/categories/Windows/"/>
    
    
    <category term="github" scheme="https://foolishfox.cn/tags/github/"/>
    
    <category term="安装" scheme="https://foolishfox.cn/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu18.04安装ROS</title>
    <link href="https://foolishfox.cn/posts/202101-rosinstall.html"/>
    <id>https://foolishfox.cn/posts/202101-rosinstall.html</id>
    <published>2021-01-02T04:00:00.000Z</published>
    <updated>2021-01-05T11:45:42.066Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="简介"   >          <a href="#简介" class="heading-link"><i class="fas fa-link"></i></a>简介</h2>      <p>  ROS的全称是<code>Robot Operating System</code>，即机器人操作系统，原型来自于<code>Stanford University</code>的<code>STanford Artificial Intelligence Robot</code>和 <code>Personal Robotics</code>项目。</p><p>  ROS有很多的发行版，与Ubuntu发行版本的概念类似，有LTS版本提供5年的更新。每一个版本都有对应的推荐操作系统，可以在<span class="exturl"><a class="exturl__link"   href="http://wiki.ros.org/Distributions" >这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>查看目前发行的版本。版本生命周期还未结束的有：</p><div class="table-container"><table><thead><tr><th style="text-align:center">版本名称</th><th style="text-align:center">发布日期</th><th style="text-align:center">提供支持至</th><th style="text-align:center">推荐系统</th></tr></thead><tbody><tr><td style="text-align:center">ROS Noetic Ninjemys</td><td style="text-align:center">2020年5月</td><td style="text-align:center">2025年5月</td><td style="text-align:center">Ubuntu 20.04</td></tr><tr><td style="text-align:center">ROS Melodic Morenia</td><td style="text-align:center">2018年5月</td><td style="text-align:center">2023年5月</td><td style="text-align:center">Ubuntu 17.10|Ubuntu 18.04|Debian 9</td></tr><tr><td style="text-align:center">ROS Kinetic Kame</td><td style="text-align:center">2016年5月</td><td style="text-align:center">2021年4月</td><td style="text-align:center">Ubuntu 15.10|Ubuntu 16.04|Debian 8</td></tr></tbody></table></div><a id="more"></a><p>  我在<code>VM ware</code>中安装的是<code>Ubuntu 18.04</code>版本，所以选择安装<code>ROS Melodic Morenia</code>。</p>        <h2 id="安装"   >          <a href="#安装" class="heading-link"><i class="fas fa-link"></i></a>安装</h2>      <p>  打开<span class="exturl"><a class="exturl__link"   href="http://wiki.ros.org/melodic/Installation" >官方安装教程</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，选择自己对应的操作系统，按步骤进行安装</p>        <h3 id="添加源与密钥"   >          <a href="#添加源与密钥" class="heading-link"><i class="fas fa-link"></i></a>添加源与密钥</h3>      <p>  众所周知的原因，国外源在国内的访问速度简直令人落泪，所以我们可以选择<span class="exturl"><a class="exturl__link"   href="http://wiki.ros.org/ROS/Installation/UbuntuMirrors" >镜像</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，例如我选择的是清华源：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fox@foxhome:~$ sudo sh -c <span class="string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br></pre></td></tr></table></div></figure><p>  然后就需要添加密钥，直接使用官方的命令即可：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fox@foxhome:~$ sudo apt-key adv --keyserver <span class="string">&#x27;hkp://keyserver.ubuntu.com:80&#x27;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br><span class="line">Executing: /tmp/apt-key-gpghome.OtMUWc2xuJ/gpg.1.sh --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br><span class="line">gpg: 密钥 F42ED6FBAB17C654：公钥 “Open Robotics &lt;info@osrfoundation.org&gt;” 已导入</span><br><span class="line">gpg: 处理的总数：1</span><br><span class="line">gpg:               已导入：1</span><br></pre></td></tr></table></div></figure>        <h3 id="安装aptitude"   >          <a href="#安装aptitude" class="heading-link"><i class="fas fa-link"></i></a>安装aptitude</h3>      <p>  有时候使用<code>apt</code>安装时，会遇到依赖问题，解决起来很麻烦，这个时候可以使用Linux下的一个小工具：<code>aptitiude</code>，它是在<code>apt</code>基础上的升级，可以帮助我们解决依赖关系问题，可以点<span class="exturl"><a class="exturl__link"   href="https://www.cnblogs.com/wangkangluo1/archive/2012/12/30/2839514.html" >这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>了解更多。</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install aptitude</span><br></pre></td></tr></table></div></figure>        <h3 id="安装ros"   >          <a href="#安装ros" class="heading-link"><i class="fas fa-link"></i></a>安装ROS</h3>      <p>  选择你想要的<code>ROS packages</code>进行安装，例如安装所有的包：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude install ros-melodic-desktop-full</span><br></pre></td></tr></table></div></figure><p>  aptitude会给出安装方案，包括依赖问题的解决，直接<code>Y</code>继续即可</p>        <h3 id="设置环境变量"   >          <a href="#设置环境变量" class="heading-link"><i class="fas fa-link"></i></a>设置环境变量</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fox@foxhome:~$ <span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/melodic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line">fox@foxhome:~$ <span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></div></figure>        <h2 id="检查"   >          <a href="#检查" class="heading-link"><i class="fas fa-link"></i></a>检查</h2>      <p>  在终端输入<code>roscore</code>开启ROS的运行核心(master)，注意不能在两个终端同时开启两个master<br />  然后打开一个新的终端，输入<code>rosrun turtlesim turtlesim_node</code>，如果弹出下图的窗口，那就安装成功了<br />        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2021/01/rosrun.png"  alt="" />      </p>        <h2 id="参考资料"   >          <a href="#参考资料" class="heading-link"><i class="fas fa-link"></i></a>参考资料</h2>      <ul><li><span class="exturl"><a class="exturl__link"   href="https://zhuanlan.zhihu.com/p/84821192" >ROS安装教程(ROS Melodic + Ubuntu18.04)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;   &gt;
          &lt;a href=&quot;#简介&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;简介&lt;/h2&gt;
      
&lt;p&gt;  ROS的全称是&lt;code&gt;Robot Operating System&lt;/code&gt;，即机器人操作系统，原型来自于&lt;code&gt;Stanford University&lt;/code&gt;的&lt;code&gt;STanford Artificial Intelligence Robot&lt;/code&gt;和 &lt;code&gt;Personal Robotics&lt;/code&gt;项目。&lt;/p&gt;
&lt;p&gt;  ROS有很多的发行版，与Ubuntu发行版本的概念类似，有LTS版本提供5年的更新。每一个版本都有对应的推荐操作系统，可以在&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;http://wiki.ros.org/Distributions&quot; &gt;这里&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;查看目前发行的版本。版本生命周期还未结束的有：&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;版本名称&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;发布日期&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;提供支持至&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;推荐系统&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ROS Noetic Ninjemys&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2020年5月&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2025年5月&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Ubuntu 20.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ROS Melodic Morenia&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2018年5月&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2023年5月&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Ubuntu 17.10|Ubuntu 18.04|Debian 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ROS Kinetic Kame&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2016年5月&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2021年4月&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Ubuntu 15.10|Ubuntu 16.04|Debian 8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</summary>
    
    
    
    <category term="ROS" scheme="https://foolishfox.cn/categories/ROS/"/>
    
    
    <category term="安装" scheme="https://foolishfox.cn/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>最低工资与资本剥削</title>
    <link href="https://foolishfox.cn/posts/202012-c.html"/>
    <id>https://foolishfox.cn/posts/202012-c.html</id>
    <published>2020-12-22T11:54:37.000Z</published>
    <updated>2021-01-05T11:45:21.270Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="最低工资与资本剥削"   >          <a href="#最低工资与资本剥削" class="heading-link"><i class="fas fa-link"></i></a>最低工资与资本剥削</h2>      <p>  最低工资法是国家制定的最低工资标准的法律，规定了劳动者在正常劳动的情况下，用人单位应当给予的最低劳动报酬，这个标准一般是根据劳动者的最低生活需要来制定的。而以薛兆丰为代表的一帮自由主义经济学家发表言论称：</p><blockquote><p>最低工资法是世界上最典型的法定福利，这种硬性规定的后果，是低薪工人失业<br />用命令或法律来规定工资和福利的高低，就是枉费心机</p></blockquote><a id="more"></a>        <h3 id="材料"   >          <a href="#材料" class="heading-link"><i class="fas fa-link"></i></a>材料</h3>      <ol><li><span class="exturl"><a class="exturl__link"   href="http://xuezhaofeng.com/blog/?p=33" >最低工资法不可取-薛兆丰</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="http://xuezhaofeng.com/blog/?p=833" >为什么反对最低工资制度</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>（见第十点）</li><li><span class="exturl"><a class="exturl__link"   href="http://money.163.com/special/0025404U/zuidigongzihairen.html" >最低工资法以善意伤害穷人</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2020/12/Propic.png"  alt="截图" />      </li></ol><p>  首先应该明白这一段话只是这些人的一家之言，没有充分的现实依据作为支撑。例如美国在1967至1969年间的最低工资标准是历史最高的，而同一时期的失业率低于4%，属于历史上低水平。而薛兆丰等人以某些年份的某些样本为证据，试图说明最低工资会影响到就业与贫困，是以点带面的行为。</p><p>  为了说明这一类观点是错误的，就应该先了解他的逻辑。材料认为<strong>市场的供需是劳动力价格的惟一决定因素</strong>，而<strong>供需曲线</strong>证明最低工资将增加失业：劳动力作为<strong>商品</strong>（劳动力商品），如果商品提价了，企业或者用人单位作为<strong>顾客</strong>，购买商品的意愿就会降低，所以会雇佣更少的工人，而且<strong>劳动价值</strong>低于最低工资的人将再难以获得工作机会。</p>        <h3 id="市场经济三大规律"   >          <a href="#市场经济三大规律" class="heading-link"><i class="fas fa-link"></i></a>市场经济三大规律</h3>      <p>  马克思主义认为<strong>市场经济有三大规律</strong>：</p><ol><li>价值规律，由马克思在《哲学的贫困》一书中被阐明，它是指人类工作产品的经济交换的规范法则：产品在贸易中的相对的交换价值，通常被表示为金钱-价格，是与人类劳动时间的平均值成比例的，生产这些产品的人类劳动在当前社会是必要的，所以<strong>价值量由人类劳动的平均量决定</strong>。</li><li>价格规律，即供求规律。<strong>供求调节着市场价格, 或者确切地说, 调节着市场价格同市场价值的偏离</strong>。</li><li>价值决定价格规律。价格是现象，是价值的本质具象化的产物。价值量由人类劳动的平均量决定，而商品的交换价值（或者说价格）的波动是被它们的价值所控制，本质上是由资本主义的内在规律支配。从劳动价值理论出发，可以知道<strong>价值是价格围绕着运动的重心, 价格的不断涨落也是围绕着这个重心来拉平的</strong>。</li></ol><p>  由此出发，决定劳动力商品价格的应当是价值，而非市场的供需。所以材料中从<strong>供需曲线决定论</strong>出发来分析得到的结论也是不可取的。</p>        <h3 id="劳动力商品"   >          <a href="#劳动力商品" class="heading-link"><i class="fas fa-link"></i></a>劳动力商品</h3>      <p>  另外<strong>劳动力商品的价值是由维持和延续劳动力所必须的生活资料的价值决定的，是由生产和再生产自身劳动力商品所消耗的生活资料的价值决定的</strong>。在现实情况中劳动力的价格或者说工资水平一般是低于，甚至是远远低于其价值，因为资本家攫取了工人的剩余价值以谋得利润，而材料试图以供求关系压低工资（或者劳动力商品的价格）来掩盖资本家对工人的剥削：<strong>资本家们凭借对生产资料的垄断权在对抗性生产关系无偿占有了生产者的剩余价值</strong>。</p><p>  材料中还认为最低工资是典型的“法定福利”，但实际上最低工资仅仅只是满足人的基本生存需要，这正是前文所提及的劳动力商品的价值的一部分，因此劳动价值低于最低工资的人难以找到工作的说法也是不成立的。</p><p>  事实上低薪工人的失业本质是因为资本家不愿放弃剩余价值：就资本主义社会而言，<strong>只要是资本，就会追求价值增殖</strong>（即剩余价值的生产），<strong>其外在表现形式就是利润</strong>。而为了实现价格增值，资本就要从劳动者、生产者手中获取剩余价值，就要无偿占用工人的剩余劳动，这种<strong>资本家占有剩余价值的行为，就是资本对劳动的经济剥削</strong>，所以<strong>资本的增殖属性就带有剥削属性，不能将二者割裂开来</strong>。</p><p>  为了能够剥削剩余价值，<strong>资本必须雇佣劳动，或必须与工人发生雇佣劳动关系</strong>，没有雇佣劳动就没有资本家。如果站在生产关系的高度看这种雇佣劳动，它就是<strong>死劳动对活劳动的一种单向度且不平等的权力支配关系</strong>，这种支配关系构成资本主义生产关系的内容。</p><p>  马克思说：</p><blockquote><p>工人生产的财富越多，他的产品力量和数量越大，他就越贫穷。工人创造的产品越多，他就变成廉价的商品。物的世界的增值同人的世界的贬值成正比。</p></blockquote><p>  实际上，<strong>工资是异化劳动的直接结果</strong>。在资本家与劳动者的关系中，劳动者并不是在为自己劳动，生产出来的劳动产品不属于劳动者自身，而属于所谓的“产权”所有者，劳动仅仅是劳动者个人的生活手段，用以维持自己的生存，这造成了人和自己的类本质相异化，使人不成其为人。</p>        <h3 id="政治与经济因素"   >          <a href="#政治与经济因素" class="heading-link"><i class="fas fa-link"></i></a>政治与经济因素</h3>      <p>  材料中还有一句话：</p><blockquote><p>用命令或法律来规定工资和福利的高低，就是枉费心机</p></blockquote><p>  从马克思主义的观点来看，法律和工资、福利等是政治或者经济的具体因素，<strong>越是具体，政治因素和经济因素往往相互作⽤</strong>。政治因素可以先于或者晚于某种具体的政治⾏为⽽出现，<strong>不存在谁决定谁，是双向影响关系</strong>。所以枉费心机一词也没有道理。</p><p>  假设没有最低工资法的存在，资本家对于工人的优势，再加上资本本身的逐利性，资本家会追求以更低的工资雇佣更少的人（哪怕他们知道这样会导致消费水平降低），产生糟糕的结果。</p><p>  现行的最低工资也有不足。工人的总收入除了工资之外还有各种福利，如果硬性规定了最低工资水平，贪图剩余价值的资本将会想方设法地从其他方面削减支出，最终可能导致工人的总收入降低，所以这还需要劳动法的进一步完善与更加详细的制约。</p><p>  劳动力不单纯是生产要素，也不是资本中的商品，而应该被看成需要全面发展的人本身，这是马克思主义政治经济学的观点。随着社会的发展，逐步过渡到社会主义与共产主义，劳动力会逐渐去商品化，使人回归人的本质，使人成其为人。</p>        <h2 id="后记"   >          <a href="#后记" class="heading-link"><i class="fas fa-link"></i></a>后记</h2>      <p>  这是本人在学习马克思主义基本原理概论课程后的课程报告，体现的是本人对材料的看法、认识，稍显幼稚，肯定有很多不当、偏颇之处，欢迎批评指正，拒绝抬杠谩骂。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;最低工资与资本剥削&quot;   &gt;
          &lt;a href=&quot;#最低工资与资本剥削&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;最低工资与资本剥削&lt;/h2&gt;
      
&lt;p&gt;  最低工资法是国家制定的最低工资标准的法律，规定了劳动者在正常劳动的情况下，用人单位应当给予的最低劳动报酬，这个标准一般是根据劳动者的最低生活需要来制定的。而以薛兆丰为代表的一帮自由主义经济学家发表言论称：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最低工资法是世界上最典型的法定福利，这种硬性规定的后果，是低薪工人失业&lt;br /&gt;
用命令或法律来规定工资和福利的高低，就是枉费心机&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="随记" scheme="https://foolishfox.cn/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="马克思主义" scheme="https://foolishfox.cn/tags/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89/"/>
    
    <category term="资本" scheme="https://foolishfox.cn/tags/%E8%B5%84%E6%9C%AC/"/>
    
  </entry>
  
</feed>
