<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fox Home</title>
  
  <subtitle>清疚</subtitle>
  <link href="https://foolishfox.cn/atom.xml" rel="self"/>
  
  <link href="https://foolishfox.cn/"/>
  <updated>2021-04-07T04:16:39.966Z</updated>
  <id>https://foolishfox.cn/</id>
  
  <author>
    <name>liuyihui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客服务器迁移过程</title>
    <link href="https://foolishfox.cn/posts/202103-move.html"/>
    <id>https://foolishfox.cn/posts/202103-move.html</id>
    <published>2021-03-30T12:03:44.000Z</published>
    <updated>2021-04-07T04:16:39.966Z</updated>
    
    <content type="html"><![CDATA[    <div class="note-plugin info">      <span class="note-plugin__icon note-plugin__icon--info">              <i class="fas fa-info-circle"></i>            </span>      <p><strong>Info</strong><br />本文记录迁移过程备忘，方便后面再次迁移</p>    </div>          <h1 id="前言"   >          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>      <p>  阿里云ECS学生机要过期了，由于自己曾经升级过ECS的带宽（从1M到3M），所以不能享受续费优惠，无奈之下，只能选择进行服务器迁移。备选的方案有腾讯云CVM、阿里云轻量应用服务器和硅云ECS。</p><span id="more"></span><p>  硅云最早被Pass，毕竟和前面两家大厂相比不论是产品可选择性还是可靠性都略显不足，只能放在次要选择。腾讯云有学生优惠，2H4G3M服务器400+一年，还可以同样价格续费，很实惠。不过最终综合价格和便捷，还是选择了阿里云，初购96/年的轻量应用服务器，毕竟我的RDS数据库和OSS（被我用又拍云云储存顶替了）都是阿里云的。</p>        <h1 id="准备"   >          <a href="#准备" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#准备"></a> 准备</h1>      <p>  买好服务器后，首先配置一下shh免密码登录，方便后面的过程进行。<br />  下一步查看一下有哪些东西需要进行迁移。我的服务都已经添加了监控，可以直接在<span class="exturl"><a class="exturl__link"   href="https://status.foolishfox.cn/" >监控-服务</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>看到：<br />        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2021/03/20210330202813.png"  alt="" />      <br />  仔细清点过后，需要进行迁移的服务有：</p><ul><li>API-Img: 图片、视频等静态文件API，阿里云OSS -&gt; 又拍云云储存</li><li>API-Waline: 评论后台，ECS -&gt; swas</li><li>Site-Blog: 博客主体，ECS -&gt; swas</li><li>Site-Editor: 在线编辑器，ECS -&gt; swas</li><li>Site-Guard: ServerStatus，ECS -&gt; swas</li><li>Site-Travel: 旅行地图，ECS -&gt; swas</li></ul>        <h1 id="迁移"   >          <a href="#迁移" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#迁移"></a> 迁移</h1>              <h2 id="api-img"   >          <a href="#api-img" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#api-img"></a> API-Img</h2>      <p>  根据又拍云文档创建云储存服务，更改img.foolishfox.cn的CNAME的解析，备份文件即可。</p>        <h2 id="site-blog"   >          <a href="#site-blog" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#site-blog"></a> Site-Blog</h2>      <p>  又进行一次之前的迁移，可以看之前的<a href="/posts/202012-heog.html">文章</a>。<br />  为了方便下一步的安装，可以选择安装<code>n</code>进行<code>Node.js</code>的版本管理，另外还可以更改<code>npm</code>源为淘宝源，加快下载、安装速度。<br />        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2021/03/20210330204237.png"  alt="" />      </p>        <h2 id="site-editor"   >          <a href="#site-editor" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#site-editor"></a> Site-Editor</h2>      <p>  进行了上一步之后，服务器已经安装好了<code>Node.js</code>环境，剩下的只需要安照<span class="exturl"><a class="exturl__link"   href="https://winwin_2011.gitee.io/winwin-hexo-editor/" >文档</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>安装即可。<br />  使用<code>pm2</code>启动后，需要设置<code>Nginx</code>反向代理，方便通过域名进行访问。例如<code>winwin-hexo-editor</code>运行在8900端口，设置<code>write.foolishfox.cn</code>的反向代理为<code>127.0.0.1:8900</code>。</p>        <h2 id="site-guard"   >          <a href="#site-guard" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#site-guard"></a> Site-Guard</h2>      <p>  ServerStatus一开始是一个老外的项目，可以理解为多服务器探针、多服务器云监控。后来国人进行了汉化和修改，我这里使用的是<span class="exturl"><a class="exturl__link"   href="https://github.com/nyawork/" >nyawork</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>开发的<span class="exturl"><a class="exturl__link"   href="https://github.com/nyawork/ServerStatus-Hotaru" >ServerStatus-Hotaru</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>版本。安装十分简单，只需要下载好文件，按照步骤进行即可。</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~<span class="comment"># wget https://raw.githubusercontent.com/nyawork/ServerStatus-Hotaru/master/status.sh</span></span><br><span class="line">root@vultr:~<span class="comment"># chmod +x status.sh</span></span><br></pre></td></tr></table></div></figure><p>  因为要从Github下载文件，所以安装速度比较慢。例如下载<code>master.zip</code>，可以打开<code>status.sh</code>文件找到下载链接，下载好之后更改文件名为<code>master.zip</code>，再上传到<code>/tmp</code>文件夹下，这样速度会快很多。除了<code>master.zip</code>，还有一个文件是<code>jq</code>，事先创建好<code>/usr/local/ServerStatus</code>文件夹，将下载好的文件重命名后放在该文件下。<br />        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2021/03/20210330205244.png"  alt="" />      <br />  要修改的话，可以直接更改<code>/usr/local/ServerStatus/server/config.json</code>文件，重启<code>status.sh</code>即可。</p>        <h2 id="site-travel"   >          <a href="#site-travel" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#site-travel"></a> Site-Travel</h2>      <p>  <span class="exturl"><a class="exturl__link"   href="https://github.com/yc111/footprint" >footprint</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>是由<span class="exturl"><a class="exturl__link"   href="https://github.com/yc111/" >yc111</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>开发的利用echarts展示旅行足迹的项目。前面已经配置好了<code>Node.js</code>环境，只需安装依赖即可运行。然后设置Nginx反向目录代理，将<code>api.foolishfox.cn/travel</code>指向<code>127.0.0.1:1024</code>。</p>        <h2 id="api-waline"   >          <a href="#api-waline" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#api-waline"></a> API-Waline</h2>      <p>  <span class="exturl"><a class="exturl__link"   href="https://waline.js.org/" >waline</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>是由<span class="exturl"><a class="exturl__link"   href="https://github.com/lizheming" >lizheming</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>开发的博客评论系统，是最难配置的一部分。Waline有多达48钟部署方式，下面介绍两种部署方式：</p>        <h3 id="docker"   >          <a href="#docker" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#docker"></a> Docker</h3>      <p>  由于有自己的服务器和数据库，最开始选择了Waline/client+Docker+MySQL的方式进行部署。</p><ol><li>修改<code>Node.js</code>淘宝源</li><li>构建镜像</li></ol><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/lizheming/waline.git</span><br><span class="line"><span class="built_in">cd</span> waline</span><br><span class="line">docker build -t lizheming/waline -f packages/server/Dockerfile .</span><br></pre></td></tr></table></div></figure><ol start="3"><li>修改配置<code>packages/client/.env</code></li></ol><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">SKIP_PREFLIGHT_CHECK&#x3D;true</span><br><span class="line"></span><br><span class="line">MYSQL_HOST&#x3D;rm-*.mysql.rds.aliyuncs.com</span><br><span class="line">MYSQL_DB&#x3D;comments</span><br><span class="line">MYSQL_USER&#x3D;hexo</span><br><span class="line">MYSQL_PASSWORD&#x3D;password</span><br><span class="line"></span><br><span class="line">AKISMET_KEY&#x3D;guess</span><br><span class="line"></span><br><span class="line">SITE_NAME&#x3D;Fox Home</span><br><span class="line">SITE_URL&#x3D;https:&#x2F;&#x2F;foolishfox.cn</span><br><span class="line">AUTHOR_EMAIL&#x3D;fox@foolishfox.cn</span><br><span class="line"></span><br><span class="line">SC_KEY&#x3D;what</span><br><span class="line"></span><br><span class="line">SMTP_HOST&#x3D;smtp.ym.163.com</span><br><span class="line">SMTP_PORT&#x3D;465</span><br><span class="line">SMTP_USER&#x3D;fox@foolishfox.cn</span><br><span class="line">SMTP_PASS&#x3D;password</span><br><span class="line">SENDER_NAME&#x3D;fox</span><br><span class="line">SENDER_EMAIL&#x3D;fox@foolishfox.cn</span><br></pre></td></tr></table></div></figure><ol start="4"><li>运行镜像</li></ol><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --env-file ./packages/client/.env -p 8360:8360 -d lizheming/waline</span><br></pre></td></tr></table></div></figure><ol start="5"><li>设置反向目录代理，将<code>api.foolishfox.cn/waline</code>指向<code>127.0.0.1:8360</code></li></ol>        <h3 id="独立部署"   >          <a href="#独立部署" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#独立部署"></a> 独立部署</h3>      <p>  为了方便对配置进行修改，不需要更新镜像的原因，后来弃用了Docker部署，改为直接使用<code>Node.js</code>运行。</p><ol><li>安装waline</li></ol><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir walinejs &amp;&amp; <span class="built_in">cd</span> walinejs</span><br><span class="line">cnpm install @waline/vercel --save</span><br></pre></td></tr></table></div></figure><ol start="2"><li>编辑<code>.bashrc</code>，添加环境变量，最好将字符串用<code>&quot;</code>或者<code>'</code>包起来，避免<code>$</code>、<code>&amp;</code>等字符的影响</li></ol><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MYSQL_HOST&#x3D;&#39;rm-*.mysql.rds.aliyuncs.com&#39;</span><br><span class="line">...</span><br><span class="line">SENDER_EMAIL&#x3D;&#39;fox@foolishfox.cn&#39;</span><br></pre></td></tr></table></div></figure><ol start="3"><li>创建软链接，方便后续操作</li></ol><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s node_modules/@waline/vercel ./waline</span><br><span class="line"><span class="built_in">cd</span> waline</span><br></pre></td></tr></table></div></figure><ol start="4"><li>配置服务端<code>vim config.js</code></li></ol><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    secureDomains: [</span><br><span class="line">        <span class="string">&#x27;foolishfox.cn&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;api.foolishfox.cn&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    forbiddenWords: [</span><br><span class="line">        <span class="string">&#x27;空包&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;快递&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;下单&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    disallowIPList: [</span><br><span class="line">        <span class="string">&#x27;8.8.8.8&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></div></figure><ol start="5"><li>修改主程序<code>vanilla.js</code></li></ol><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> Application = <span class="built_in">require</span>(<span class="string">&#x27;thinkjs&#x27;</span>);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">let</span> config = &#123;&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    config = <span class="built_in">require</span>(<span class="string">&#x27;./config.js&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span>(e) &#123;&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></div></figure><ol start="6"><li>使用pm2运行程序</li></ol><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g pm2</span><br><span class="line">pm2 start vanilla.js --name waline</span><br></pre></td></tr></table></div></figure><ol start="7"><li>设置反向目录代理，将<code>api.foolishfox.cn/waline</code>指向<code>127.0.0.1:8360</code></li></ol>        <h1 id="参考资料"   >          <a href="#参考资料" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1>      <ol><li><span class="exturl"><a class="exturl__link"   href="https://segmentfault.com/a/1190000023054090" >Windows SSH 免密登录详解</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><a href="/posts/202012-heog.html">从WordPress搬迁——使用Hexo搭建博客</a></li><li><span class="exturl"><a class="exturl__link"   href="https://newsn.net/say/node-n.html" >如何利用n轻松切换nodejs的版本</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://winwin_2011.gitee.io/winwin-hexo-editor/" >winwin-hexo-editor</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://github.com/nyawork/ServerStatus-Hotaru" >ServerStatus-Hotaru</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://github.com/yc111/footprint" >footprint</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://waline.js.org/" >waline</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ol>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;note-plugin info&quot;&gt;
      &lt;span class=&quot;note-plugin__icon note-plugin__icon--info&quot;&gt;
              &lt;i class=&quot;fas fa-info-circle&quot;&gt;&lt;/i&gt;
            &lt;/span&gt;
      &lt;p&gt;&lt;strong&gt;Info&lt;/strong&gt;&lt;br /&gt;本文记录迁移过程备忘，方便后面再次迁移&lt;/p&gt;
    &lt;/div&gt;
  

        &lt;h1 id=&quot;前言&quot;   &gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
      
&lt;p&gt;  阿里云ECS学生机要过期了，由于自己曾经升级过ECS的带宽（从1M到3M），所以不能享受续费优惠，无奈之下，只能选择进行服务器迁移。备选的方案有腾讯云CVM、阿里云轻量应用服务器和硅云ECS。&lt;/p&gt;</summary>
    
    
    
    <category term="随记" scheme="https://foolishfox.cn/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="blog" scheme="https://foolishfox.cn/tags/blog/"/>
    
    <category term="软件" scheme="https://foolishfox.cn/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="安装" scheme="https://foolishfox.cn/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="github" scheme="https://foolishfox.cn/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>AE9/AP9/SPM | GUI使用</title>
    <link href="https://foolishfox.cn/posts/202103-ae9-4.html"/>
    <id>https://foolishfox.cn/posts/202103-ae9-4.html</id>
    <published>2021-03-02T08:17:03.000Z</published>
    <updated>2021-03-06T09:39:25.000Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="概述"   >          <a href="#概述" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1>      <p>  <code>Ae9Ap9Gui.exe</code>提供了一个简单的图形用户界面前端，使用<code>CmdLineAe9Ap9.exe</code>运行模型。根据用户界面中的选择，将生成具有相应参数设置的输入文件，然后运行模型，可能会生成计算结果的二维图。</p><span id="more"></span><p>  对于每一次模型的运行，用户需要指定<code>Run Name</code>作为文件名前缀，<code>Run Directory</code>作为保存输出文件的目录，分别默认为<code>Run1</code>和<code>Run</code>。文件名前缀会影响输入和输出文件，输出目录通常是<code>Ae9Ap9Gui.exe</code>的相对目录，但可以是绝对目录路径。</p>    <div class="note-plugin info">      <span class="note-plugin__icon note-plugin__icon--info">              <i class="fas fa-info-circle"></i>            </span>      <p><strong>Tip</strong><br />可以使用环境变量</p>    </div>  <p>  GUI使用用户指定的配置文件来定义模型数据库文件，并记录GUI的使用状态。如果不存在配置文件，将会自动生成默认的配置文件，路径为：<code>%AppData%/Ae9Ap9/Gui_v1.50.ini</code>.<br />  GUI窗口右上角的<code>Config</code>菜单按钮允许用户修改配置，还可以选择将所有GUI项目重置为默认设置。如果需要，可以更新模型数据库或者目录设置。在非必要的情况下，推荐仅使用模型随附的数据库文件。</p>    <div class="note-plugin info">      <span class="note-plugin__icon note-plugin__icon--info">              <i class="fas fa-info-circle"></i>            </span>      <p><strong>Tip</strong><br />GUI对高分辨率屏幕的适配很差，可以参考<span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/QXK2001/article/details/51296819" >修改windows10在高分屏下的应用的dpi</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>解决</p>    </div>  <p>  如果使用快捷方式，则GUI可能会从二进制可执行文件目录以外的其他目录启动。模型数据库配置将需要修改，将默认相对路径更改为绝对路径。除非指定了采用绝对路径的<code>Run Directory</code>，否则将相对于该起始目录生成模型运行文件。先前生成的模型运行输入文件中的设置可用于初始化GUI状态，在命令行上将运行目录和名称指定为参数：</p><figure class="highlight powershell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ae9Ap9Gui [&lt;<span class="type">RunDirectory</span>&gt; &lt;<span class="type">RunName</span>&gt;]</span><br></pre></td></tr></table></div></figure><p>  GUI拥有三个选项卡式页面，分别为<code>Satellite</code>，<code>Model</code>和<code>Plot</code>：在<code>Satellite</code>页面可以定义轨道路径，在<code>Model</code>页面可以模型参数，在<code>Plot</code>页面可以显示模型运行的结果。</p>        <h1 id="satellite-tab"   >          <a href="#satellite-tab" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#satellite-tab"></a> Satellite Tab</h1>      <p>  该页面设置用于定义在特定时间段和增量内沿卫星轨道路径计算辐射环境模型值的时间和轨道位置的参数。<br />        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2021/03/Satellite.png"  alt="" />      </p>        <h2 id="orbit-specification-type"   >          <a href="#orbit-specification-type" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#orbit-specification-type"></a> Orbit Specification Type</h2>      <p>  在这里可以选择用不同的类型指定轨道，在界面右侧的<code>Ephemeris File Content</code>会显示相应的需要设定的参数。</p><p>  如果需要使用现有的星历文件，选择<code>Ephemeris (Time+Pos)</code>模式，然后在<code>Input File</code>中输入文件路径。为了使<code>CmdLineAe9Ap9.exe</code>正确处理此文件中包含的时间和位置信息，必须在右侧的<code>Time Format</code>中指定其格式。除此之外，右侧还可以设置坐标系和数据分割符。</p>    <div class="note-plugin warning">      <span class="note-plugin__icon note-plugin__icon--warning">              <i class="fas fa-exclamation-circle"></i>            </span>      <p><strong>Warn</strong><br />请注意，日期必须在1950年1月1日至2049年12月31日的范围内，对应简化儒略日(Modified Julian Date, MJD)的范围是：33282.0 – 69806.9999</p>    </div>          <h2 id="ephemeris-file-content"   >          <a href="#ephemeris-file-content" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#ephemeris-file-content"></a> Ephemeris File Content</h2>      <p>  位于右侧的是用户界面控件，可以指定现有星历文件的时间格式，坐标系、单位以及数据列定界符。受支持的时间格式和坐标系见后表，受支持的数据定界符为逗号，空格和制表符。</p>        <h1 id="model-tab"   >          <a href="#model-tab" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#model-tab"></a> Model Tab</h1>              <h1 id="plot-tab"   >          <a href="#plot-tab" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#plot-tab"></a> Plot Tab</h1>      ]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;   &gt;
          &lt;a href=&quot;#概述&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
      
&lt;p&gt;  &lt;code&gt;Ae9Ap9Gui.exe&lt;/code&gt;提供了一个简单的图形用户界面前端，使用&lt;code&gt;CmdLineAe9Ap9.exe&lt;/code&gt;运行模型。根据用户界面中的选择，将生成具有相应参数设置的输入文件，然后运行模型，可能会生成计算结果的二维图。&lt;/p&gt;</summary>
    
    
    
    <category term="AE9/AP9/SPM" scheme="https://foolishfox.cn/categories/AE9-AP9-SPM/"/>
    
    
    <category term="科普" scheme="https://foolishfox.cn/tags/%E7%A7%91%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>AE9/AP9/SPM | 输出数据</title>
    <link href="https://foolishfox.cn/posts/202102-ae9-3.html"/>
    <id>https://foolishfox.cn/posts/202102-ae9-3.html</id>
    <published>2021-02-28T14:55:22.000Z</published>
    <updated>2021-03-02T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<style>.content-wrap--noside {  width: 95%;  margin: 0 auto;}</style>        <h2 id="输出文件结构"   >          <a href="#输出文件结构" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#输出文件结构"></a> 输出文件结构</h2>      <p>  模型输出文件的名称主要由由输入文件中的<code>OutFile</code>和<code>FluxOut</code>参数决定，部分可选的输入文件参数参数值会影响后缀，在这种情况下，每个输出文件都有唯一的文件名，该文件名还可以提供内容的描述信息。</p><span id="more"></span><style type="text/css">table.tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #729ea5;border-collapse: collapse;}table.tftable th {background-color:#acc8cc;border-width: 1px;padding: 8px;border-style: solid;border-color: #729ea5;text-align: center;}table.tftable tr {background-color:#ffffff;}table.tftable td {border-width: 1px;padding: 8px;border-style: solid;border-color: #729ea5;text-align: center;}</style><div class="table-container"><table id="tfhover" class="tftable" border="1"><tr><th>前缀</th><th>数据模式(由FluxOut决定)</th><th>数据类型(见下表)</th><th>Percentile, Scenario or Aggregation Id(由FluxOut和Aggregate决定)</th><th>文件拓展名</th></tr><tr><td rowspan="4">OutFile(不带文件拓展名)</td><td>_mean</td><td rowspan="4">由*Out和AccumMode决定</td><td>-n/a- for mean</td><td rowspan="4">OutFile的文件拓展名(默认为txt)</td></tr><tr><td>_pctile</td><td>_## (percentile, in <FluxOut> value)</td></tr><tr><td rowspan="2">_pert<br />_mc</td><td>_### (scenario identification #)</td></tr><tr><td>_agg_mean (usage is discouraged)<br />_conf_level_##</td></tr></table></div><div class="table-container"><table id="tfhover" class="tftable" border="1"><tr><th>AccumMode数据类型</th><th>Cumul</th><th>Interval</th><th>Full</th><th>Boxcar</th><th>Expon</th></tr><tr><td>Flux</td><td>_flux</td><td>_fluxIntvAvg</td><td>_fluxFullAvg</td><td>_fluxRunAvg</td><td>_fluxExpAvg</td></tr><tr><td>Fluence</td><td>_fluence</td><td>_fluenceIntv</td><td>_fluenceFull</td><td rowspan="3" colspan="2">- - - - - - -</td></tr><tr><td>DoseRate</td><td>_doserate</td><td>_doserateIntvAvg</td><td>_doserateFullAvg</td></tr><tr><td>DoseAccum</td><td>_doseaccum</td><td>_doseaccumIntv</td><td>_doseaccumFull</td></tr></table></div><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2021/03/outconfig.jpg"  alt="" />      </p><p style="margin: 0 auto;font-size: 14px;min-width: 100px;text-align: center;"><b><scan>Fig1. input file</scan></b></p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2021/03/outfile.jpg"  alt="" />      </p><p style="margin: 0 auto;font-size: 14px;min-width: 100px;text-align: center;"><b><scan>Fig2. output files</scan></b></p>        <h2 id="数据转化"   >          <a href="#数据转化" class="heading-link"><i class="fas fa-link"></i></a><a class="markdownIt-Anchor" href="#数据转化"></a> 数据转化</h2>      <p>  可以使用<code>ConvertToXlsx.py</code>，将生成的ASCII输出文件转换为Microsoft Excel格式的相应文件，该文件还能够转换生成的ASCII星历表、绝热不变输出文件以及由GUI应用程序生成的绘图文件。要运行该文件，需要在电脑上安装的Python版本不低于2.5，并且安装了<code>XlsxWriter</code>、<code>numpy</code>模块：</p><figure class="highlight powershell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ConvertToXlsx.py &lt;filename1&gt; [&lt;<span class="type">filename2</span>&gt; … &lt;<span class="type">filenameN</span>&gt;]</span><br></pre></td></tr></table></div></figure><p>  生成的<code>*.xlsx</code>文件与输入文件位于同一目录中，文件头信息保留在新生成的Excel文件中。</p>]]></content>
    
    
    <summary type="html">&lt;style&gt;
.content-wrap--noside {
  width: 95%;
  margin: 0 auto;
}
&lt;/style&gt;

        &lt;h2 id=&quot;输出文件结构&quot;   &gt;
          &lt;a href=&quot;#输出文件结构&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#输出文件结构&quot;&gt;&lt;/a&gt; 输出文件结构&lt;/h2&gt;
      
&lt;p&gt;  模型输出文件的名称主要由由输入文件中的&lt;code&gt;OutFile&lt;/code&gt;和&lt;code&gt;FluxOut&lt;/code&gt;参数决定，部分可选的输入文件参数参数值会影响后缀，在这种情况下，每个输出文件都有唯一的文件名，该文件名还可以提供内容的描述信息。&lt;/p&gt;</summary>
    
    
    
    <category term="AE9/AP9/SPM" scheme="https://foolishfox.cn/categories/AE9-AP9-SPM/"/>
    
    
    <category term="科普" scheme="https://foolishfox.cn/tags/%E7%A7%91%E6%99%AE/"/>
    
  </entry>
  
</feed>
