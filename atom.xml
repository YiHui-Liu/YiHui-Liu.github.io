<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fox Home</title>
  
  <subtitle>清疚</subtitle>
  <link href="https://foolishfox.cn/atom.xml" rel="self"/>
  
  <link href="https://foolishfox.cn/"/>
  <updated>2020-12-23T04:26:56.471Z</updated>
  <id>https://foolishfox.cn/</id>
  
  <author>
    <name>liuyihui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>最低工资与资本剥削</title>
    <link href="https://foolishfox.cn/posts/202012-c.html"/>
    <id>https://foolishfox.cn/posts/202012-c.html</id>
    <published>2020-12-22T11:54:37.000Z</published>
    <updated>2020-12-23T04:26:56.471Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="最低工资与资本剥削"   >          <a href="#最低工资与资本剥削" class="heading-link"><i class="fas fa-link"></i></a>最低工资与资本剥削</h2>      <p>  最低工资法是国家制定的最低工资标准的法律，规定了劳动者在正常劳动的情况下，用人单位应当给予的最低劳动报酬，这个标准一般是根据劳动者的最低生活需要来制定的。而以薛兆丰为代表的一帮自由主义经济学家发表言论称：</p><blockquote><p>最低工资法是世界上最典型的法定福利，这种硬性规定的后果，是低薪工人失业<br />用命令或法律来规定工资和福利的高低，就是枉费心机</p></blockquote><a id="more"></a>        <h3 id="材料"   >          <a href="#材料" class="heading-link"><i class="fas fa-link"></i></a>材料</h3>      <ol><li><span class="exturl"><a class="exturl__link"   href="http://xuezhaofeng.com/blog/?p=33" >最低工资法不可取-薛兆丰</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="http://xuezhaofeng.com/blog/?p=833" >为什么反对最低工资制度</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>（见第十点）</li><li><span class="exturl"><a class="exturl__link"   href="http://money.163.com/special/0025404U/zuidigongzihairen.html" >最低工资法以善意伤害穷人</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2020/12/Propic.png"  alt="截图" />      </li></ol><p>  首先应该明白这一段话只是这些人的一家之言，没有充分的现实依据作为支撑。例如美国在1967至1969年间的最低工资标准是历史最高的，而同一时期的失业率低于4%，属于历史上低水平。而薛兆丰等人以某些年份的某些样本为证据，试图说明最低工资会影响到就业与贫困，是以点带面的行为。</p><p>  为了说明这一类观点是错误的，就应该先了解他的逻辑。材料认为<strong>市场的供需是劳动力价格的惟一决定因素</strong>，而<strong>供需曲线</strong>证明最低工资将增加失业：劳动力作为<strong>商品</strong>（劳动力商品），如果商品提价了，企业或者用人单位作为<strong>顾客</strong>，购买商品的意愿就会降低，所以会雇佣更少的工人，而且<strong>劳动价值</strong>低于最低工资的人将再难以获得工作机会。</p>        <h3 id="市场经济三大规律"   >          <a href="#市场经济三大规律" class="heading-link"><i class="fas fa-link"></i></a>市场经济三大规律</h3>      <p>  马克思主义认为<strong>市场经济有三大规律</strong>：</p><ol><li>价值规律，由马克思在《哲学的贫困》一书中被阐明，它是指人类工作产品的经济交换的规范法则：产品在贸易中的相对的交换价值，通常被表示为金钱-价格，是与人类劳动时间的平均值成比例的，生产这些产品的人类劳动在当前社会是必要的，所以<strong>价值量由人类劳动的平均量决定</strong>。</li><li>价格规律，即供求规律。<strong>供求调节着市场价格, 或者确切地说, 调节着市场价格同市场价值的偏离</strong>。</li><li>价值决定价格规律。价格是现象，是价值的本质具象化的产物。价值量由人类劳动的平均量决定，而商品的交换价值（或者说价格）的波动是被它们的价值所控制，本质上是由资本主义的内在规律支配。从劳动价值理论出发，可以知道<strong>价值是价格围绕着运动的重心, 价格的不断涨落也是围绕着这个重心来拉平的</strong>。</li></ol><p>  由此出发，决定劳动力商品价格的应当是价值，而非市场的供需。所以材料中从<strong>供需曲线决定论</strong>出发来分析得到的结论也是不可取的。</p>        <h3 id="劳动力商品"   >          <a href="#劳动力商品" class="heading-link"><i class="fas fa-link"></i></a>劳动力商品</h3>      <p>  另外<strong>劳动力商品的价值是由维持和延续劳动力所必须的生活资料的价值决定的，是由生产和再生产自身劳动力商品所消耗的生活资料的价值决定的</strong>。在现实情况中劳动力的价格或者说工资水平一般是低于，甚至是远远低于其价值，因为资本家攫取了工人的剩余价值以谋得利润，而材料试图以供求关系压低工资（或者劳动力商品的价格）来掩盖资本家对工人的剥削：<strong>资本家们凭借对生产资料的垄断权在对抗性生产关系无偿占有了生产者的剩余价值</strong>。</p><p>  材料中还认为最低工资是典型的“法定福利”，但实际上最低工资仅仅只是满足人的基本生存需要，这正是前文所提及的劳动力商品的价值的一部分，因此劳动价值低于最低工资的人难以找到工作的说法也是不成立的。</p><p>  事实上低薪工人的失业本质是因为资本家不愿放弃剩余价值：就资本主义社会而言，<strong>只要是资本，就会追求价值增殖</strong>（即剩余价值的生产），<strong>其外在表现形式就是利润</strong>。而为了实现价格增值，资本就要从劳动者、生产者手中获取剩余价值，就要无偿占用工人的剩余劳动，这种<strong>资本家占有剩余价值的行为，就是资本对劳动的经济剥削</strong>，所以<strong>资本的增殖属性就带有剥削属性，不能将二者割裂开来</strong>。</p><p>  为了能够剥削剩余价值，<strong>资本必须雇佣劳动，或必须与工人发生雇佣劳动关系</strong>，没有雇佣劳动就没有资本家。如果站在生产关系的高度看这种雇佣劳动，它就是<strong>死劳动对活劳动的一种单向度且不平等的权力支配关系</strong>，这种支配关系构成资本主义生产关系的内容。</p><p>  马克思说：</p><blockquote><p>工人生产的财富越多，他的产品力量和数量越大，他就越贫穷。工人创造的产品越多，他就变成廉价的商品。物的世界的增值同人的世界的贬值成正比。</p></blockquote><p>  实际上，<strong>工资是异化劳动的直接结果</strong>。在资本家与劳动者的关系中，劳动者并不是在为自己劳动，生产出来的劳动产品不属于劳动者自身，而属于所谓的“产权”所有者，劳动仅仅是劳动者个人的生活手段，用以维持自己的生存，这造成了人和自己的类本质相异化，使人不成其为人。</p>        <h3 id="政治与经济因素"   >          <a href="#政治与经济因素" class="heading-link"><i class="fas fa-link"></i></a>政治与经济因素</h3>      <p>  材料中还有一句话：</p><blockquote><p>用命令或法律来规定工资和福利的高低，就是枉费心机</p></blockquote><p>  从马克思主义的观点来看，法律和工资、福利等是政治或者经济的具体因素，<strong>越是具体，政治因素和经济因素往往相互作⽤</strong>。政治因素可以先于或者晚于某种具体的政治⾏为⽽出现，<strong>不存在谁决定谁，是双向影响关系</strong>。所以枉费心机一词也没有道理。</p><p>  假设没有最低工资法的存在，资本家对于工人的优势，再加上资本本身的逐利性，资本家会追求以更低的工资雇佣更少的人（哪怕他们知道这样会导致消费水平降低），产生糟糕的结果。</p><p>  现行的最低工资也有不足。工人的总收入除了工资之外还有各种福利，如果硬性规定了最低工资水平，贪图剩余价值的资本将会想方设法地从其他方面削减支出，最终可能导致工人的总收入降低，所以这还需要劳动法的进一步完善与更加详细的制约。</p><p>  劳动力不单纯是生产要素，也不是资本中的商品，而应该被看成需要全面发展的人本身，这是马克思主义政治经济学的观点。随着社会的发展，逐步过渡到社会主义与共产主义，劳动力会逐渐去商品化，使人回归人的本质，使人成其为人。</p>        <h2 id="后记"   >          <a href="#后记" class="heading-link"><i class="fas fa-link"></i></a>后记</h2>      <p>  这是本人在学习马克思主义基本原理概论课程后的课程报告，体现的是本人对材料的看法、认识，稍显幼稚，肯定有很多不当、偏颇之处，欢迎批评指正，拒绝抬杠谩骂。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;最低工资与资本剥削&quot;   &gt;
          &lt;a href=&quot;#最低工资与资本剥削&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;最低工资与资本剥削&lt;/h2&gt;
      
&lt;p&gt;  最低工资法是国家制定的最低工资标准的法律，规定了劳动者在正常劳动的情况下，用人单位应当给予的最低劳动报酬，这个标准一般是根据劳动者的最低生活需要来制定的。而以薛兆丰为代表的一帮自由主义经济学家发表言论称：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最低工资法是世界上最典型的法定福利，这种硬性规定的后果，是低薪工人失业&lt;br /&gt;
用命令或法律来规定工资和福利的高低，就是枉费心机&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="随记" scheme="https://foolishfox.cn/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="马克思主义" scheme="https://foolishfox.cn/tags/%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89/"/>
    
    <category term="资本" scheme="https://foolishfox.cn/tags/%E8%B5%84%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>本站指引</title>
    <link href="https://foolishfox.cn/posts/202012-b.html"/>
    <id>https://foolishfox.cn/posts/202012-b.html</id>
    <published>2020-12-21T09:03:53.000Z</published>
    <updated>2020-12-21T09:14:03.900Z</updated>
    
    <content type="html"><![CDATA[<style>    blockquote {        margin: 20;        padding: 0 1rem;        border-left: 5px solid #4898dd;        background-color: var(--color-gray-200);    }</style><blockquote><strong>提示</strong><br/>如果您来自搜索引擎，可以再次使用右上角搜索内容</blockquote><p>  这里是FF的博客，访问地址为 <a href="https://foolishfox.cn">https://foolishfox.cn</a>，使用<code>Hexo</code>生成。</p><ul><li>境外部署在<code>Github Pages</code>，访问地址为：<span class="exturl"><a class="exturl__link"   href="https://yihui-liu.github.io" >https://yihui-liu.github.io</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li>境内部署在<span class="exturl"><a class="exturl__link"   href="https://www.aliyun.com/1111/new?userCode=bwlcyen4" >阿里云</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><code>ECS</code>上，使用又拍云<code>CDN</code>加速，访问地址为：<a href="https://foolishfox.cn">https://foolishfox.cn</a></li></ul><a id="more"></a>        <h3 id="订阅我"   >          <a href="#订阅我" class="heading-link"><i class="fas fa-link"></i></a>订阅我</h3>      <p>  你可以通过<span class="exturl"><a class="exturl__link"   href="https://briefcake.com/s/foolishfox" >邮件</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>或者<a href="https://foolishfox.cn/atom.xml">RSS</a>来订阅本站的内容</p>        <h3 id="关注我"   >          <a href="#关注我" class="heading-link"><i class="fas fa-link"></i></a>关注我</h3>      <p>  下面这些地方有我的足迹：</p><div class="sidebar-ov-social" style="margin: 0 auto;width: 100%;">    <a class="sidebar-ov-social-item" href="https://github.com/YiHui-Liu" target="_blank" rel="noopener" data-popover="Github" data-popover-pos="up">        <span class="sidebar-ov-social-item__icon"><i class="fab fa-github"></i>Github</span>    </a>    <a class="sidebar-ov-social-item" href="https://space.bilibili.com/439545632" target="_blank" rel="noopener" data-popover="BiliBili" data-popover-pos="up">        <span class="sidebar-ov-social-item__icon">BiliBili</span>    </a>    <a class="sidebar-ov-social-item" href="https://www.zhihu.com/people/qing-jiu-44-72-51" target="_blank" rel="noopener" data-popover="知乎" data-popover-pos="up">        <span class="sidebar-ov-social-item__icon">知乎</span>    </a>    <a class="sidebar-ov-social-item" href="https://weibo.com/u/7190631987" target="_blank" rel="noopener" data-popover="微博" data-popover-pos="up">        <span class="sidebar-ov-social-item__icon"><i class="fab fa-weibo"></i>微博</span>    </a></div>        <h3 id="动态"   >          <a href="#动态" class="heading-link"><i class="fas fa-link"></i></a>动态</h3>      <p>  每日吐槽、分享，<a href="https://foolishfox.cn/micro-blog/">戳这里</a></p>        <h3 id="系列"   >          <a href="#系列" class="heading-link"><i class="fas fa-link"></i></a>系列</h3>      <p>  关于文章的一些归类索引</p>        <h5 id="hexo"   >          <a href="#hexo" class="heading-link"><i class="fas fa-link"></i></a>Hexo</h5>      <ol><li><a href="https://foolishfox.cn/posts/202012-heog.html">从WordPress搬迁|使用Hexo搭建博客</a></li></ol>        <h5 id="科普推送"   >          <a href="#科普推送" class="heading-link"><i class="fas fa-link"></i></a>科普推送</h5>      <ol><li><a href="https://foolishfox.cn/posts/202004-d.html">星辰变_2020-03-31</a></li><li><a href="https://foolishfox.cn/posts/202004-b.html">哈勃分歧 | 1.测定</a></li><li><a href="https://foolishfox.cn/posts/202004-c.html">哈勃分歧 | 2.分析</a></li><li><a href="https://foolishfox.cn/posts/202009-a.html">星座与节气</a></li></ol>        <h5 id="大宋清平"   >          <a href="#大宋清平" class="heading-link"><i class="fas fa-link"></i></a>大宋清平</h5>      <ol><li><a href="https://foolishfox.cn/posts/202004-a.html">大宋清平 | 0.大宋之辩</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;style&gt;
    blockquote {
        margin: 20;
        padding: 0 1rem;
        border-left: 5px solid #4898dd;
        background-color: var(--color-gray-200);
    }
&lt;/style&gt;
&lt;blockquote&gt;
&lt;strong&gt;提示&lt;/strong&gt;&lt;br/&gt;
如果您来自搜索引擎，可以再次使用右上角搜索内容
&lt;/blockquote&gt;
&lt;p&gt;  这里是FF的博客，访问地址为 &lt;a href=&quot;https://foolishfox.cn&quot;&gt;https://foolishfox.cn&lt;/a&gt;，使用&lt;code&gt;Hexo&lt;/code&gt;生成。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;境外部署在&lt;code&gt;Github Pages&lt;/code&gt;，访问地址为：&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://yihui-liu.github.io&quot; &gt;https://yihui-liu.github.io&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;境内部署在&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://www.aliyun.com/1111/new?userCode=bwlcyen4&quot; &gt;阿里云&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;ECS&lt;/code&gt;上，使用又拍云&lt;code&gt;CDN&lt;/code&gt;加速，访问地址为：&lt;a href=&quot;https://foolishfox.cn&quot;&gt;https://foolishfox.cn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="公告" scheme="https://foolishfox.cn/categories/%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="指引" scheme="https://foolishfox.cn/tags/%E6%8C%87%E5%BC%95/"/>
    
  </entry>
  
  <entry>
    <title>从WordPress搬迁|使用Hexo搭建博客</title>
    <link href="https://foolishfox.cn/posts/202012-heog.html"/>
    <id>https://foolishfox.cn/posts/202012-heog.html</id>
    <published>2020-12-16T13:49:02.000Z</published>
    <updated>2020-12-17T01:44:32.477Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="前言"   >          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a>前言</h2>      <p>  之前使用了很久的WordPress，用起来很方便，但是也有一些不令我满意的地方。首先，WordPress的源在国外，更新起来很慢很不方便，只好在服务器上面搭建了一个梯子。其次，WordPress的后端加载速度实在是太慢了，有点无法忍受。而且WordPress写文章感觉也没有直接写<code>markdown</code>方便。所以，哪怕WordPress还是有很多的优点，但我还是决定放弃WordPress。</p><blockquote><p>我知道有很多方法可以优化WordPress的加载速度，帮助更新，但是很麻烦不说，也不能从根本解决</p></blockquote><a id="more"></a><p>  然后在偶然的机会下，接触到了<span class="exturl"><a class="exturl__link"   href="https://hexo.io/zh-cn/" >Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，看了一些示例文档，觉得不错，所以打算试一试，于是<strong>首先创建了一个ECS快照</strong>，防止操作失误数据丢失。然后趁此机会把服务器换回了我最常用的<code>Ubuntu</code>，安装了<code>Hexo</code>，按照教程进行之前数据的迁移和本身、主题等的配置，最终决定就用<code>Hexo</code>来搭建新博客。</p><blockquote><p>我在后面接触到了<code>Hugo</code>等其他静态博客的项目，感觉都不错，但是和<code>Hexo</code>相比没有碾压式的优越，所以也没有纠结，就继续采用<code>Hexo</code></p></blockquote>        <h2 id="安装路线"   >          <a href="#安装路线" class="heading-link"><i class="fas fa-link"></i></a>安装路线</h2>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img.foolishfox.cn/images/2020/12/hexoblog.png"  alt="流程" />      </p>        <h2 id="安装nodejs"   >          <a href="#安装nodejs" class="heading-link"><i class="fas fa-link"></i></a>安装Node.js</h2>      <p>  在安装<code>Hexo</code>之前需要安装好<code>node.js</code>。<code>Windows</code>可以直接在<span class="exturl"><a class="exturl__link"   href="https://nodejs.org/zh-cn/" >官方网站</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>下载安装包，在安装的时候要记住<strong>加入环境变量</strong>中。<code>Linux</code>用户可以从<span class="exturl"><a class="exturl__link"   href="https://github.com/nodesource/distributions" >NodeSource</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>安装。</p><blockquote><p><code>node.js</code>是基于<code>Chrome V8</code>引擎的<code>Javascript</code>运行环境，可以帮助我们在本地直接运行<code>Javascript</code>而不需要借助浏览器。</p></blockquote><p>  我在我的<code>Ubuntu</code>服务器上安装的时候，下载速度简直无法忍受，只好去安装了一个命令行版本的科学上网工具：<span class="exturl"><a class="exturl__link"   href="https://github.com/TyrantLucifer/ssr-command-client" >ssr-command-client</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>。所以推荐<code>Linux</code>用户使用下载二进制文件的方式进行安装。</p><blockquote><p>在<span class="exturl"><a class="exturl__link"   href="https://nodejs.org/en/download/" >官网</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>下载对应的二进制文件，可以在服务器使用<code>wget</code>的方式，也可以下载到本地，然后通过<code>FTP</code>工具上传。</p></blockquote><blockquote><p>下载得到的是一个<code>*.tar.xz</code>文件，使用<code>tar -xvf *.tar.zx</code>进行安装，假设安装目录为<code>/usr/local/nodejs/</code>，然后添加环境变量，可以使用软链接：<code>ln -s /usr/local/nodejs/bin/node /usr/local/bin/node</code>，最后检查一下是否安装成功：</p></blockquote><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@qjlyh:/usr/<span class="built_in">local</span>/nodejs<span class="comment"># node -v</span></span><br><span class="line">v14.15.1</span><br><span class="line">root@qjlyh:/usr/<span class="built_in">local</span>/nodejs<span class="comment"># npm -v</span></span><br><span class="line">6.14.8</span><br></pre></td></tr></table></div></figure>        <h2 id="安装git"   >          <a href="#安装git" class="heading-link"><i class="fas fa-link"></i></a>安装Git</h2>      <p>  直接下载安装包安装即可，依然注意<strong>环境变量</strong>的问题。<code>Linux</code>基本都自带了<code>git</code>，不用安装。所以关于<code>Git</code>的安装就不过多赘述。</p>        <h2 id="安装hexo"   >          <a href="#安装hexo" class="heading-link"><i class="fas fa-link"></i></a>安装Hexo</h2>      <p>  直接按照<code>Hexo</code>官网的<span class="exturl"><a class="exturl__link"   href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo" >介绍</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>安装即可：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></div></figure><p>  注意之后的操作一般都是在<code>Hexo</code>的<strong>初始化目录（或者项目根目录）下进行的</strong>。如果执行失败，可以通过以下命令更改环境变量：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27;</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></table></div></figure>        <h2 id="初始化"   >          <a href="#初始化" class="heading-link"><i class="fas fa-link"></i></a>初始化</h2>      <p>  使用下面的命令初始化你的项目文件夹，并且进入文件夹安装<code>package.json</code>中的包：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></div></figure><p>  安装完成之后，项目的文件结构如下图：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">project folder</span><br><span class="line">├── _config.yml   配置文件</span><br><span class="line">├── package.json  应用程序信息</span><br><span class="line">├── scaffolds     模板文件</span><br><span class="line">├── source        源代码</span><br><span class="line">│   ├── _drafts   草稿</span><br><span class="line">│   └── _posts    文章</span><br><span class="line">└── themes        主题</span><br></pre></td></tr></table></div></figure>        <h2 id="写博客"   >          <a href="#写博客" class="heading-link"><i class="fas fa-link"></i></a>写博客</h2>      <p>  <code>Hexo</code>本体支持<code>.md</code>和<code>.ejs</code>两种格式的文件，但是只要安装了对应的渲染器插件，例如<code>Hexo-renderer-pug</code>，就可以使用<code>.pug</code>格式进行写作。<br />  <code>scaffolds</code>文件夹以及各个主题的<code>layout</code>文件夹下，是各种页面的模板。<code>Hexo</code>自带了3个模板，都是<code>Markdown</code>格式的，分别对应草稿、文章和页面，生成新文件的命令是：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></div></figure><p>  <code>layout</code>是可选参数，代表生成什么类型（草稿、文章或者页面），默认<code>_config.yml</code>中的<code>default_layout</code>参数；<code>title</code>是文件名，生成之后<br />  <strong>官方网站有很详细的说明！多读官方文档！！！</strong></p>        <h2 id="生成"   >          <a href="#生成" class="heading-link"><i class="fas fa-link"></i></a>生成</h2>      <p>  我们写的博文源码都是<code>.md</code>或者<code>.ejs</code>一类的文件，然后通过<code>Hexo</code>按照主题的配置生成<code>html</code>、<code>css</code>和<code>js</code>文件，使用的命令如下：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo clean 可以清楚缓存（删除/public目录下所有内容）</span></span><br><span class="line">hexo generate</span><br><span class="line">hexo g</span><br></pre></td></tr></table></div></figure><p>  该命令会在根目录下生成<code>public</code>文件夹，该文件夹存储的就是网站所需要的文件了</p><blockquote><p>草稿很类似于所谓的私密文章，只有自己能够看到。如果想要将草稿发布，有两种办法：一种是直接将草稿从<code>_drafts</code>目录下移动到<code>_posts</code>目录，或者是使用<code>hexo publish [layout] &lt;title&gt;</code>的方式</p></blockquote>        <h2 id="预览"   >          <a href="#预览" class="heading-link"><i class="fas fa-link"></i></a>预览</h2>      <p>  <code>Hexo</code>可以通过内置的<code>server</code>来预览生成的网站的效果：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server --drafts</span><br><span class="line">hexo s</span><br></pre></td></tr></table></div></figure><p>  默认情况下不会显示草稿，–drafts参数可以强制显示草稿，或者是更改根目录下<code>_config.yml</code>的配置项：<code>render_drafts: true</code></p>        <h2 id="部署"   >          <a href="#部署" class="heading-link"><i class="fas fa-link"></i></a>部署</h2>      <p>  最后一步就是将你创作的内容发布，一般是通过这一个步骤将静态文件（也就是<code>public</code>文件夹）推送到<code>GitHub</code>的一个仓库中，生成<code>Github Pages</code>，首先要更改根目录下<code>_config.yml</code>的配置：</p><figure class="highlight yaml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> [<span class="string">branch</span>]</span><br></pre></td></tr></table></div></figure><p>  然后安装<code>hexo-deployer-git</code>插件，再执行下面的命令，就可以把<code>public</code>文件夹整体提交到<code>GitHub</code>的仓库中了：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">hexo d</span><br></pre></td></tr></table></div></figure>        <h2 id="qa"   >          <a href="#qa" class="heading-link"><i class="fas fa-link"></i></a>Q&amp;A</h2>      <ul><li>为什么我不在本地搭建<code>node.js</code>环境，使用<code>Github Pages</code>搭建网站？</li></ul><blockquote><p>首先是因为我不想在自己的电脑上安装太多的东西；其次是我通过阿里云的学生优惠，购买了一台ECS，尽管配置不高，但是应付我这个小站肯定是可以的，所以我想把它利用上。所以最终我才用的方案是：本机<code>VS Code</code>远程连接服务器进行写作，在服务器上进行部署，同时推送源码到<code>GitHub</code>仓库备份（强烈吹一波<code>VS Code</code>）</p></blockquote><ul><li>在本机(<code>Windows</code>)安装这些东西太麻烦，有没有什么简便的方法？</li></ul><blockquote><p>答案肯定是有的，可以使用<code>Chocolate</code>或者<code>Scoop</code>进行安装，强烈推荐这种方法，可以很方便的管理这些应用，不用担心把你的C盘搞得一团糟。后面会讲一讲我使用<code>Scoop</code>的经历</p></blockquote>        <h2 id="参考资料"   >          <a href="#参考资料" class="heading-link"><i class="fas fa-link"></i></a>参考资料</h2>      <ul><li><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/itaffy/article/details/89455342" >阿里云ECS服务器上安装nodejs</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://ccknbc.github.io/posts/hexo-toss/#%E5%AE%89%E8%A3%85-Node-js" >HEXO 折腾</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="https://hexo.io/zh-cn/docs/" >Hexo中文文档</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;   &gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;前言&lt;/h2&gt;
      
&lt;p&gt;  之前使用了很久的WordPress，用起来很方便，但是也有一些不令我满意的地方。首先，WordPress的源在国外，更新起来很慢很不方便，只好在服务器上面搭建了一个梯子。其次，WordPress的后端加载速度实在是太慢了，有点无法忍受。而且WordPress写文章感觉也没有直接写&lt;code&gt;markdown&lt;/code&gt;方便。所以，哪怕WordPress还是有很多的优点，但我还是决定放弃WordPress。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我知道有很多方法可以优化WordPress的加载速度，帮助更新，但是很麻烦不说，也不能从根本解决&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://foolishfox.cn/categories/Hexo/"/>
    
    
    <category term="blog" scheme="https://foolishfox.cn/tags/blog/"/>
    
    <category term="教程" scheme="https://foolishfox.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="github" scheme="https://foolishfox.cn/tags/github/"/>
    
  </entry>
  
</feed>
