[{"title":"本站指引","url":"/posts/202012-b.html","content":"\n    <div class=\"note-plugin info\">\n      <span class=\"note-plugin__icon note-plugin__icon--info\">\n              <i class=\"fas fa-info-circle\"></i>\n            </span>\n      <p><strong>Tips</strong><br />如果您来自搜索引擎，可以再次使用右上角搜索内容</p>\n    </div>\n  \n<p>  这里是FF的博客，访问地址为 <a href=\"https://foolishfox.cn\">https://foolishfox.cn</a>，使用<code>Hexo</code>生成。</p>\n<ul>\n<li>境外部署在<code>Github Pages</code>，访问地址为：<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://yihui-liu.github.io\" >https://yihui-liu.github.io</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li>境内部署在<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.aliyun.com/1111/new?userCode=bwlcyen4\" >阿里云</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>ECS上，使用又拍云CDN加速，访问地址为：<a href=\"https://foolishfox.cn\">https://foolishfox.cn</a></li>\n</ul>\n<span id=\"more\"></span>\n\n        <h2 id=\"订阅我\"   >\n          <a href=\"#订阅我\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#订阅我\"></a> 订阅我</h2>\n      \n<p>  你可以通过<a href=\"/atom.xml\">RSS</a>来订阅本站的内容</p>\n\n        <h2 id=\"推荐页面\"   >\n          <a href=\"#推荐页面\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#推荐页面\"></a> 推荐页面</h2>\n      \n\n        <h3 id=\"关于我\"   >\n          <a href=\"#关于我\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#关于我\"></a> 关于我</h3>\n      \n<p>  你可以通过<a href=\"/about\">这里</a>查看关于我的介绍</p>\n\n        <h3 id=\"动态\"   >\n          <a href=\"#动态\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#动态\"></a> 动态</h3>\n      \n<p>  日常吐槽、分享，<a href=\"/micro-blog/\">戳这里</a></p>\n\n        <h3 id=\"锻炼\"   >\n          <a href=\"#锻炼\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#锻炼\"></a> 锻炼</h3>\n      \n<p>  我的锻炼记录，<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://run.foolishfox.cn/\" >戳这里</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n\n        <h3 id=\"旅行\"   >\n          <a href=\"#旅行\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#旅行\"></a> 旅行</h3>\n      \n<p>  我的旅行足迹，<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://api.foolishfox.cn/travel\" >戳这里</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n\n        <h3 id=\"分享\"   >\n          <a href=\"#分享\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#分享\"></a> 分享</h3>\n      \n<p>  我读过的<a href=\"/books\">书</a>和看过的<a href=\"/movies\">电影</a></p>\n\n        <h2 id=\"文章系列\"   >\n          <a href=\"#文章系列\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#文章系列\"></a> 文章系列</h2>\n      \n\n        <h3 id=\"ae9ap9spm\"   >\n          <a href=\"#ae9ap9spm\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#ae9ap9spm\"></a> AE9/AP9/SPM</h3>\n      \n<ol>\n<li><a href=\"/posts/202102-ae9-1.html\">AE9/AP9/SPM | 介绍与安装</a></li>\n<li><a href=\"/posts/202102-ae9-2.html\">AE9/AP9/SPM | 输入文件</a></li>\n<li><a href=\"/posts/202102-ae9-3.html\">AE9/AP9/SPM | 输出数据</a></li>\n<li><a href=\"/posts/202103-ae9-4.html\">AE9/AP9/SPM | GUI使用</a></li>\n</ol>\n\n        <h3 id=\"hexo\"   >\n          <a href=\"#hexo\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#hexo\"></a> Hexo</h3>\n      \n<ol>\n<li><a href=\"/posts/202012-heog.html\">从WordPress搬迁|使用Hexo搭建博客</a></li>\n</ol>\n\n        <h3 id=\"天文\"   >\n          <a href=\"#天文\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#天文\"></a> 天文</h3>\n      \n<ol>\n<li><a href=\"/posts/202004-d.html\">夜空 | 2020-03-31</a></li>\n<li><a href=\"/posts/202004-b.html\">哈勃分歧 | 1.测定</a></li>\n<li><a href=\"/posts/202004-c.html\">哈勃分歧 | 2.分析</a></li>\n<li><a href=\"/posts/202009-a.html\">星座与节气</a></li>\n</ol>\n\n        <h3 id=\"大宋清平\"   >\n          <a href=\"#大宋清平\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#大宋清平\"></a> 大宋清平</h3>\n      \n<ol>\n<li><a href=\"/posts/202004-a.html\">大宋清平 | 0.大宋之辩</a></li>\n</ol>\n\n        <h3 id=\"ros\"   >\n          <a href=\"#ros\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#ros\"></a> ROS</h3>\n      \n<ol>\n<li><a href=\"/posts/202101-rosinstall.html\">在Ubuntu18.04安装ROS</a></li>\n</ol>\n\n        <h3 id=\"windows\"   >\n          <a href=\"#windows\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#windows\"></a> Windows</h3>\n      \n<ol>\n<li><a href=\"/posts/202101-a.html\">Windows | 包管理器Scoop的安装与使用</a></li>\n</ol>\n","categories":["随记"]},{"title":"博客服务器迁移过程","url":"/posts/202103-move.html","content":"\n    <div class=\"note-plugin info\">\n      <span class=\"note-plugin__icon note-plugin__icon--info\">\n              <i class=\"fas fa-info-circle\"></i>\n            </span>\n      <p><strong>Info</strong><br />本文记录迁移过程备忘，方便后面再次迁移</p>\n    </div>\n  \n\n        <h1 id=\"前言\"   >\n          <a href=\"#前言\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h1>\n      \n<p>  阿里云ECS学生机要过期了，由于自己曾经升级过ECS的带宽（从1M到3M），所以不能享受续费优惠，无奈之下，只能选择进行服务器迁移。备选的方案有腾讯云CVM、阿里云轻量应用服务器和硅云ECS。</p>\n<span id=\"more\"></span>\n<p>  硅云最早被Pass，毕竟和前面两家大厂相比不论是产品可选择性还是可靠性都略显不足，只能放在次要选择。腾讯云有学生优惠，2H4G3M服务器400+一年，还可以同样价格续费，很实惠。不过最终综合价格和便捷，还是选择了阿里云，初购96/年的轻量应用服务器，毕竟我的RDS数据库和OSS（被我用又拍云云储存顶替了）都是阿里云的。</p>\n\n        <h1 id=\"准备\"   >\n          <a href=\"#准备\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#准备\"></a> 准备</h1>\n      \n<p>  买好服务器后，首先配置一下shh免密码登录，方便后面的过程进行。<br />\n  下一步查看一下有哪些东西需要进行迁移。我的服务都已经添加了监控，可以直接在<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://status.foolishfox.cn/\" >监控-服务</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>看到：<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/03/20210330202813.png\"  alt=\"\" />\n      <br />\n  仔细清点过后，需要进行迁移的服务有：</p>\n<ul>\n<li>API-Img: 图片、视频等静态文件API，阿里云OSS -&gt; 又拍云云储存</li>\n<li>API-Waline: 评论后台，ECS -&gt; swas</li>\n<li>Site-Blog: 博客主体，ECS -&gt; swas</li>\n<li>Site-Editor: 在线编辑器，ECS -&gt; swas</li>\n<li>Site-Guard: ServerStatus，ECS -&gt; swas</li>\n<li>Site-Travel: 旅行地图，ECS -&gt; swas</li>\n</ul>\n\n        <h1 id=\"迁移\"   >\n          <a href=\"#迁移\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#迁移\"></a> 迁移</h1>\n      \n\n        <h2 id=\"api-img\"   >\n          <a href=\"#api-img\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#api-img\"></a> API-Img</h2>\n      \n<p>  根据又拍云文档创建云储存服务，更改img.foolishfox.cn的CNAME的解析，备份文件即可。</p>\n\n        <h2 id=\"site-blog\"   >\n          <a href=\"#site-blog\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#site-blog\"></a> Site-Blog</h2>\n      \n<p>  又进行一次之前的迁移，可以看之前的<a href=\"/posts/202012-heog.html\">文章</a>。<br />\n  为了方便下一步的安装，可以选择安装<code>n</code>进行<code>Node.js</code>的版本管理，另外还可以更改<code>npm</code>源为淘宝源，加快下载、安装速度。<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/03/20210330204237.png\"  alt=\"\" />\n      </p>\n\n        <h2 id=\"site-editor\"   >\n          <a href=\"#site-editor\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#site-editor\"></a> Site-Editor</h2>\n      \n<p>  进行了上一步之后，服务器已经安装好了<code>Node.js</code>环境，剩下的只需要安照<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://winwin_2011.gitee.io/winwin-hexo-editor/\" >文档</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>安装即可。<br />\n  使用<code>pm2</code>启动后，需要设置<code>Nginx</code>反向代理，方便通过域名进行访问。例如<code>winwin-hexo-editor</code>运行在8900端口，设置<code>write.foolishfox.cn</code>的反向代理为<code>127.0.0.1:8900</code>。</p>\n\n        <h2 id=\"site-guard\"   >\n          <a href=\"#site-guard\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#site-guard\"></a> Site-Guard</h2>\n      \n<p>  ServerStatus一开始是一个老外的项目，可以理解为多服务器探针、多服务器云监控。后来国人进行了汉化和修改，我这里使用的是<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/nyawork/\" >nyawork</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>开发的<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/nyawork/ServerStatus-Hotaru\" >ServerStatus-Hotaru</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>版本。安装十分简单，只需要下载好文件，按照步骤进行即可。</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@vultr:~<span class=\"comment\"># wget https://raw.githubusercontent.com/nyawork/ServerStatus-Hotaru/master/status.sh</span></span><br><span class=\"line\">root@vultr:~<span class=\"comment\"># chmod +x status.sh</span></span><br></pre></td></tr></table></div></figure>\n<p>  因为要从Github下载文件，所以安装速度比较慢。例如下载<code>master.zip</code>，可以打开<code>status.sh</code>文件找到下载链接，下载好之后更改文件名为<code>master.zip</code>，再上传到<code>/tmp</code>文件夹下，这样速度会快很多。除了<code>master.zip</code>，还有一个文件是<code>jq</code>，事先创建好<code>/usr/local/ServerStatus</code>文件夹，将下载好的文件重命名后放在该文件下。<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/03/20210330205244.png\"  alt=\"\" />\n      <br />\n  要修改的话，可以直接更改<code>/usr/local/ServerStatus/server/config.json</code>文件，重启<code>status.sh</code>即可。</p>\n\n        <h2 id=\"site-travel\"   >\n          <a href=\"#site-travel\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#site-travel\"></a> Site-Travel</h2>\n      \n<p>  <span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/yc111/footprint\" >footprint</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>是由<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/yc111/\" >yc111</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>开发的利用echarts展示旅行足迹的项目。前面已经配置好了<code>Node.js</code>环境，只需安装依赖即可运行。然后设置Nginx反向目录代理，将<code>api.foolishfox.cn/travel</code>指向<code>127.0.0.1:1024</code>。</p>\n\n        <h2 id=\"api-waline\"   >\n          <a href=\"#api-waline\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#api-waline\"></a> API-Waline</h2>\n      \n<p>  <span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://waline.js.org/\" >waline</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>是由<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/lizheming\" >lizheming</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>开发的博客评论系统，是最难配置的一部分。Waline有多达48钟部署方式，下面介绍两种部署方式：</p>\n\n        <h3 id=\"docker\"   >\n          <a href=\"#docker\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#docker\"></a> Docker</h3>\n      \n<p>  由于有自己的服务器和数据库，最开始选择了Waline/client+Docker+MySQL的方式进行部署。</p>\n<ol>\n<li>修改<code>Node.js</code>淘宝源</li>\n<li>构建镜像</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/lizheming/waline.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> waline</span><br><span class=\"line\">docker build -t lizheming/waline -f packages/server/Dockerfile .</span><br></pre></td></tr></table></div></figure>\n<ol start=\"3\">\n<li>修改配置<code>packages/client/.env</code></li>\n</ol>\n<figure class=\"highlight plain\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">SKIP_PREFLIGHT_CHECK&#x3D;true</span><br><span class=\"line\"></span><br><span class=\"line\">MYSQL_HOST&#x3D;rm-*.mysql.rds.aliyuncs.com</span><br><span class=\"line\">MYSQL_DB&#x3D;comments</span><br><span class=\"line\">MYSQL_USER&#x3D;hexo</span><br><span class=\"line\">MYSQL_PASSWORD&#x3D;password</span><br><span class=\"line\"></span><br><span class=\"line\">AKISMET_KEY&#x3D;guess</span><br><span class=\"line\"></span><br><span class=\"line\">SITE_NAME&#x3D;Fox Home</span><br><span class=\"line\">SITE_URL&#x3D;https:&#x2F;&#x2F;foolishfox.cn</span><br><span class=\"line\">AUTHOR_EMAIL&#x3D;fox@foolishfox.cn</span><br><span class=\"line\"></span><br><span class=\"line\">SC_KEY&#x3D;what</span><br><span class=\"line\"></span><br><span class=\"line\">SMTP_HOST&#x3D;smtp.ym.163.com</span><br><span class=\"line\">SMTP_PORT&#x3D;465</span><br><span class=\"line\">SMTP_USER&#x3D;fox@foolishfox.cn</span><br><span class=\"line\">SMTP_PASS&#x3D;password</span><br><span class=\"line\">SENDER_NAME&#x3D;fox</span><br><span class=\"line\">SENDER_EMAIL&#x3D;fox@foolishfox.cn</span><br></pre></td></tr></table></div></figure>\n<ol start=\"4\">\n<li>运行镜像</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --env-file ./packages/client/.env -p 8360:8360 -d lizheming/waline</span><br></pre></td></tr></table></div></figure>\n<ol start=\"5\">\n<li>设置反向目录代理，将<code>api.foolishfox.cn/waline</code>指向<code>127.0.0.1:8360</code></li>\n</ol>\n\n        <h3 id=\"独立部署\"   >\n          <a href=\"#独立部署\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#独立部署\"></a> 独立部署</h3>\n      \n<p>  为了方便对配置进行修改，不需要更新镜像的原因，后来弃用了Docker部署，改为直接使用<code>Node.js</code>运行。</p>\n<ol>\n<li>安装waline</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir walinejs &amp;&amp; <span class=\"built_in\">cd</span> walinejs</span><br><span class=\"line\">cnpm install @waline/vercel --save</span><br></pre></td></tr></table></div></figure>\n<ol start=\"2\">\n<li>编辑<code>.bashrc</code>，添加环境变量，最好将字符串用<code>&quot;</code>或者<code>'</code>包起来，避免<code>$</code>、<code>&amp;</code>等字符的影响</li>\n</ol>\n<figure class=\"highlight plain\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">MYSQL_HOST&#x3D;&#39;rm-*.mysql.rds.aliyuncs.com&#39;</span><br><span class=\"line\">...</span><br><span class=\"line\">SENDER_EMAIL&#x3D;&#39;fox@foolishfox.cn&#39;</span><br></pre></td></tr></table></div></figure>\n<ol start=\"3\">\n<li>创建软链接，方便后续操作</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s node_modules/@waline/vercel ./waline</span><br><span class=\"line\"><span class=\"built_in\">cd</span> waline</span><br></pre></td></tr></table></div></figure>\n<ol start=\"4\">\n<li>配置服务端<code>vim config.js</code></li>\n</ol>\n<figure class=\"highlight js\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    secureDomains: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;foolishfox.cn&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;api.foolishfox.cn&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;127.0.0.1&#x27;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    forbiddenWords: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;空包&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;快递&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;下单&#x27;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    disallowIPList: [</span><br><span class=\"line\">        <span class=\"string\">&#x27;8.8.8.8&#x27;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></div></figure>\n<ol start=\"5\">\n<li>修改主程序<code>vanilla.js</code></li>\n</ol>\n<figure class=\"highlight js\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> Application = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;thinkjs&#x27;</span>);</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">let</span> config = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./config.js&#x27;</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span>(e) &#123;&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></div></figure>\n<ol start=\"6\">\n<li>使用pm2运行程序</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">cnpm install -g pm2</span><br><span class=\"line\">pm2 start vanilla.js --name waline</span><br></pre></td></tr></table></div></figure>\n<ol start=\"7\">\n<li>设置反向目录代理，将<code>api.foolishfox.cn/waline</code>指向<code>127.0.0.1:8360</code></li>\n</ol>\n\n        <h1 id=\"参考资料\"   >\n          <a href=\"#参考资料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#参考资料\"></a> 参考资料</h1>\n      \n<ol>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://segmentfault.com/a/1190000023054090\" >Windows SSH 免密登录详解</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><a href=\"/posts/202012-heog.html\">从WordPress搬迁——使用Hexo搭建博客</a></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://newsn.net/say/node-n.html\" >如何利用n轻松切换nodejs的版本</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://winwin_2011.gitee.io/winwin-hexo-editor/\" >winwin-hexo-editor</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/nyawork/ServerStatus-Hotaru\" >ServerStatus-Hotaru</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/yc111/footprint\" >footprint</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://waline.js.org/\" >waline</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n</ol>\n","categories":["随记"],"tags":["blog","软件","安装","github"]},{"title":"AE9/AP9/SPM | GUI使用","url":"/posts/202103-ae9-4.html","content":"\n        <h1 id=\"概述\"   >\n          <a href=\"#概述\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#概述\"></a> 概述</h1>\n      \n<p>  <code>Ae9Ap9Gui.exe</code>提供了一个简单的图形用户界面前端，使用<code>CmdLineAe9Ap9.exe</code>运行模型。根据用户界面中的选择，将生成具有相应参数设置的输入文件，然后运行模型，可能会生成计算结果的二维图。</p>\n<span id=\"more\"></span>\n<p>  对于每一次模型的运行，用户需要指定<code>Run Name</code>作为文件名前缀，<code>Run Directory</code>作为保存输出文件的目录，分别默认为<code>Run1</code>和<code>Run</code>。文件名前缀会影响输入和输出文件，输出目录通常是<code>Ae9Ap9Gui.exe</code>的相对目录，但可以是绝对目录路径。</p>\n\n    <div class=\"note-plugin info\">\n      <span class=\"note-plugin__icon note-plugin__icon--info\">\n              <i class=\"fas fa-info-circle\"></i>\n            </span>\n      <p><strong>Tip</strong><br />可以使用环境变量</p>\n    </div>\n  \n<p>  GUI使用用户指定的配置文件来定义模型数据库文件，并记录GUI的使用状态。如果不存在配置文件，将会自动生成默认的配置文件，路径为：<code>%AppData%/Ae9Ap9/Gui_v1.50.ini</code>.<br />\n  GUI窗口右上角的<code>Config</code>菜单按钮允许用户修改配置，还可以选择将所有GUI项目重置为默认设置。如果需要，可以更新模型数据库或者目录设置。在非必要的情况下，推荐仅使用模型随附的数据库文件。</p>\n\n    <div class=\"note-plugin info\">\n      <span class=\"note-plugin__icon note-plugin__icon--info\">\n              <i class=\"fas fa-info-circle\"></i>\n            </span>\n      <p><strong>Tip</strong><br />GUI对高分辨率屏幕的适配很差，可以参考<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://blog.csdn.net/QXK2001/article/details/51296819\" >修改windows10在高分屏下的应用的dpi</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>解决</p>\n    </div>\n  \n<p>  如果使用快捷方式，则GUI可能会从二进制可执行文件目录以外的其他目录启动。模型数据库配置将需要修改，将默认相对路径更改为绝对路径。除非指定了采用绝对路径的<code>Run Directory</code>，否则将相对于该起始目录生成模型运行文件。先前生成的模型运行输入文件中的设置可用于初始化GUI状态，在命令行上将运行目录和名称指定为参数：</p>\n<figure class=\"highlight powershell\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">Ae9Ap9Gui [&lt;<span class=\"type\">RunDirectory</span>&gt; &lt;<span class=\"type\">RunName</span>&gt;]</span><br></pre></td></tr></table></div></figure>\n<p>  GUI拥有三个选项卡式页面，分别为<code>Satellite</code>，<code>Model</code>和<code>Plot</code>：在<code>Satellite</code>页面可以定义轨道路径，在<code>Model</code>页面可以模型参数，在<code>Plot</code>页面可以显示模型运行的结果。</p>\n\n        <h1 id=\"satellite-tab\"   >\n          <a href=\"#satellite-tab\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#satellite-tab\"></a> Satellite Tab</h1>\n      \n<p>  该页面设置用于定义在特定时间段和增量内沿卫星轨道路径计算辐射环境模型值的时间和轨道位置的参数。<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/03/Satellite.png\"  alt=\"\" />\n      </p>\n\n        <h2 id=\"orbit-specification-type\"   >\n          <a href=\"#orbit-specification-type\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#orbit-specification-type\"></a> Orbit Specification Type</h2>\n      \n<p>  在这里可以选择用不同的类型指定轨道，在界面右侧的<code>Ephemeris File Content</code>会显示相应的需要设定的参数。</p>\n<p>  如果需要使用现有的星历文件，选择<code>Ephemeris (Time+Pos)</code>模式，然后在<code>Input File</code>中输入文件路径。为了使<code>CmdLineAe9Ap9.exe</code>正确处理此文件中包含的时间和位置信息，必须在右侧的<code>Time Format</code>中指定其格式。除此之外，右侧还可以设置坐标系和数据分割符。</p>\n\n    <div class=\"note-plugin warning\">\n      <span class=\"note-plugin__icon note-plugin__icon--warning\">\n              <i class=\"fas fa-exclamation-circle\"></i>\n            </span>\n      <p><strong>Warn</strong><br />请注意，日期必须在1950年1月1日至2049年12月31日的范围内，对应简化儒略日(Modified Julian Date, MJD)的范围是：33282.0 – 69806.9999</p>\n    </div>\n  \n\n        <h2 id=\"ephemeris-file-content\"   >\n          <a href=\"#ephemeris-file-content\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#ephemeris-file-content\"></a> Ephemeris File Content</h2>\n      \n<p>  位于右侧的是用户界面控件，可以指定现有星历文件的时间格式，坐标系、单位以及数据列定界符。受支持的时间格式和坐标系见后表，受支持的数据定界符为逗号，空格和制表符。</p>\n\n        <h1 id=\"model-tab\"   >\n          <a href=\"#model-tab\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#model-tab\"></a> Model Tab</h1>\n      \n\n        <h1 id=\"plot-tab\"   >\n          <a href=\"#plot-tab\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#plot-tab\"></a> Plot Tab</h1>\n      \n","categories":["AE9/AP9/SPM"],"tags":["科普"]},{"title":"AE9/AP9/SPM | 输出数据","url":"/posts/202102-ae9-3.html","content":"<style>\n.content-wrap--noside {\n  width: 95%;\n  margin: 0 auto;\n}\n</style>\n\n        <h2 id=\"输出文件结构\"   >\n          <a href=\"#输出文件结构\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#输出文件结构\"></a> 输出文件结构</h2>\n      \n<p>  模型输出文件的名称主要由由输入文件中的<code>OutFile</code>和<code>FluxOut</code>参数决定，部分可选的输入文件参数参数值会影响后缀，在这种情况下，每个输出文件都有唯一的文件名，该文件名还可以提供内容的描述信息。</p>\n<span id=\"more\"></span>\n<style type=\"text/css\">\ntable.tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #729ea5;border-collapse: collapse;}\ntable.tftable th {background-color:#acc8cc;border-width: 1px;padding: 8px;border-style: solid;border-color: #729ea5;text-align: center;}\ntable.tftable tr {background-color:#ffffff;}\ntable.tftable td {border-width: 1px;padding: 8px;border-style: solid;border-color: #729ea5;text-align: center;}\n</style>\n<div class=\"table-container\"><table id=\"tfhover\" class=\"tftable\" border=\"1\">\n<tr><th>前缀</th><th>数据模式(由FluxOut决定)</th><th>数据类型(见下表)</th><th>Percentile, Scenario or Aggregation Id(由FluxOut和Aggregate决定)</th><th>文件拓展名</th></tr>\n<tr><td rowspan=\"4\">OutFile(不带文件拓展名)</td><td>_mean</td><td rowspan=\"4\">由*Out和AccumMode决定</td><td>-n/a- for mean</td><td rowspan=\"4\">OutFile的文件拓展名(默认为txt)</td></tr>\n<tr><td>_pctile</td><td>_## (percentile, in <FluxOut> value)</td></tr>\n<tr><td rowspan=\"2\">_pert<br />_mc</td><td>_### (scenario identification #)</td></tr>\n<tr><td>_agg_mean (usage is discouraged)<br />_conf_level_##</td></tr>\n</table></div>\n<div class=\"table-container\"><table id=\"tfhover\" class=\"tftable\" border=\"1\">\n<tr><th>AccumMode数据类型</th><th>Cumul</th><th>Interval</th><th>Full</th><th>Boxcar</th><th>Expon</th></tr>\n<tr><td>Flux</td><td>_flux</td><td>_fluxIntvAvg</td><td>_fluxFullAvg</td><td>_fluxRunAvg</td><td>_fluxExpAvg</td></tr>\n<tr><td>Fluence</td><td>_fluence</td><td>_fluenceIntv</td><td>_fluenceFull</td><td rowspan=\"3\" colspan=\"2\">- - - - - - -</td></tr>\n<tr><td>DoseRate</td><td>_doserate</td><td>_doserateIntvAvg</td><td>_doserateFullAvg</td></tr>\n<tr><td>DoseAccum</td><td>_doseaccum</td><td>_doseaccumIntv</td><td>_doseaccumFull</td></tr>\n</table></div>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/03/outconfig.jpg\"  alt=\"\" />\n      </p>\n<p style=\"margin: 0 auto;font-size: 14px;min-width: 100px;text-align: center;\"><b><scan>Fig1. input file</scan></b></p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/03/outfile.jpg\"  alt=\"\" />\n      </p>\n<p style=\"margin: 0 auto;font-size: 14px;min-width: 100px;text-align: center;\"><b><scan>Fig2. output files</scan></b></p>\n\n        <h2 id=\"数据转化\"   >\n          <a href=\"#数据转化\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#数据转化\"></a> 数据转化</h2>\n      \n<p>  可以使用<code>ConvertToXlsx.py</code>，将生成的ASCII输出文件转换为Microsoft Excel格式的相应文件，该文件还能够转换生成的ASCII星历表、绝热不变输出文件以及由GUI应用程序生成的绘图文件。要运行该文件，需要在电脑上安装的Python版本不低于2.5，并且安装了<code>XlsxWriter</code>、<code>numpy</code>模块：</p>\n<figure class=\"highlight powershell\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">python ConvertToXlsx.py &lt;filename1&gt; [&lt;<span class=\"type\">filename2</span>&gt; … &lt;<span class=\"type\">filenameN</span>&gt;]</span><br></pre></td></tr></table></div></figure>\n<p>  生成的<code>*.xlsx</code>文件与输入文件位于同一目录中，文件头信息保留在新生成的Excel文件中。</p>\n","categories":["AE9/AP9/SPM"],"tags":["科普"]},{"title":"AE9/AP9/SPM | 输入文件","url":"/posts/202102-ae9-2.html","content":"<style>\n.content-wrap--noside {\n  width: 95%;\n  margin: 0 auto;\n}\n</style>\n\n        <h2 id=\"输入文件构造\"   >\n          <a href=\"#输入文件构造\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#输入文件构造\"></a> 输入文件构造</h2>\n      \n<p>  文件的基本格式是键值对：<code>Key:Value</code>，关键字和键值都不区分大小写，以<code>#</code>开头的行将被认为是注释。各参数可以分为以下四类：</p>\n<ul>\n<li>基本模型参数(Basic Model Inputs)：核心参数，任何输入文件都需要</li>\n<li>高级模型参数(Advanced Model Inputs)：类似输入输出格式或者俯仰角的可选参数</li>\n<li>聚合参数(Accumulation and Aggregation Inputs)：用于组合复杂输出结果的可选参数</li>\n<li>剂量计算参数(Dose Calculation Inputs)：驱动<code>ShieldDose2</code>模型进行计算的可选参数</li>\n<li>轨道预报参数(Orbit Propagator Inputs)：用于生成轨道星历的可选参数</li>\n</ul>\n<span id=\"more\"></span>\n\n    <div class=\"note-plugin info\">\n      <span class=\"note-plugin__icon note-plugin__icon--info\">\n              <i class=\"fas fa-info-circle\"></i>\n            </span>\n      <p><strong>Tip</strong><br />可以使用环境变量来代替表示路径或者文件名的参数值，例如在环境变量中设置好<code>AX9HOME</code>，然后可以在文件中使用<code>MagFieldDB: %AX9HOME%/modelData/igrfDB.h5</code></p>\n    </div>\n  \n<style>\n  table {\n    font-size: 14px;\n  }\n</style>\n\n        <h3 id=\"基本参数\"   >\n          <a href=\"#基本参数\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#基本参数\"></a> 基本参数</h3>\n      \n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>关键字</strong></th>\n<th style=\"text-align:center\"><strong>可选值</strong></th>\n<th style=\"text-align:center\"><strong>默认</strong></th>\n<th style=\"text-align:center\"><strong>必选</strong></th>\n<th style=\"text-align:center\"><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ModelType</td>\n<td style=\"text-align:center\">AE9 AP9 PLASMA</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">模型类型，需要在ModelDB参数中指定的相应数据库文件<br />除非指定了俯仰角或方向矢量，否则计算得出的模型结果将是全方向的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ModelDB</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">用于驱动模型的数据库文件，与选定的ModelType相对应<br />必须包含文件的路径(绝对路径或相对于CmdLineAe9Ap9应用程序执行位置的路径)<br /> 对于PLASMA：指定适当的<code>SPM*</code>种类文件：<code>E</code>(电子)/<code>H</code>/<code>HE</code>(He)/<code>O</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MagFieldDB</td>\n<td style=\"text-align:center\">igrfDB.h5</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">磁场模型的数据库文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">KPhiNNetDB</td>\n<td style=\"text-align:center\">fastPhi_net.mat</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">K/Phi坐标神经网络的数据库文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">KHminNNetDB</td>\n<td style=\"text-align:center\">fast_hmin_net.mat</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">K/Hmin坐标神经网络的数据库文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OutFile</td>\n<td style=\"text-align:center\">有效路径和文件名</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">生成模型输出文件时使用的路径和文件名前缀</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OrbitFile</td>\n<td style=\"text-align:center\">星历文件的有效路径和文件名</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">包含时间和位置信息的文件，有以下两种方式：<br />1. 输出：同时指定轨道类型和预测参数时，将生成星历表并写入该文件<br />通过TimeSpec，CoordSys，CoordUnits，CoordOrder和DataDelim描述格式<br />2. 输入：从现有文件中读取<br />通过InTimeSpec，InCoordSys，InCoordUnits，InCoordOrder和InDataDelim描述格式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FluxType</td>\n<td style=\"text-align:center\">1PtDiff 2PtDiff* Integral <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">计算的通量类型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Energies</td>\n<td style=\"text-align:center\">AE9: 0.04 – 10.0 (MeV)<br />AP9: 0.1 – 2000.0 (MeV)<br />Plasma/electrons: 0.001 – 0.040 (MeV)<br />Plasma/ions: 0.00115 – 0.1643 (MeV)</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">以MeV表示的能级列表计算通量值，能量值限制在模型的范围内</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Energies2</td>\n<td style=\"text-align:center\">同Energies</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">仅在FluxType=2PtDiff时使用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FluxOut</td>\n<td style=\"text-align:center\">Mean<br />Percentile, ##<br />Perturbed, ###<br />MonteCarlo, ###* <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">要生成/输出的通量数据模式，此参数可能会出现多次<br />百分数在1-99之间<br />扰动均值和蒙特卡洛scenario identification numbers在1-999之间</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FluenceOut<br />FlueOut</td>\n<td style=\"text-align:center\">True or False</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">要生成/输出的通量数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DoseRateOut<br />DoseOut</td>\n<td style=\"text-align:center\">True or False</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">要生成/输出的剂量率数据 <sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DoseAccumOut<br />CDoseOut</td>\n<td style=\"text-align:center\">True or False</td>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">要生成/输出的累积剂量数据 <sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3:1\">[3:1]</a></sup></td>\n</tr>\n</tbody>\n</table></div>\n\n        <h3 id=\"高级参数\"   >\n          <a href=\"#高级参数\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#高级参数\"></a> 高级参数</h3>\n      \n<p>  待更新</p>\n\n        <h3 id=\"聚合参数\"   >\n          <a href=\"#聚合参数\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#聚合参数\"></a> 聚合参数</h3>\n      \n<p>  待更新</p>\n\n        <h3 id=\"计量参数\"   >\n          <a href=\"#计量参数\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#计量参数\"></a> 计量参数</h3>\n      \n<p>  待更新</p>\n\n        <h3 id=\"轨道参数\"   >\n          <a href=\"#轨道参数\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#轨道参数\"></a> 轨道参数</h3>\n      \n<p>  待更新</p>\n\n        <h2 id=\"附录\"   >\n          <a href=\"#附录\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#附录\"></a> 附录</h2>\n      \n\n        <h3 id=\"支持的坐标系\"   >\n          <a href=\"#支持的坐标系\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#支持的坐标系\"></a> 支持的坐标系</h3>\n      \n<p>  有关坐标系的完整说明，参见<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://scholar.googleusercontent.com/scholar?q=cache:RfsVMa2oC_wJ:scholar.google.com/&amp;hl=zh-CN&amp;as_sdt=0,5\" >Bhavnani和Vancour, 1991</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span><sup class=\"footnote-ref\"><a href=\"#fn4\" id=\"fnref4\">[4]</a></sup><sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5\">[5]</a></sup></p>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>简称</strong></th>\n<th style=\"text-align:center\"><strong>全称</strong></th>\n<th style=\"text-align:center\"><strong>默认参数及单位</strong><sup class=\"footnote-ref\"><a href=\"#fn6\" id=\"fnref6\">[6]</a></sup></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">GEI</td>\n<td style=\"text-align:center\">地心惯性系</td>\n<td style=\"text-align:center\">X(Re), Y(Re), Z(Re)<sup class=\"footnote-ref\"><a href=\"#fn7\" id=\"fnref7\">[7]</a></sup></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GEO</td>\n<td style=\"text-align:center\">地理坐标系</td>\n<td style=\"text-align:center\">X(Re), Y(Re), Z(Re)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GDZ</td>\n<td style=\"text-align:center\">World Geodetic System 1984</td>\n<td style=\"text-align:center\">Altitude(km), Lat(deg), Lon(deg)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GSM</td>\n<td style=\"text-align:center\">地心太阳磁轴系</td>\n<td style=\"text-align:center\">X(Re), Y(Re), Z(Re)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GSE</td>\n<td style=\"text-align:center\">地心太阳黄道系</td>\n<td style=\"text-align:center\">X(Re), Y(Re), Z(Re)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SM</td>\n<td style=\"text-align:center\">太阳磁坐标</td>\n<td style=\"text-align:center\">X(Re), Y(Re), Z(Re)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MAG</td>\n<td style=\"text-align:center\">地磁坐标系</td>\n<td style=\"text-align:center\">X(Re), Y(Re), Z(Re)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SPH</td>\n<td style=\"text-align:center\">球坐标</td>\n<td style=\"text-align:center\">Radius(Re), Colatitude(deg), Lon(deg)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RLL</td>\n<td style=\"text-align:center\">半径，纬度，经度</td>\n<td style=\"text-align:center\">Radius(Re), Lat(deg), Lon(deg)</td>\n</tr>\n</tbody>\n</table></div>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>剂量计算只能使用<code>1PtDiff</code> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>可以在同一行上用逗号分割多个值，例如<code>perturbed,1,2,5-10,20</code> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p>不适用于SPM模型 <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a> <a href=\"#fnref3:1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn4\" class=\"footnote-item\"><p>NASA参考系说明：<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://sscweb.gsfc.nasa.gov/users_guide/Appendix_C.html\" >https://sscweb.gsfc.nasa.gov/users_guide/Appendix_C.html</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span> <a href=\"#fnref4\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn5\" class=\"footnote-item\"><p>ESA参考系说明：<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.spenvis.oma.be/help/background/coortran/coortran.html\" >https://www.spenvis.oma.be/help/background/coortran/coortran.html</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span> <a href=\"#fnref5\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn6\" class=\"footnote-item\"><p>坐标范围：Latitude=-90°—90°;Colatitude=0°—180°;Longitude=-180°—360° <a href=\"#fnref6\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn7\" class=\"footnote-item\"><p>1 Re = 6371.2 km <a href=\"#fnref7\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","categories":["AE9/AP9/SPM"],"tags":["科普"]},{"title":"AE9/AP9/SPM | 介绍与安装","url":"/posts/202102-ae9-1.html","content":"\n        <h2 id=\"前言\"   >\n          <a href=\"#前言\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n      \n<p>  <code>AE9/AP9/SPM</code>是由美国空军研究实验室(Air Force Research Laboratory)开发的，用于模拟近地空间辐射的模型。<code>AE9/AP9/SPM</code>分别用于模拟高能电子，高能质子和等离子体模型，给定卫星轨道根数或星历表，该模型将返回指定量的通量，注量或剂量，并为这些量选择适合的统计数据。<code>AE9/AP9/SPM</code>提供了两种安装模式：命令行版本和GUI版本。在国际合作者加入该项目之后，该模型被重命名为近地国际辐射环境(IRENE)。</p>\n<span id=\"more\"></span>\n\n        <h2 id=\"下载\"   >\n          <a href=\"#下载\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#下载\"></a> 下载</h2>\n      \n<p>  <code>AE9/AP9/SPM</code>的项目地址位于<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.vdl.afrl.af.mil/programs/ae9ap9/\" >VDL</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，该网站需要使用美国IP才可进行访问。我们选择使用<code>Public AE9AP9 Account</code>进行下载，而不使用<code>VDL Account</code>，因为后者需要年满18周岁的美国政府雇员，承包商或学术人员才能够申请注册。</p>\n<p>  在填写<code>Public AE9AP9 Account</code>注册信息时，注意邮箱不能使用国内邮箱或者hotmail、yahoo，Zip Code填写为00000即可。注册完成之后，密码将会通过注册邮箱发送给你，由于不可知的原因你很有可能无法收到邮件，你可以向<code>ae9ap9@vdl.afrl.af.mil</code>发送邮件进行询问，在得到回复之后选择重置密码即可。<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/02/email_compressed.jpg\"  alt=\"\" />\n      </p>\n<p>  <code>AE9/AP9/SPM</code>默认只提供Windows版本，源代码或者Linux版本需要发邮件索求之后自行编译。</p>\n\n        <h2 id=\"第三方依赖\"   >\n          <a href=\"#第三方依赖\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#第三方依赖\"></a> 第三方依赖</h2>\n      \n\n    <div class=\"note-plugin warning\">\n      <span class=\"note-plugin__icon note-plugin__icon--warning\">\n              <i class=\"fas fa-exclamation-circle\"></i>\n            </span>\n      <p><strong>Warning</strong><br />只有编译源代码才需要安装依赖，否则直接使用即可!</p>\n    </div>\n  \n\n        <h3 id=\"cmake\"   >\n          <a href=\"#cmake\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#cmake\"></a> CMake</h3>\n      \n<p>  <code>CMake</code>版本不低于2.6，推荐选择下载Binary distributions，源代码需要编译才能使用。</p>\n\n        <h3 id=\"visual-studio-2012\"   >\n          <a href=\"#visual-studio-2012\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#visual-studio-2012\"></a> Visual Studio 2012</h3>\n      \n<p>  下载旧版本的<code>Visual Studio 2012</code>或者2008。</p>\n\n    <div class=\"note-plugin info\">\n      <span class=\"note-plugin__icon note-plugin__icon--info\">\n              <i class=\"fas fa-info-circle\"></i>\n            </span>\n      <p><strong>Tip</strong><br />A Windows-based FORTRAN compiler is also needed for a full source code compilation, but unfortunately, is not freely available. However, by default, the build process links to an included pre-compiled library of these FORTRAN-based routines.</p>\n    </div>\n  \n\n        <h3 id=\"python-recommended\"   >\n          <a href=\"#python-recommended\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#python-recommended\"></a> Python (Recommended)</h3>\n      \n<p>  推荐下载<code>Miniconda</code>，并且更改源：</p>\n<figure class=\"highlight sh\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip config <span class=\"built_in\">set</span> global.index-url https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></div></figure>\n\n        <h3 id=\"qt-and-qwt-optional\"   >\n          <a href=\"#qt-and-qwt-optional\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#qt-and-qwt-optional\"></a> Qt and Qwt (optional)</h3>\n      \n<p>  QTW是QT的一个第三方库，两者都可以直接下载安装。</p>\n\n        <h3 id=\"hdf5-188\"   >\n          <a href=\"#hdf5-188\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#hdf5-188\"></a> HDF5 1.8.8</h3>\n      \n<p>  HDF的全程是<code>Hierarchical Data Format</code>，可以存储不同类型的图像和数码数据的文件格式，文件后缀名为<code>.hdf</code>，下载二进制版本安装即可。</p>\n\n        <h3 id=\"boost-1580\"   >\n          <a href=\"#boost-1580\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#boost-1580\"></a> Boost 1.58.0</h3>\n      \n<p>  Boost是为C++标准库提供扩展的程序库，下载解压后目录如图所示，依照参考资料5安装即可。<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/02/boost_compressed.jpg\"  alt=\"\" />\n      </p>\n\n        <h2 id=\"解压\"   >\n          <a href=\"#解压\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#解压\"></a> 解压</h2>\n      \n<p>  下载得到的是一个压缩文件，解压后目录结构为：</p>\n<figure class=\"highlight plain\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">Ae9Ap9</span><br><span class=\"line\">  bin</span><br><span class=\"line\">    win32 - 预编译32位二进制文件(Windows XP&#x2F;7)</span><br><span class=\"line\">    win64 - 预编译64位二进制文件(Windows 7)</span><br><span class=\"line\">  documents - 发行说明, 用户指南, 编译指南, 版权说明等</span><br><span class=\"line\">  modelData - 模型数据文件</span><br><span class=\"line\">  samples   - 模型样例</span><br><span class=\"line\">  unitTests - 模型的拓展数据集</span><br><span class=\"line\">  source    - 源代码根目录构建脚本(基础发行版中不存在源代码)</span><br><span class=\"line\">    Ae9Ap9Mpi      - Ae9Ap9 源代码</span><br><span class=\"line\">    SpWx_Ae9Ap9    - Ae9Ap9 所依赖的空间天气模型的源代码</span><br><span class=\"line\">    Ae9Ap9GuiMpi   - GUI 应用源代码</span><br><span class=\"line\">    buildAe9Ap9.py - Python 脚本, 用于linux, win32和win64平台的自动构建</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"编译\"   >\n          <a href=\"#编译\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#编译\"></a> 编译</h2>\n      \n\n    <div class=\"note-plugin warning\">\n      <span class=\"note-plugin__icon note-plugin__icon--warning\">\n              <i class=\"fas fa-exclamation-circle\"></i>\n            </span>\n      <p><strong>Warning</strong><br />只有源代码才需要编译，否则直接使用即可!</p>\n    </div>\n  \n<ol>\n<li>Taking note of the include and library paths for the third-party dependencies installed in the previous step, using a plain text editor, update these in the three build script configuration files:\n<ul>\n<li>Ae9Ap9/source/SpWx_Ae9Ap9/Common/internal_utils.cmake<br />\nThe configuration file contains several platform-specific sections of commands that set these paths.</li>\n</ul>\n <figure class=\"highlight cmake\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">Scroll down in the <span class=\"keyword\">file</span> to where these lines are showing:</span><br><span class=\"line\"><span class=\"comment\">##############################################################</span></span><br><span class=\"line\"><span class=\"comment\"># config_include_lib_paths</span></span><br><span class=\"line\">From here, all settings that may require modification are preceded with this line:</span><br><span class=\"line\"><span class=\"comment\"># &lt;&lt;== END-USER MODIFIABLE ==&gt;&gt;</span></span><br></pre></td></tr></table></div></figure>\n \n    <div class=\"note-plugin info\">\n      <span class=\"note-plugin__icon note-plugin__icon--info\">\n              <i class=\"fas fa-info-circle\"></i>\n            </span>\n      <p><strong>Tip</strong><br />For Windows, use forward slashes (<code>/</code>) in path references.Note the <code>set</code> of the EXT_LIBS_ROOT variable, and its subsequent reference $(EXT_LIBS_ROOT), for ease of use in multiple places. For Windows, it is suggested to set EXT_LIBS_ROOT to <code>C:/Program Files</code>.</p>\n    </div>\n  \n<ul>\n<li>Ae9Ap9/source/Ae9Ap9Mpi/internal_utils.cmake<br />\nThis file is updated in the same way as the previous file, if the GUI application is desired.</li>\n<li>Ae9Ap9/source/Ae9Ap9GuiMpi/trunk/Ae9Ap9Gui.pro<br />\nThe Ae9Ap9Gui source tree utilizes <code>qmake</code> (part of the Qt development environment) for the build process, and thus uses a slightly different file and syntax for defining the include and library paths. Important: on Linux systems, verify that the correct <code>qmake</code> version is being used; update the <code>path</code> environment variable as necessary.<br />\nThe Qt include and library paths will be automatically set properly with the installation of the Qt software. This file must only explicitly set paths for the Qwt include and library paths, as shown below. Note the platform-specific sections are also present here.</li>\n</ul>\n <figure class=\"highlight plain\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">win32 &#123;</span><br><span class=\"line\">  INCLUDEPATH +&#x3D; c:\\Qt\\qwt-5.2.1\\src</span><br><span class=\"line\">  LIBS +&#x3D; &quot;c:\\Qt\\qwt-5.2.1\\lib\\libqwt5.a&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">win64 &#123;</span><br><span class=\"line\">  INCLUDEPATH +&#x3D; c:\\Qt64\\qwt-5.2.1\\src</span><br><span class=\"line\">  LIBS +&#x3D; &quot;c:\\Qt64\\qwt-5.2.1\\lib\\libqwt5.a&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">unix &#123;</span><br><span class=\"line\">  INCLUDEPATH +&#x3D; &#x2F;nas&#x2F;ExternalLibs&#x2F;Qt&#x2F;qwt-5.2&#x2F;src</span><br><span class=\"line\">  LIBS +&#x3D; &#x2F;nas&#x2F;ExternalLibs&#x2F;Qt&#x2F;qwt-5.2&#x2F;lib&#x2F;libqwt.so</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li>Automated Build<br />\nThe preferred method of building a source distribution of IRENE (AE9/AP9/SPM) on a supported platform is to utilize the python script called <span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://buildAe9Ap9.py\" >buildAe9Ap9.py</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>, located in the Ae9Ap9/source directory of the distribution. This script will build the model library and the command-line and gui driver applications, then place them in a platform-specific subdirectory under Ae9Ap9/bin in the distribution.<br />\nDuring the build process, the script will generate a log file called buildAe9Ap9.log in the Ae9Ap9/source directory; this can be used to identify any build errors encountered. At a command prompt in the <code>Ae9Ap9/source</code> directory, invoke the python build script, specifying the operating system name and, if needed, the mode (defaults to <code>release</code>): python <span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://buildAe9Ap9.py\" >buildAe9Ap9.py</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span> --os=&lt;platform_name&gt; [ --mode=<type> ] [ --nompi ] [ --nogui ] where &lt;platform_name&gt; can be linux , win32 or win64, and <type> can be release or debug.<br />\nBy default, both the single- and multi-threaded versions of the programs are built, unless the optional argument <code>--nompi</code> (required for win32 builds) is specified. The GUI application is also built by default; to skip this, specify the optional argument <code>--nogui</code>. For RedHat EL or CentOS 5.x installations only, the --gcc=gcc44 option should also be included.</li>\n</ol>\n\n    <div class=\"note-plugin warning\">\n      <span class=\"note-plugin__icon note-plugin__icon--warning\">\n              <i class=\"fas fa-exclamation-circle\"></i>\n            </span>\n      <p><strong>Warning</strong><br /><code>debug</code> mode increases program execution time by a factor of 10 to 20.</p>\n    </div>\n  \n\n        <h2 id=\"安装测试\"   >\n          <a href=\"#安装测试\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装测试\"></a> 安装测试</h2>\n      \n\n        <h3 id=\"cli\"   >\n          <a href=\"#cli\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#cli\"></a> CLI</h3>\n      \n<p>  根据所用平台，在PowerShell中进入对应的二进制文件所在的目录(例如<code>Ae9Ap9\\bin\\win64</code>)，输入命令：</p>\n<figure class=\"highlight powershell\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">.\\CmdLineAe9Ap9.exe <span class=\"literal\">-i</span> ..\\..\\samples\\Ap9ShortInput.txt</span><br></pre></td></tr></table></div></figure>\n<p>  生成的输出文件位于<code>Ae9Ap9\\samples</code>文件夹下，可以根据文件生成时间判断。我们可以通过验证生成的文件数量以及相应的文件内容是否与位于<code>Ae9Ap9\\samples\\expectedOutput</code>目录中以<code>Ap9ShortOutput</code>为前缀的文件是否相同来判断是否工作正常。</p>\n\n        <h3 id=\"gui\"   >\n          <a href=\"#gui\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#gui\"></a> GUI</h3>\n      \n<p>  在同一命令行中，可以运行<code>Ae9Ap9Gui.exe</code>来启动GUI程序<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/02/GUI.jpg\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"其他\"   >\n          <a href=\"#其他\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h3>\n      \n<p>  在<code>Ae9Ap9\\bin\\win64</code>目录下还有很多其他文件，其中只有<code>CmdLineAe9Ap9.exe</code>、<code>Ae9Ap9Gui.exe</code>、<code>TotalDose.exe</code>、<code>IntegralPlasma.exe</code>、<code>ConvertToXlsx.py</code>需要用到，其他的都是辅助程序。</p>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-h</td>\n<td style=\"text-align:center\">帮助，列出所有参数说明</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-v</td>\n<td style=\"text-align:center\">输出版本信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-i <filename></td>\n<td style=\"text-align:center\">指定模型输入文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n <numproc></td>\n<td style=\"text-align:center\">指定要使用的处理器数量（默认为1）<br /> 使用多线程时包括一个主处理器，会覆盖输入文件中的NumProc参数</td>\n</tr>\n</tbody>\n</table></div>\n\n    <div class=\"note-plugin warning\">\n      <span class=\"note-plugin__icon note-plugin__icon--warning\">\n              <i class=\"fas fa-exclamation-circle\"></i>\n            </span>\n      <p><strong>Warning</strong><br />在运行时不要更改输入输入文件，因为应用程序可能会多次访问该文件</p>\n    </div>\n  \n\n        <h2 id=\"下载地址\"   >\n          <a href=\"#下载地址\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#下载地址\"></a> 下载地址</h2>\n      \n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Name</th>\n<th style=\"text-align:center\">Version</th>\n<th style=\"text-align:center\">URL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">AE9/AP9/SPM</td>\n<td style=\"text-align:center\">1.50.1</td>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.vdl.afrl.af.mil/programs/ae9ap9/downloads.php\" >https://www.vdl.afrl.af.mil/programs/ae9ap9/downloads.php</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CMake</td>\n<td style=\"text-align:center\">≥2.6</td>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://cmake.org/download/\" >https://cmake.org/download/</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Visual Studio</td>\n<td style=\"text-align:center\">2008 or 2012</td>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://visualstudio.microsoft.com/zh-hans/vs/older-downloads/\" >https://visualstudio.microsoft.com/zh-hans/vs/older-downloads/</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Miniconda</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/\" >https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Qt</td>\n<td style=\"text-align:center\">4.6.2</td>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://download.qt.io/archive/qt/4.6/\" >https://download.qt.io/archive/qt/4.6/</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">QtW</td>\n<td style=\"text-align:center\">5.2.1</td>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://sourceforge.net/projects/qwt/files/qwt/5.2.1/\" >https://sourceforge.net/projects/qwt/files/qwt/5.2.1/</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HDF5</td>\n<td style=\"text-align:center\">1.8.8</td>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.8/\" >https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.8/</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Boost</td>\n<td style=\"text-align:center\">1.58.0</td>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://sourceforge.net/projects/boost/files/boost/1.58.0/\" >https://sourceforge.net/projects/boost/files/boost/1.58.0/</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n</tr>\n</tbody>\n</table></div>\n\n        <h2 id=\"参考资料\"   >\n          <a href=\"#参考资料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#参考资料\"></a> 参考资料</h2>\n      \n<ol>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.vdl.afrl.af.mil/programs/ae9ap9/\" >AE9/AP9/SPM</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://blog.csdn.net/weixin_40011728/article/details/77924614\" >QT第三方库：Qwt的安装与使用</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://blog.csdn.net/maweifei/article/details/80961541\" >Windows下HDF5静态库的封装与测试</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.jianshu.com/p/bf2fd1752f7f\" >在windows平台使用CMAKE安装HDF5</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://blog.csdn.net/bxbjk/article/details/100760154\" >Windows环境下Boost的安装</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n</ol>\n","categories":["AE9/AP9/SPM"],"tags":["科普","安装"]},{"title":"安装MTProxy，轻松使用Telegram","url":"/posts/202102-mtproxy.html","content":"\n        <h2 id=\"前言\"   >\n          <a href=\"#前言\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n      \n<p>  Telegram是一款类似于QQ和微信的即时通讯软件，中文名叫电报。Telegram最大的特点，也是主打的招牌就是加密与安全：除了服务器本身加密外，还可以额外用户对用户加密，还支持设置阅后即焚，保证通信隐私安全。目前最新版本的客户端支持发送所有类型的文件和进行语音通话。</p>\n<span id=\"more\"></span>\n<p>  不过正是由于Telegram的加密特性，导致不少地区都对Telegram进行封杀，必须使用特殊手段才能使用Telegram，基于此类问题，电报官方开发了一款专门用于Telegram的代理工具——MTProxy。</p>\n<p>  MTProxy特别适合主要通过手机使用Telegram的用户，电脑一般一直开启科学上网工具，但手机不同，所以使用MTProxy可以让手机更方便地使用Telegram。</p>\n\n        <h2 id=\"手动安装\"   >\n          <a href=\"#手动安装\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#手动安装\"></a> 手动安装</h2>\n      \n\n        <h3 id=\"准备\"   >\n          <a href=\"#准备\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#准备\"></a> 准备</h3>\n      \n<p>  在安装之前，需要确认你的服务器上拥有一些基本工具：<code>openssl</code>、<code>zlib</code>、<code>gcc</code>等。</p>\n\n        <h3 id=\"build\"   >\n          <a href=\"#build\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#build\"></a> Build</h3>\n      \n<ol>\n<li>拉取源码</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/TelegramMessenger/MTProxy</span><br></pre></td></tr></table></div></figure>\n<ol start=\"2\">\n<li>编译，生成的二进制文件是objs/bin/mtproto-proxy</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> MTProxy</span><br><span class=\"line\">make &amp;&amp; <span class=\"built_in\">cd</span> objs/bin</span><br></pre></td></tr></table></div></figure>\n\n        <h3 id=\"config\"   >\n          <a href=\"#config\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#config\"></a> Config</h3>\n      \n<ol start=\"3\">\n<li>连接Telegram服务器，并获取配置文件</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -s https://core.telegram.org/getProxySecret -o proxy-secret</span><br><span class=\"line\">curl -s https://core.telegram.org/getProxyConfig -o proxy-multi.conf</span><br></pre></td></tr></table></div></figure>\n<ol start=\"4\">\n<li>生成密钥，一定要<strong>记得记录下来</strong></li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">head -c 16 /dev/urandom | xxd -ps</span><br></pre></td></tr></table></div></figure>\n<ol start=\"5\">\n<li>创建systemd服务文件，并且填充内容</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">nano /etc/systemd/system/MTProxy.service</span><br><span class=\"line\"></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=MTProxy</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">WorkingDirectory=/opt/MTProxy</span><br><span class=\"line\">ExecStart=/opt/MTProxy/mtproto-proxy -u <span class=\"variable\">$username</span> -p <span class=\"variable\">$localport</span> -H <span class=\"variable\">$connectport</span> -S <span class=\"variable\">$secret</span> --aes-pwd proxy-secret proxy-multi.conf -M <span class=\"variable\">$num</span></span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></div></figure>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名</th>\n<th style=\"text-align:center\">含义</th>\n<th style=\"text-align:center\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">username</td>\n<td style=\"text-align:center\">用户名</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">localport</td>\n<td style=\"text-align:center\">统计端口</td>\n<td style=\"text-align:center\">wget localhost:8888/stats</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">connectport</td>\n<td style=\"text-align:center\">连接端口</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">secret</td>\n<td style=\"text-align:center\">密钥</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">num</td>\n<td style=\"text-align:center\">进程数目</td>\n<td style=\"text-align:center\">默认为1即可</td>\n</tr>\n</tbody>\n</table></div>\n\n        <h3 id=\"run\"   >\n          <a href=\"#run\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#run\"></a> Run</h3>\n      \n<ol start=\"6\">\n<li>重新加载进程守护（daemons）</li>\n</ol>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start MTProxy.service     <span class=\"comment\"># 启动MTProxy</span></span><br><span class=\"line\">systemctl stop MTProxy.service      <span class=\"comment\"># 停止MTProxy</span></span><br><span class=\"line\">systemctl restart MTProxy.service   <span class=\"comment\"># 重启MTProxy</span></span><br><span class=\"line\">systemctl status MTProxy.service    <span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> MTProxy.service    <span class=\"comment\"># 允许开机自启</span></span><br></pre></td></tr></table></div></figure>\n<ol start=\"7\">\n<li>获取链接：<code>tg://proxy?server=SERVER_IP/SERVER_DOMAIN&amp;port=PORT&amp;secret=SECRET</code>，将其发送至任一tg聊天窗口，点击添加链接即可</li>\n</ol>\n\n        <h3 id=\"mtproxy-admin-bot\"   >\n          <a href=\"#mtproxy-admin-bot\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#mtproxy-admin-bot\"></a> MTProxy Admin Bot</h3>\n      \n<p>  MTProxy Admin Bot是Telegram官方帮助使用代理的工具，搜索添加后，通过<code>/newproxy</code>命令生成代理链接：<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/02/proxy-min.gif\"  alt=\"\" />\n      </p>\n\n        <h2 id=\"脚本安装tls伪装\"   >\n          <a href=\"#脚本安装tls伪装\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#脚本安装tls伪装\"></a> 脚本安装+TLS伪装</h2>\n      \n<p>  上面的安装过程略显繁琐，容易出错，而且更重要的问题是这样安装的代理使用的流量特征十分明显，特别容易被GFW识别，导致服务器端口甚至IP被封，最好使用其他方法进行伪装，所以可以使用一键安装脚本，例如<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/sunpma/mtp\" >MTProxy TLS</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>或者<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/ellermister/mtproxy\" >mtproxy</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，安装过程与上面类似，使用方法在Github主页中有描述：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash mtproxy.sh start</span><br><span class=\"line\">bash mtproxy.sh debug</span><br><span class=\"line\">bash mtproxy.sh stop</span><br><span class=\"line\">bash mtproxy.sh restart</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"qa\"   >\n          <a href=\"#qa\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#qa\"></a> Q&amp;A</h2>\n      \n<ol>\n<li>脚本安装之后无法启动<br />\n  可以使用<code>bash mtproxy.sh debug</code>命令查看问题，一般问题都是类似这样：<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/02/vultr-min-plus.png\"  alt=\"\" />\n      <br />\n  这是因为脚本下载的mtproto-proxy版本太老了，可以看到是用gcc-8编译的去年的老版本，可能和你的电脑不匹配，我的解决方案是：\n<ol>\n<li>下载原版：git clone <span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/TelegramMessenger/MTProxy\" >https://github.com/TelegramMessenger/MTProxy</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li>使用服务器上的gcc进行编译，将编译产生的mtproto-proxy二进制文件复制到一键管理脚本所在目录下，再次启动</li>\n<li>有可能出现无法运行的情况，可以将原版代码中common/pid.c中的这一行注释掉，重新编译，重复上面的步骤：</li>\n</ol>\n <figure class=\"highlight c\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">assert (!(p &amp; <span class=\"number\">0xffff0000</span>));</span><br></pre></td></tr></table></div></figure>\n</li>\n</ol>\n\n        <h2 id=\"参考资料\"   >\n          <a href=\"#参考资料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#参考资料\"></a> 参考资料</h2>\n      \n<ol>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/TelegramMessenger/MTProxy\" >MTProxy</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/sunpma/mtp\" >MTProxy TLS 绿色版一键安装脚本</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/ellermister/mtproxy\" >mtproxy</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.zxar520.com/linux/1439.html\" >MTProxy+FakeTLS|Telegram稳定代理配置教程</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html\" >Systemd 入门教程：命令篇</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n</ol>\n","tags":["安装"]},{"title":"Windows | 包管理器Scoop的安装与使用","url":"/posts/202101-a.html","content":"\n        <h2 id=\"前言\"   >\n          <a href=\"#前言\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n      \n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install git</span><br></pre></td></tr></table></div></figure>\n<p>  在<code>Ubuntu</code>安装软件的时候敲入上面的命令是一件令人舒适的事情，而且也很便捷，想要在<code>MacOS</code>上这样操作，也可以使用<code>homebrew</code>等诸多的包管理工具。然而如果想在<code>Windows</code>安装软件，你<strong>可能</strong>需要：</p>\n<ol>\n<li>打开百度搜索软件</li>\n<li>在搜索结果中找到无毒无捆绑的版本</li>\n<li>进行安装，不停点击<code>Next</code>或者下一步</li>\n<li>结束安装</li>\n</ol>\n<span id=\"more\"></span>\n<p>  在这个过程中，你还要担心是否会混入病毒，是否会有捆绑软件同时下载；软件还很可能会索要管理员权限，把它自己安装在C盘的好位置；有些开发工具还可能会搞乱你的环境变量；最最重要的是，最后你要卸载它的时候不知道有多麻烦。</p>\n<p>  所以就有天降猛男来解决这个问题，开发了<code>Windows</code>的包管理工具。在<code>scoop</code>之前，<code>Windows</code>上的包管理工具中比较出名的是<code>Chocolaty</code>。在<code>scoop</code>横空出世之后，由于其自定义程度高、拓展性强的特性而发展迅猛，目前社区中总计有2000+的软件；另外<code>scoop</code>安装软件不依赖管理员权限，安装路径和环境变量管理也深得我这一类“绿色用户”的欢心。</p>\n\n        <h2 id=\"安装scoop\"   >\n          <a href=\"#安装scoop\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装scoop\"></a> 安装scoop</h2>\n      \n\n        <h3 id=\"安装要求\"   >\n          <a href=\"#安装要求\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装要求\"></a> 安装要求</h3>\n      \n<ul>\n<li>Windows 7或更高版本</li>\n<li>PowerShell 5.0或更高版本</li>\n<li>.NET Framework 4.5或更高版本</li>\n<li>User Name不含中文字符</li>\n<li>确认打开了远程安装权限</li>\n</ul>\n<figure class=\"highlight powershell\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$PSVersionTable</span>.PSVersion.Major                      <span class=\"comment\"># 查看Powershell版本</span></span><br><span class=\"line\"><span class=\"variable\">$PSVersionTable</span>.CLRVersion.Major                     <span class=\"comment\"># 查看.NET Framework版本</span></span><br><span class=\"line\"><span class=\"built_in\">set-executionpolicy</span> remotesigned <span class=\"literal\">-scope</span> currentuser  <span class=\"comment\"># 打开远程权限</span></span><br></pre></td></tr></table></div></figure>\n<p>  当然还有很重要的一点就是能够正常访问<code>Github</code>。</p>\n\n        <h3 id=\"配置\"   >\n          <a href=\"#配置\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#配置\"></a> 配置</h3>\n      \n<p>  默认情况下,scoop以及大多数安装的软件都位于<code>%USERPROFILE%\\scoop</code>,全局安装的程序位于<code>C:\\ProgramData\\scoop</code>，当然我们也可以自定义安装位置：</p>\n<figure class=\"highlight powershell\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$env:scoop</span>=<span class=\"string\">&#x27;D:\\scoop&#x27;</span></span><br><span class=\"line\">[<span class=\"type\">Environment</span>]::SetEnvironmentVariable(<span class=\"string\">&#x27;scoop&#x27;</span>, <span class=\"variable\">$env:scoop</span>, <span class=\"string\">&#x27;User&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$env:scoop_GLOBAL</span>=<span class=\"string\">&#x27;D:\\scoop\\GlobalApps&#x27;</span></span><br><span class=\"line\">[<span class=\"type\">Environment</span>]::SetEnvironmentVariable(<span class=\"string\">&#x27;scoop_GLOBAL&#x27;</span>, <span class=\"variable\">$env:scoop_GLOBAL</span>, <span class=\"string\">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></div></figure>\n\n        <h3 id=\"安装\"   >\n          <a href=\"#安装\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装\"></a> 安装</h3>\n      \n<figure class=\"highlight powershell\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Invoke-Expression</span> (<span class=\"built_in\">New-Object</span> System.Net.WebClient).DownloadString(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># or the shorter:</span></span><br><span class=\"line\"><span class=\"built_in\">iwr</span> <span class=\"literal\">-useb</span> get.scoop.sh | <span class=\"built_in\">iex</span></span><br></pre></td></tr></table></div></figure>\n\n        <h3 id=\"卸载\"   >\n          <a href=\"#卸载\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#卸载\"></a> 卸载</h3>\n      \n<p>  以毒攻毒，以<code>scoop</code>卸载<code>scoop</code>(先卸载其他软件)：</p>\n<figure class=\"highlight powershell\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">scoop uninstall scoop</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"基础\"   >\n          <a href=\"#基础\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#基础\"></a> 基础</h2>\n      \n\n        <h3 id=\"常用命令\"   >\n          <a href=\"#常用命令\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#常用命令\"></a> 常用命令</h3>\n      \n<p>  <code>scoop</code>的命令设计逻辑是<code>scoop + command + [object] + [options]</code>，例如<code>scoop install git -g</code>，常用的基础命令有：</p>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">help <command></td>\n<td style=\"text-align:center\">查看帮助</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bucket add/rm [args]</td>\n<td style=\"text-align:center\">添加、删除仓库</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bucket list/know</td>\n<td style=\"text-align:center\">查看已有/已知仓库</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">search <appname></td>\n<td style=\"text-align:center\">匹配查找</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">info <app></td>\n<td style=\"text-align:center\">查看详情</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">home <app></td>\n<td style=\"text-align:center\">查看主页</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">install <app> [options]</td>\n<td style=\"text-align:center\">安装</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uninstall <app> [options]</td>\n<td style=\"text-align:center\">卸载</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">update <app> [options]</td>\n<td style=\"text-align:center\">更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">list</td>\n<td style=\"text-align:center\">查看已安装软件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cache show/rm [app]</td>\n<td style=\"text-align:center\">查看或删除缓存</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cleanup <app> [options]</td>\n<td style=\"text-align:center\">删除旧版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">checkup</td>\n<td style=\"text-align:center\">自检查</td>\n</tr>\n</tbody>\n</table></div>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/01/command-1-min.gif\"  alt=\"\" />\n      <br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/01/command-2-min.gif\"  alt=\"\" />\n      <br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/01/command-3-min.gif\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"安装位置\"   >\n          <a href=\"#安装位置\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装位置\"></a> 安装位置</h3>\n      \n<p>  在<a href=\"#%E9%85%8D%E7%BD%AE\">配置</a>这一步中，我们设置了<code>scoop</code>的安装位置为<code>D:\\Scoop</code>，在这个文件夹下，会有这几个子目录：</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/01/scoopdir.png\"  alt=\"\" />\n      </p>\n<p>  <code>app</code>就是软件的安装位置；<code>buckets</code>则是已添加的仓库（后文会提到，<code>scoop</code>的仓库实际上就是<code>git</code>的<code>repository</code>，所以该文件夹下其实就是一个一个<code>git repository</code>）；<code>cache</code>是下载缓存；<code>GlobalApps</code>是自定义的全局安装位置；<code>persist</code>则是一些配置文件；<code>shim</code>会创建一些应用的软链接，让应用之间不会互相干扰。</p>\n\n        <h3 id=\"加速\"   >\n          <a href=\"#加速\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#加速\"></a> 加速</h3>\n      \n\n        <h4 id=\"使用aria2\"   >\n          <a href=\"#使用aria2\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#使用aria2\"></a> 使用aria2</h4>\n      \n<p>  <code>aria2</code>可以利用多线程加速下载：</p>\n<figure class=\"highlight powershell\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">scoop install aria2</span><br><span class=\"line\"><span class=\"comment\"># 关闭aria2（默认开启）</span></span><br><span class=\"line\">scoop config aria2<span class=\"literal\">-enabled</span> false</span><br><span class=\"line\"><span class=\"comment\"># 配置aria2 ：重试秒数 单任务最大线程数(最大为16) 同一服务器最大连接数 最小文件分片大小</span></span><br><span class=\"line\">scoop config aria2<span class=\"literal\">-retry</span><span class=\"literal\">-wait</span> <span class=\"number\">4</span></span><br><span class=\"line\">scoop config aria2<span class=\"operator\">-split</span> <span class=\"number\">16</span></span><br><span class=\"line\">scoop config aria2<span class=\"literal\">-max</span><span class=\"literal\">-connection</span><span class=\"literal\">-per</span><span class=\"literal\">-server</span> <span class=\"number\">16</span></span><br><span class=\"line\">scoop config aria2<span class=\"literal\">-min</span><span class=\"operator\">-split</span><span class=\"literal\">-size</span> <span class=\"number\">4</span>M</span><br></pre></td></tr></table></div></figure>\n\n        <h4 id=\"设置代理\"   >\n          <a href=\"#设置代理\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#设置代理\"></a> 设置代理</h4>\n      \n<p>  <code>scoop</code>在拉取仓库更新和下载大部分软件时，都需要从国外服务器下载，速度十分感人，因此使用代理可以大大加速下载。有两种方式可以在<code>scoop</code>下载时使用代理：</p>\n<ol>\n<li>在Powershell内设置环境变量：<code>$Env:http_proxy=&quot;http://127.0.0.1:1080&quot;;$Env:https_proxy=&quot;http://127.0.0.1:1080&quot;</code></li>\n<li>更改代理设置：<code>scoop config proxy [username:password@]host:port</code>，具体配置可以查看参考资料[5]</li>\n</ol>\n\n        <h2 id=\"bucket管理\"   >\n          <a href=\"#bucket管理\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#bucket管理\"></a> Bucket管理</h2>\n      \n\n        <h3 id=\"介绍\"   >\n          <a href=\"#介绍\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 介绍</h3>\n      \n<p>  <code>Bucket</code>其实就是一个<code>git repository</code>，主要组成就是描述如何安装软件的<code>json</code>文件。在安装<code>scoop</code>时已经附带安装<code>main bucket</code>，然后这个仓库的收录标准十分严格：</p>\n<ul>\n<li>主流的开发者工具</li>\n<li>维护中的最新版本的软件</li>\n<li>完整版本的软件</li>\n<li>不可以有GUI</li>\n<li>……</li>\n</ul>\n<p>  这使得我们只能在<code>main</code>中找到部分软件，不可以有<code>GUI</code>这一点使得大部分日常使用软件都无法下载，所以我们需要添加其他仓库，可以使用<code>scoop bucket know</code>查看官方维护的仓库，还可以在<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://scoop.netlify.app/buckets/\" >这里</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>查看较受欢迎的仓库，较完整的仓库列表可以在<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/rasa/scoop-directory/blob/master/by-score.md\" >这里</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>查看。</p>\n\n        <h3 id=\"管理\"   >\n          <a href=\"#管理\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#管理\"></a> 管理</h3>\n      \n<p>  官方维护的仓库可以直接添加，例如<code>scoop bucket add extras</code>；对于社区维护的仓库，使用<code>scoop bucket add &lt;name&gt; &lt;url&gt;</code>进行添加，例如<code>scoop bucket add dorado https://github.com/chawyehsu/dorado</code>。<br />\n  每一次安装和更新软件之前，<code>scoop</code>首先会从<code>github</code>拉取已添加仓库的更新，然后再进行操作。如果碰到不同的仓库中拥有名字相同的软件，可以加上仓库名以示区分，例如<code>scoop install main/git</code>。</p>\n\n        <h3 id=\"建立自己的bucket\"   >\n          <a href=\"#建立自己的bucket\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#建立自己的bucket\"></a> 建立自己的bucket</h3>\n      \n<p>  参考<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://zhuanlan.zhihu.com/p/165635039\" >scoop 进阶 - 建立自己 的Bucket</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n\n        <h2 id=\"app查询\"   >\n          <a href=\"#app查询\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#app查询\"></a> App查询</h2>\n      \n<p>  为了在<code>scoop</code>的许多仓库中找到自己需要的软件，可以在<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://scoop.netlify.app/apps/\" >这里</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>查询安装脚本所在的bucket。</p>\n\n        <h2 id=\"qa\"   >\n          <a href=\"#qa\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#qa\"></a> Q&amp;A</h2>\n      \n<ul>\n<li>还有其他的包管理工具吗？<br />\n  有呀，例如<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/microsoft/winget-cli\" >winget</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，是由官方推出的推出命令行安装工具，全称<code>windows package manager client</code></li>\n</ul>\n\n        <h2 id=\"仓库\"   >\n          <a href=\"#仓库\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#仓库\"></a> 仓库</h2>\n      \n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/chawyehsu/dorado\" >dorado</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n<td style=\"text-align:center\">Yet another bucket for scoop.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/integzz/scoopet\" >scoopet</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n<td style=\"text-align:center\">A Bucket for the Best Windows Package Manager scoop : Continuously Assisting in Academic Research.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/kidonng/sushi\" >sushi</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n<td style=\"text-align:center\">A tasty and inclusive scoop bucket, providing various kinds of applications.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/YiHui-Liu/limpit\" >limpit</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></td>\n<td style=\"text-align:center\">我的 scoop 的软件仓库</td>\n</tr>\n</tbody>\n</table></div>\n\n        <h2 id=\"参考资料\"   >\n          <a href=\"#参考资料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#参考资料\"></a> 参考资料</h2>\n      \n<ol>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.jianshu.com/p/29e9d40bd7a2\" >Windows下最好的包管理器–scoop</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.jianshu.com/p/50993df76b1c\" >scoop——强大的Windows命令行包管理工具</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://sspai.com/post/52710\" >给 scoop 加上这些软件仓库，让它变成强大的 Windows 软件管理器</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/lukesampson/scoop/wiki/Using-scoop-behind-a-proxy\" >Using scoop behind a proxy</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/lukesampson/scoop/wiki/Quick-Start\" >Quick Start</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://chawyehsu.com/blog/talk-about-scoop-the-package-manager-for-windows-again\" >再谈谈 scoop 这个 Windows 下的软件包管理器</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://blog.csdn.net/muoyangoren/article/details/79531851\" >Aria2下载简述</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n</ol>\n","categories":["Windows"],"tags":["安装","github"]},{"title":"在Ubuntu18.04安装ROS","url":"/posts/202101-rosinstall.html","content":"\n        <h2 id=\"简介\"   >\n          <a href=\"#简介\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#简介\"></a> 简介</h2>\n      \n<p>  ROS的全称是<code>Robot Operating System</code>，即机器人操作系统，原型来自于<code>Stanford University</code>的<code>STanford Artificial Intelligence Robot</code>和 <code>Personal Robotics</code>项目。</p>\n<p>  ROS有很多的发行版，与Ubuntu发行版本的概念类似，有LTS版本提供5年的更新。每一个版本都有对应的推荐操作系统，可以在<span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://wiki.ros.org/Distributions\" >这里</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>查看目前发行的版本。版本生命周期还未结束的有：</p>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">版本名称</th>\n<th style=\"text-align:center\">发布日期</th>\n<th style=\"text-align:center\">提供支持至</th>\n<th style=\"text-align:center\">推荐系统</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ROS Noetic Ninjemys</td>\n<td style=\"text-align:center\">2020年5月</td>\n<td style=\"text-align:center\">2025年5月</td>\n<td style=\"text-align:center\">Ubuntu 20.04</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ROS Melodic Morenia</td>\n<td style=\"text-align:center\">2018年5月</td>\n<td style=\"text-align:center\">2023年5月</td>\n<td style=\"text-align:center\">Ubuntu 17.10|Ubuntu 18.04|Debian 9</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ROS Kinetic Kame</td>\n<td style=\"text-align:center\">2016年5月</td>\n<td style=\"text-align:center\">2021年4月</td>\n<td style=\"text-align:center\">Ubuntu 15.10|Ubuntu 16.04|Debian 8</td>\n</tr>\n</tbody>\n</table></div>\n<span id=\"more\"></span>\n<p>  我在<code>VM ware</code>中安装的是<code>Ubuntu 18.04</code>版本，所以选择安装<code>ROS Melodic Morenia</code>。</p>\n\n        <h2 id=\"安装\"   >\n          <a href=\"#安装\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装\"></a> 安装</h2>\n      \n<p>  打开<span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://wiki.ros.org/melodic/Installation\" >官方安装教程</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，选择自己对应的操作系统，按步骤进行安装</p>\n\n        <h3 id=\"添加源与密钥\"   >\n          <a href=\"#添加源与密钥\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#添加源与密钥\"></a> 添加源与密钥</h3>\n      \n<p>  众所周知的原因，国外源在国内的访问速度简直令人落泪，所以我们可以选择<span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://wiki.ros.org/ROS/Installation/UbuntuMirrors\" >镜像</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，例如我选择的是清华源：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">fox@foxhome:~$ sudo sh -c <span class=\"string\">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br></pre></td></tr></table></div></figure>\n<p>  然后就需要添加密钥，直接使用官方的命令即可：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">fox@foxhome:~$ sudo apt-key adv --keyserver <span class=\"string\">&#x27;hkp://keyserver.ubuntu.com:80&#x27;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br><span class=\"line\">Executing: /tmp/apt-key-gpghome.OtMUWc2xuJ/gpg.1.sh --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br><span class=\"line\">gpg: 密钥 F42ED6FBAB17C654：公钥 “Open Robotics &lt;info@osrfoundation.org&gt;” 已导入</span><br><span class=\"line\">gpg: 处理的总数：1</span><br><span class=\"line\">gpg:               已导入：1</span><br></pre></td></tr></table></div></figure>\n\n        <h3 id=\"安装aptitude\"   >\n          <a href=\"#安装aptitude\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装aptitude\"></a> 安装aptitude</h3>\n      \n<p>  有时候使用<code>apt</code>安装时，会遇到依赖问题，解决起来很麻烦，这个时候可以使用Linux下的一个小工具：<code>aptitiude</code>，它是在<code>apt</code>基础上的升级，可以帮助我们解决依赖关系问题，可以点<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://www.cnblogs.com/wangkangluo1/archive/2012/12/30/2839514.html\" >这里</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>了解更多。</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install aptitude</span><br></pre></td></tr></table></div></figure>\n\n        <h3 id=\"安装ros\"   >\n          <a href=\"#安装ros\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装ros\"></a> 安装ROS</h3>\n      \n<p>  选择你想要的<code>ROS packages</code>进行安装，例如安装所有的包：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo aptitude install ros-melodic-desktop-full</span><br></pre></td></tr></table></div></figure>\n<p>  aptitude会给出安装方案，包括依赖问题的解决，直接<code>Y</code>继续即可</p>\n\n        <h3 id=\"设置环境变量\"   >\n          <a href=\"#设置环境变量\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#设置环境变量\"></a> 设置环境变量</h3>\n      \n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">fox@foxhome:~$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;source /opt/ros/melodic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\">fox@foxhome:~$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"检查\"   >\n          <a href=\"#检查\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#检查\"></a> 检查</h2>\n      \n<p>  在终端输入<code>roscore</code>开启ROS的运行核心(master)，注意不能在两个终端同时开启两个master<br />\n  然后打开一个新的终端，输入<code>rosrun turtlesim turtlesim_node</code>，如果弹出下图的窗口，那就安装成功了<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2021/01/rosrun.png\"  alt=\"\" />\n      </p>\n\n        <h2 id=\"参考资料\"   >\n          <a href=\"#参考资料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#参考资料\"></a> 参考资料</h2>\n      \n<ul>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://zhuanlan.zhihu.com/p/84821192\" >ROS安装教程(ROS Melodic + Ubuntu18.04)</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n</ul>\n","categories":["ROS"],"tags":["安装"]},{"title":"最低工资与资本剥削","url":"/posts/202012-c.html","content":"\n        <h2 id=\"最低工资与资本剥削\"   >\n          <a href=\"#最低工资与资本剥削\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#最低工资与资本剥削\"></a> 最低工资与资本剥削</h2>\n      \n<p>  最低工资法是国家制定的最低工资标准的法律，规定了劳动者在正常劳动的情况下，用人单位应当给予的最低劳动报酬，这个标准一般是根据劳动者的最低生活需要来制定的。而以薛兆丰为代表的一帮自由主义经济学家发表言论称：</p>\n<blockquote>\n<p>最低工资法是世界上最典型的法定福利，这种硬性规定的后果，是低薪工人失业<br />\n用命令或法律来规定工资和福利的高低，就是枉费心机</p>\n</blockquote>\n<span id=\"more\"></span>\n\n        <h3 id=\"材料\"   >\n          <a href=\"#材料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#材料\"></a> 材料</h3>\n      \n<ol>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://xuezhaofeng.com/blog/?p=33\" >最低工资法不可取-薛兆丰</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://xuezhaofeng.com/blog/?p=833\" >为什么反对最低工资制度</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>（见第十点）</li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"http://money.163.com/special/0025404U/zuidigongzihairen.html\" >最低工资法以善意伤害穷人</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/Propic.png\"  alt=\"截图\" />\n      </li>\n</ol>\n<p>  首先应该明白这一段话只是这些人的一家之言，没有充分的现实依据作为支撑。例如美国在1967至1969年间的最低工资标准是历史最高的，而同一时期的失业率低于4%，属于历史上低水平。而薛兆丰等人以某些年份的某些样本为证据，试图说明最低工资会影响到就业与贫困，是以点带面的行为。</p>\n<p>  为了说明这一类观点是错误的，就应该先了解他的逻辑。材料认为<strong>市场的供需是劳动力价格的惟一决定因素</strong>，而<strong>供需曲线</strong>证明最低工资将增加失业：劳动力作为<strong>商品</strong>（劳动力商品），如果商品提价了，企业或者用人单位作为<strong>顾客</strong>，购买商品的意愿就会降低，所以会雇佣更少的工人，而且<strong>劳动价值</strong>低于最低工资的人将再难以获得工作机会。</p>\n\n        <h3 id=\"市场经济三大规律\"   >\n          <a href=\"#市场经济三大规律\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#市场经济三大规律\"></a> 市场经济三大规律</h3>\n      \n<p>  马克思主义认为<strong>市场经济有三大规律</strong>：</p>\n<ol>\n<li>价值规律，由马克思在《哲学的贫困》一书中被阐明，它是指人类工作产品的经济交换的规范法则：产品在贸易中的相对的交换价值，通常被表示为金钱-价格，是与人类劳动时间的平均值成比例的，生产这些产品的人类劳动在当前社会是必要的，所以<strong>价值量由人类劳动的平均量决定</strong>。</li>\n<li>价格规律，即供求规律。<strong>供求调节着市场价格, 或者确切地说, 调节着市场价格同市场价值的偏离</strong>。</li>\n<li>价值决定价格规律。价格是现象，是价值的本质具象化的产物。价值量由人类劳动的平均量决定，而商品的交换价值（或者说价格）的波动是被它们的价值所控制，本质上是由资本主义的内在规律支配。从劳动价值理论出发，可以知道<strong>价值是价格围绕着运动的重心, 价格的不断涨落也是围绕着这个重心来拉平的</strong>。</li>\n</ol>\n<p>  由此出发，决定劳动力商品价格的应当是价值，而非市场的供需。所以材料中从<strong>供需曲线决定论</strong>出发来分析得到的结论也是不可取的。</p>\n\n        <h3 id=\"劳动力商品\"   >\n          <a href=\"#劳动力商品\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#劳动力商品\"></a> 劳动力商品</h3>\n      \n<p>  另外<strong>劳动力商品的价值是由维持和延续劳动力所必须的生活资料的价值决定的，是由生产和再生产自身劳动力商品所消耗的生活资料的价值决定的</strong>。在现实情况中劳动力的价格或者说工资水平一般是低于，甚至是远远低于其价值，因为资本家攫取了工人的剩余价值以谋得利润，而材料试图以供求关系压低工资（或者劳动力商品的价格）来掩盖资本家对工人的剥削：<strong>资本家们凭借对生产资料的垄断权在对抗性生产关系无偿占有了生产者的剩余价值</strong>。</p>\n<p>  材料中还认为最低工资是典型的“法定福利”，但实际上最低工资仅仅只是满足人的基本生存需要，这正是前文所提及的劳动力商品的价值的一部分，因此劳动价值低于最低工资的人难以找到工作的说法也是不成立的。</p>\n<p>  事实上低薪工人的失业本质是因为资本家不愿放弃剩余价值：就资本主义社会而言，<strong>只要是资本，就会追求价值增殖</strong>（即剩余价值的生产），<strong>其外在表现形式就是利润</strong>。而为了实现价格增值，资本就要从劳动者、生产者手中获取剩余价值，就要无偿占用工人的剩余劳动，这种<strong>资本家占有剩余价值的行为，就是资本对劳动的经济剥削</strong>，所以<strong>资本的增殖属性就带有剥削属性，不能将二者割裂开来</strong>。</p>\n<p>  为了能够剥削剩余价值，<strong>资本必须雇佣劳动，或必须与工人发生雇佣劳动关系</strong>，没有雇佣劳动就没有资本家。如果站在生产关系的高度看这种雇佣劳动，它就是<strong>死劳动对活劳动的一种单向度且不平等的权力支配关系</strong>，这种支配关系构成资本主义生产关系的内容。</p>\n<p>  马克思说：</p>\n<blockquote>\n<p>工人生产的财富越多，他的产品力量和数量越大，他就越贫穷。工人创造的产品越多，他就变成廉价的商品。物的世界的增值同人的世界的贬值成正比。</p>\n</blockquote>\n<p>  实际上，<strong>工资是异化劳动的直接结果</strong>。在资本家与劳动者的关系中，劳动者并不是在为自己劳动，生产出来的劳动产品不属于劳动者自身，而属于所谓的“产权”所有者，劳动仅仅是劳动者个人的生活手段，用以维持自己的生存，这造成了人和自己的类本质相异化，使人不成其为人。</p>\n\n        <h3 id=\"政治与经济因素\"   >\n          <a href=\"#政治与经济因素\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#政治与经济因素\"></a> 政治与经济因素</h3>\n      \n<p>  材料中还有一句话：</p>\n<blockquote>\n<p>用命令或法律来规定工资和福利的高低，就是枉费心机</p>\n</blockquote>\n<p>  从马克思主义的观点来看，法律和工资、福利等是政治或者经济的具体因素，<strong>越是具体，政治因素和经济因素往往相互作⽤</strong>。政治因素可以先于或者晚于某种具体的政治⾏为⽽出现，<strong>不存在谁决定谁，是双向影响关系</strong>。所以枉费心机一词也没有道理。</p>\n<p>  假设没有最低工资法的存在，资本家对于工人的优势，再加上资本本身的逐利性，资本家会追求以更低的工资雇佣更少的人（哪怕他们知道这样会导致消费水平降低），产生糟糕的结果。</p>\n<p>  现行的最低工资也有不足。工人的总收入除了工资之外还有各种福利，如果硬性规定了最低工资水平，贪图剩余价值的资本将会想方设法地从其他方面削减支出，最终可能导致工人的总收入降低，所以这还需要劳动法的进一步完善与更加详细的制约。</p>\n<p>  劳动力不单纯是生产要素，也不是资本中的商品，而应该被看成需要全面发展的人本身，这是马克思主义政治经济学的观点。随着社会的发展，逐步过渡到社会主义与共产主义，劳动力会逐渐去商品化，使人回归人的本质，使人成其为人。</p>\n\n        <h2 id=\"后记\"   >\n          <a href=\"#后记\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#后记\"></a> 后记</h2>\n      \n<p>  这是本人在学习马克思主义基本原理概论课程后的课程报告，体现的是本人对材料的看法、认识，稍显幼稚，肯定有很多不当、偏颇之处，欢迎批评指正，拒绝抬杠谩骂。</p>\n","categories":["随记"],"tags":["马克思主义","资本"]},{"title":"从WordPress搬迁——使用Hexo搭建博客","url":"/posts/202012-heog.html","content":"\n        <h2 id=\"前言\"   >\n          <a href=\"#前言\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n      \n<p>  之前使用了很久的WordPress，用起来很方便，但是也有一些不令我满意的地方。首先，WordPress的源在国外，更新起来很慢很不方便，只好在服务器上面搭建了一个梯子。其次，WordPress的后端加载速度实在是太慢了，有点无法忍受。而且WordPress写文章感觉也没有直接写<code>markdown</code>方便。所以，哪怕WordPress还是有很多的优点，但我还是决定放弃WordPress。</p>\n<blockquote>\n<p>我知道有很多方法可以优化WordPress的加载速度，帮助更新，但是很麻烦不说，也不能从根本解决</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>  然后在偶然的机会下，接触到了<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://hexo.io/zh-cn/\" >Hexo</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，看了一些示例文档，觉得不错，所以打算试一试，于是<strong>首先创建了一个ECS快照</strong>，防止操作失误数据丢失。然后趁此机会把服务器换回了我最常用的<code>Ubuntu</code>，安装了<code>Hexo</code>，按照教程进行之前数据的迁移和本身、主题等的配置，最终决定就用<code>Hexo</code>来搭建新博客。</p>\n<blockquote>\n<p>我在后面接触到了<code>Hugo</code>等其他静态博客的项目，感觉都不错，但是和<code>Hexo</code>相比没有碾压式的优越，所以也没有纠结，就继续采用<code>Hexo</code></p>\n</blockquote>\n\n        <h2 id=\"安装\"   >\n          <a href=\"#安装\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装\"></a> 安装</h2>\n      \n\n        <h3 id=\"安装路线\"   >\n          <a href=\"#安装路线\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装路线\"></a> 安装路线</h3>\n      \n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/hexoblog.png\"  alt=\"流程\" />\n      </p>\n\n        <h3 id=\"安装nodejs\"   >\n          <a href=\"#安装nodejs\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装nodejs\"></a> 安装Node.js</h3>\n      \n<p>  在安装<code>Hexo</code>之前需要安装好<code>node.js</code>。<code>Windows</code>可以直接在<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://nodejs.org/zh-cn/\" >官方网站</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>下载安装包，在安装的时候要记住<strong>加入环境变量</strong>中。<code>Linux</code>用户可以从<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/nodesource/distributions\" >NodeSource</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>安装。</p>\n<blockquote>\n<p><code>node.js</code>是基于<code>Chrome V8</code>引擎的<code>Javascript</code>运行环境，可以帮助我们在本地直接运行<code>Javascript</code>而不需要借助浏览器。</p>\n</blockquote>\n<p>  我在我的<code>Ubuntu</code>服务器上安装的时候，下载速度简直无法忍受，只好去安装了一个命令行版本的科学上网工具：<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/TyrantLucifer/ssr-command-client\" >ssr-command-client</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>。所以推荐<code>Linux</code>用户使用下载二进制文件的方式进行安装。</p>\n<blockquote>\n<p>在<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://nodejs.org/en/download/\" >官网</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>下载对应的二进制文件，可以在服务器使用<code>wget</code>的方式，也可以下载到本地，然后通过<code>FTP</code>工具上传。</p>\n</blockquote>\n<blockquote>\n<p>下载得到的是一个<code>*.tar.xz</code>文件，使用<code>tar -xvf *.tar.zx</code>进行安装，假设安装目录为<code>/usr/local/nodejs/</code>，然后添加环境变量，可以使用软链接：<code>ln -s /usr/local/nodejs/bin/node /usr/local/bin/node</code>，最后检查一下是否安装成功：</p>\n</blockquote>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@qjlyh:/usr/<span class=\"built_in\">local</span>/nodejs<span class=\"comment\"># node -v</span></span><br><span class=\"line\">v14.15.1</span><br><span class=\"line\">root@qjlyh:/usr/<span class=\"built_in\">local</span>/nodejs<span class=\"comment\"># npm -v</span></span><br><span class=\"line\">6.14.8</span><br></pre></td></tr></table></div></figure>\n\n        <h3 id=\"安装git\"   >\n          <a href=\"#安装git\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装git\"></a> 安装Git</h3>\n      \n<p>  直接下载安装包安装即可，依然注意<strong>环境变量</strong>的问题。<code>Linux</code>基本都自带了<code>git</code>，不用安装。所以关于<code>Git</code>的安装就不过多赘述。</p>\n\n        <h3 id=\"安装hexo\"   >\n          <a href=\"#安装hexo\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#安装hexo\"></a> 安装Hexo</h3>\n      \n<p>  直接按照<code>Hexo</code>官网的<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo\" >介绍</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>安装即可：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></div></figure>\n<p>  注意之后的操作一般都是在<code>Hexo</code>的<strong>初始化目录（或者项目根目录）下进行的</strong>。如果执行失败，可以通过以下命令更改环境变量：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27;</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></table></div></figure>\n\n        <h3 id=\"初始化\"   >\n          <a href=\"#初始化\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#初始化\"></a> 初始化</h3>\n      \n<p>  使用下面的命令初始化你的项目文件夹，并且进入文件夹安装<code>package.json</code>中的包：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></div></figure>\n<p>  安装完成之后，项目的文件结构如下图：</p>\n<figure class=\"highlight plain\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">project folder</span><br><span class=\"line\">├── _config.yml   配置文件</span><br><span class=\"line\">├── package.json  应用程序信息</span><br><span class=\"line\">├── scaffolds     模板文件</span><br><span class=\"line\">├── source        源代码</span><br><span class=\"line\">│   ├── _drafts   草稿</span><br><span class=\"line\">│   └── _posts    文章</span><br><span class=\"line\">└── themes        主题</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"常用命令\"   >\n          <a href=\"#常用命令\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#常用命令\"></a> 常用命令</h2>\n      \n\n        <h3 id=\"写博客\"   >\n          <a href=\"#写博客\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#写博客\"></a> 写博客</h3>\n      \n<p>  <code>Hexo</code>本体支持<code>.md</code>和<code>.ejs</code>两种格式的文件，但是只要安装了对应的渲染器插件，例如<code>Hexo-renderer-pug</code>，就可以使用<code>.pug</code>格式进行写作。<br />\n  <code>scaffolds</code>文件夹以及各个主题的<code>layout</code>文件夹下，是各种页面的模板。<code>Hexo</code>自带了3个模板，都是<code>Markdown</code>格式的，分别对应草稿、文章和页面，生成新文件的命令是：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></div></figure>\n<p>  <code>layout</code>是可选参数，代表生成什么类型（草稿、文章或者页面），默认<code>_config.yml</code>中的<code>default_layout</code>参数；<code>title</code>是文件名。<br />\n  <strong>官方网站有很详细的说明！多读官方文档！！！</strong></p>\n\n        <h3 id=\"生成\"   >\n          <a href=\"#生成\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#生成\"></a> 生成</h3>\n      \n<p>  我们写的博文源码都是<code>.md</code>或者<code>.ejs</code>一类的文件，然后通过<code>Hexo</code>按照主题的配置生成<code>html</code>、<code>css</code>和<code>js</code>文件，使用的命令如下：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># hexo clean 可以清除缓存（删除/public目录下所有内容）</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo g</span><br></pre></td></tr></table></div></figure>\n<p>  该命令会在根目录下生成<code>public</code>文件夹，该文件夹存储的就是网站所需要的文件了</p>\n<blockquote>\n<p>草稿很类似于所谓的私密文章，只有自己能够看到。如果想要将草稿发布，有两种办法：一种是直接将草稿从<code>_drafts</code>目录下移动到<code>_posts</code>目录，或者是使用<code>hexo publish [layout] &lt;title&gt;</code>的方式</p>\n</blockquote>\n\n        <h3 id=\"预览\"   >\n          <a href=\"#预览\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#预览\"></a> 预览</h3>\n      \n<p>  <code>Hexo</code>可以通过内置的<code>server</code>来预览生成的网站的效果：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo server --drafts</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></div></figure>\n<p>  默认情况下不会显示草稿，–drafts参数可以强制显示草稿，或者是更改根目录下<code>_config.yml</code>的配置项：<code>render_drafts: true</code></p>\n\n        <h3 id=\"部署\"   >\n          <a href=\"#部署\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#部署\"></a> 部署</h3>\n      \n<p>  最后一步就是将你创作的内容发布，一般是通过这一个步骤将静态文件（也就是<code>public</code>文件夹）推送到<code>GitHub</code>的一个仓库中，生成<code>Github Pages</code>，首先要更改根目录下<code>_config.yml</code>的配置：</p>\n<figure class=\"highlight yaml\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">&lt;repository</span> <span class=\"string\">url&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> [<span class=\"string\">branch</span>]</span><br></pre></td></tr></table></div></figure>\n<p>  然后安装<code>hexo-deployer-git</code>插件，再执行下面的命令，就可以把<code>public</code>文件夹整体提交到<code>GitHub</code>的仓库中了：</p>\n<figure class=\"highlight bash\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"qa\"   >\n          <a href=\"#qa\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#qa\"></a> Q&amp;A</h2>\n      \n<ul>\n<li>为什么我不在本地搭建<code>node.js</code>环境，使用<code>Github Pages</code>搭建网站？<br />\n  首先是因为我不想在自己的电脑上安装太多的东西；其次是我通过阿里云的学生优惠，购买了一台ECS，尽管配置不高，但是应付我这个小站肯定是可以的，所以我想把它利用上。所以最终我才用的方案是：本机<code>VS Code</code>远程连接服务器进行写作，在服务器上进行部署，同时推送源码到<code>GitHub</code>仓库备份（强烈吹一波<code>VS Code</code>）</li>\n<li>在本机(<code>Windows</code>)安装这些东西太麻烦，有没有什么简便的方法？<br />\n  答案肯定是有的，可以使用<code>Chocolate</code>或者<code>Scoop</code>进行安装，强烈推荐这种方法，可以很方便的管理这些应用，不用担心把你的C盘搞得一团糟。</li>\n</ul>\n\n        <h2 id=\"参考资料\"   >\n          <a href=\"#参考资料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#参考资料\"></a> 参考资料</h2>\n      \n<ul>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://blog.csdn.net/itaffy/article/details/89455342\" >阿里云ECS服务器上安装nodejs</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://ccknbc.github.io/posts/hexo-toss/#%E5%AE%89%E8%A3%85-Node-js\" >HEXO 折腾</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://hexo.io/zh-cn/docs/\" >Hexo中文文档</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n</ul>\n","categories":["Hexo"],"tags":["blog","安装"]},{"title":"利用python通过百度和必应API主动推送收录","url":"/posts/202012-a.html","content":"<p>  自己写了博客，一般总是希望被更多的人看到，而他人找到你的网站的最好方法就是通过搜索引擎。所以为了能够让你的网站被收录在搜索引擎中，需要向搜索引擎主动提交(当然，如果你是dl，大可不必如此麻烦)</p>\n<span id=\"more\"></span>\n<p>  如果你是通过<code>Hexo</code>建立的网站，有很多的插件可以提供你使用，例如<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://github.com/cjh0613/hexo-submit-urls-to-search-engine\" >hexo-submit-urls-to-search-engine</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，配置可以看插件的<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://cjh0613.com/20200603HexoSubmitUrlsToSearchEngine.html\" >文档</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>，除了这种方法之外，还可以自己用<code>Python</code>写一个自动提交的程序。</p>\n\n        <h2 id=\"流程\"   >\n          <a href=\"#流程\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#流程\"></a> 流程</h2>\n      \n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/pushurl.png\"  alt=\"流程\" />\n      <br />\n  目前国内主要的搜索引擎就是百度，必应和谷歌，<s>如果需要主动推送谷歌的话，需要会科学上网，再加上个人觉得没什么必要，所以只添加了前两个的push</s><br />\n  2020.12.19:谷歌可以自动抓取，没必要主动推送</p>\n\n        <h2 id=\"依赖\"   >\n          <a href=\"#依赖\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#依赖\"></a> 依赖</h2>\n      \n<figure class=\"highlight python\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re, os, urllib, requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> request</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> xml.dom.minidom</span><br><span class=\"line\"><span class=\"keyword\">from</span> xml.dom.minidom <span class=\"keyword\">import</span> parse</span><br></pre></td></tr></table></div></figure>\n<p>  一般情况下，只要安装<code>BeautifulSoup</code>就好了</p>\n\n        <h2 id=\"收录情况\"   >\n          <a href=\"#收录情况\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#收录情况\"></a> 收录情况</h2>\n      \n<p>  在搜索引擎中输入<code>site:example.com</code>就可以查看你的网站的收录情况</p>\n\n        <h3 id=\"百度\"   >\n          <a href=\"#百度\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#百度\"></a> 百度</h3>\n      \n<figure class=\"highlight python\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">data      = requests.get(<span class=\"string\">&#x27;http://www.baidu.com/s?wd=site:&#x27;</span>+url)</span><br><span class=\"line\">content   = data.content.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">soup      = BeautifulSoup(content,<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">link_list = soup.find_all(<span class=\"string\">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></div></figure>\n<p>  这部分实现的是查询<code>site:example.com</code>，并且获取页面中所有的链接</p>\n<figure class=\"highlight python\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">site_list = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> link_list :</span><br><span class=\"line\">    url = link.get(<span class=\"string\">&#x27;href&#x27;</span>)</span><br><span class=\"line\">    rul = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&#x27;http://www.baidu.com/link\\?url=+.+&#x27;</span>)</span><br><span class=\"line\">    url = rul.findall(url)</span><br></pre></td></tr></table></div></figure>\n<p>  这部分是将无关的链接全部排除；百度的搜索结果都是以<code>http://www.baidu.com/link/?url=</code>进行替换的，而我们要获得的是真实网址，所以下一步要通过访问这个链接，获取真实指向的网址：</p>\n<figure class=\"highlight python\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    response = request.urlopen(url[<span class=\"number\">0</span>])</span><br><span class=\"line\">    realurl  = response.geturl()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> realurl!=<span class=\"string\">&#x27;&#x27;</span> :</span><br><span class=\"line\">        site_list.append(realurl)</span><br><span class=\"line\"><span class=\"keyword\">except</span> request.HTTPError <span class=\"keyword\">as</span> e :</span><br><span class=\"line\">    print(e.code, e.reason)</span><br><span class=\"line\"><span class=\"keyword\">except</span> urllib.error.URLError <span class=\"keyword\">as</span> e :</span><br><span class=\"line\">    data = requests.get(url[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></div></figure>\n<p>  <code>urllib.error.URLError</code>是为了防止有时候DNS解析不到某些域名的网址，导致程序直接退出</p>\n\n        <h3 id=\"必应\"   >\n          <a href=\"#必应\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#必应\"></a> 必应</h3>\n      \n<p>  必应和百度不同，搜索出来的结果直接就是页面链接，不需要获得真实网址：</p>\n<figure class=\"highlight python\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">data      = requests.get(<span class=\"string\">&#x27;https://cn.bing.com/search?q=site:&#123;&#125;&amp;first=&#123;&#125;0&#x27;</span>.<span class=\"built_in\">format</span>(url, page))</span><br><span class=\"line\">content   = data.content.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">soup      = BeautifulSoup(content,<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">link_list = soup.find_all(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">site_list = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> link_list :</span><br><span class=\"line\">    url = link.get(<span class=\"string\">&#x27;href&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> url==<span class=\"literal\">None</span> :</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    rul = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&#x27;https://foolishfox.cn/+.+&#x27;</span>)</span><br><span class=\"line\">    url = rul.findall(url)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> url==<span class=\"literal\">None</span> <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> url :</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    site_list.append(url[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">return</span> site_list</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"站点链接\"   >\n          <a href=\"#站点链接\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#站点链接\"></a> 站点链接</h2>\n      \n<p>  可以通过很多手段获得站点地图。以我的网站为例，使用<code>hexo-generator-sitemap</code>直接获得了<code>sitemap.xml</code>文件</p>\n<figure class=\"highlight python\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">DOMTree   = xml.dom.minidom.parse(path)</span><br><span class=\"line\">sizemap   = DOMTree.getElementsByTagName(<span class=\"string\">&#x27;loc&#x27;</span>)</span><br><span class=\"line\">site_list = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(sizemap), <span class=\"number\">1</span>):</span><br><span class=\"line\">    url = sizemap[i].firstChild.data</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;tags&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> url <span class=\"keyword\">and</span> <span class=\"string\">&#x27;categories&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> url :</span><br><span class=\"line\">        site_list.append(url)</span><br><span class=\"line\"><span class=\"keyword\">return</span> site_list</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"百度提交\"   >\n          <a href=\"#百度提交\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#百度提交\"></a> 百度提交</h2>\n      \n<figure class=\"highlight python\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">s_url = <span class=\"string\">&#x27;http://data.zz.baidu.com/urls?site=https://foolishfox.cn&amp;token=&#x27;</span>+os.environ[<span class=\"string\">&#x27;baidu_token&#x27;</span>]</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;content-type&#x27;</span> : <span class=\"string\">&#x27;text/plain&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>   : <span class=\"string\">&#x27;curl/7.12.1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Host&#x27;</span>         : <span class=\"string\">&#x27;data.zz.baidu.com&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">url_string = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> url_list :</span><br><span class=\"line\">    url_string += link+<span class=\"string\">&#x27;\\n&#x27;</span></span><br><span class=\"line\">response = requests.request(<span class=\"string\">&#x27;POST&#x27;</span>, url=s_url, data=url_string, headers=headers)</span><br><span class=\"line\"><span class=\"keyword\">return</span> response.text</span><br></pre></td></tr></table></div></figure>\n<p>  百度API的token我已经提前设置在了环境变量中，可以避免对外公开。需要注意的是，<strong>百度API的格式要求是字符串</strong>，所以我将<code>list</code>拼接成了<code>string</code>。</p>\n\n        <h2 id=\"必应提交\"   >\n          <a href=\"#必应提交\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#必应提交\"></a> 必应提交</h2>\n      \n<figure class=\"highlight python\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\">s_url = <span class=\"string\">&#x27;https://ssl.bing.com/webmaster/api.svc/json/SubmitUrlbatch?apikey=&#x27;</span>+os.environ[<span class=\"string\">&#x27;bing_token&#x27;</span>]</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;content-type&#x27;</span> : <span class=\"string\">&#x27;application/json&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>   : <span class=\"string\">&#x27;curl/7.12.1&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">url_json = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;siteUrl&#x27;</span>: <span class=\"string\">&#x27;https://foolishfox.cn&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;urlList&#x27;</span>: []</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> url_list :</span><br><span class=\"line\">    url_json[<span class=\"string\">&#x27;url&#x27;</span>].append(link)</span><br><span class=\"line\">response = requests.request(<span class=\"string\">&#x27;POST&#x27;</span>, url=s_url, json=url_json, headers=headers)</span><br><span class=\"line\"><span class=\"keyword\">return</span> response.text</span><br></pre></td></tr></table></div></figure>\n<p>  必应可以采用<code>xml</code>和<code>json</code>两种格式提交，我用的是后者。如果提交单个链接，应该将<code>s_url</code>修改为<code>https://ssl.bing.com/webmaster/api.svc/json/SubmitUrl?apikey=</code>，将<code>json</code>中的<code>urlList</code>修改为<code>url</code></p>\n\n        <h2 id=\"自动提交\"   >\n          <a href=\"#自动提交\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#自动提交\"></a> 自动提交</h2>\n      \n<p>  最简单的方式就是通过<code>crontab</code>了，如果使用<code>Hexo</code>，还可以用<code>node.js</code>监听<code>hexo</code>事件，实现提交：</p>\n<figure class=\"highlight javascript\"><div class=\"table-container\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\thexo.on(<span class=\"string\">&#x27;deployAfter&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\trun();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;Error: &quot;</span> + e.toString());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n        <h2 id=\"更新\"   >\n          <a href=\"#更新\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#更新\"></a> 更新</h2>\n      \n<ul>\n<li>2020.12.19: 修改代码中链接、流程和部分单词拼写错误</li>\n</ul>\n\n        <h2 id=\"源码\"   >\n          <a href=\"#源码\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#源码\"></a> 源码</h2>\n      \n<ul>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://fox-file.oss-cn-beijing.aliyuncs.com/pushurl.py\" >pushurl.py</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n</ul>\n\n        <h2 id=\"参考资料\"   >\n          <a href=\"#参考资料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#参考资料\"></a> 参考资料</h2>\n      \n<ul>\n<li><span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://cjh0613.com/20200602pythonBingUrlPush.html\" >python主动推送链接至必应Bing平台</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n</ul>\n","categories":["Hexo"],"tags":["收录"]},{"title":"星座与节气","url":"/posts/202009-a.html","content":"<p>  昨天天文协会在进行路边天文的时候，THTV的记者们采访了我们的新任会长，其中问到了一个是否相信星座的问题，让我想起了很久以前看到的一个东西，直接上表。</p>\n<span id=\"more\"></span>\n<div class=\"table-container\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">白羊座</th>\n<th style=\"text-align:center\">金牛座</th>\n<th style=\"text-align:center\">双子座</th>\n<th style=\"text-align:center\">巨蟹座</th>\n<th style=\"text-align:center\">狮子座</th>\n<th style=\"text-align:center\">处女座</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">3.21~4.19</td>\n<td style=\"text-align:center\">4.20~5.20</td>\n<td style=\"text-align:center\">5.21~6.21</td>\n<td style=\"text-align:center\">6.22~7.22</td>\n<td style=\"text-align:center\">7.23~8.22</td>\n<td style=\"text-align:center\">8.23~9.22</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">天秤座</td>\n<td style=\"text-align:center\">天蝎座</td>\n<td style=\"text-align:center\">射手座</td>\n<td style=\"text-align:center\">摩羯座</td>\n<td style=\"text-align:center\">水瓶座</td>\n<td style=\"text-align:center\">双鱼座</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9.23~10.23</td>\n<td style=\"text-align:center\">10.24~11.22</td>\n<td style=\"text-align:center\">11.23~12.21</td>\n<td style=\"text-align:center\">12.22~1.19</td>\n<td style=\"text-align:center\">1.20~2.18</td>\n<td style=\"text-align:center\">2.18~3.20</td>\n</tr>\n</tbody>\n</table></div>\n<p>  然后我们看看二十四节气的情况:<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/24%E8%8A%82%E6%B0%94-1.png\"  alt=\"\" />\n      <br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/24%E8%8A%82%E6%B0%94-2.png\"  alt=\"\" />\n      <br />\n  如果我们把每个星座的首尾和中间日期拿出来(总共得到24个日期),会发现和二十四节气惊人得吻合,不得不感叹古人还真是聪明啊,哪怕地处东西两半球,却通过不同的形式表达了一套历法.<br />\n  PS:很久没有发文了,纯粹彰显一下存在感</p>\n","categories":["天文"],"tags":["科普"]},{"title":"大宋清平 | 0.大宋之辩","url":"/posts/202004-a.html","content":"\n        <h2 id=\"正文\"   >\n          <a href=\"#正文\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#正文\"></a> 正文</h2>\n      \n<p>  这学期选修了历史系方城峰老师的《宋元史》：前八周讲宋史，后八周讲北方民族史；这一周刚好结束了宋史部分的最后一讲：宋代文化专题；恰逢《清平乐》7号开播，我们老师也在微信群里提到了这部剧，于是蹭蹭热度，来讲一讲这大宋，也当作是前半个学期的一些复习吧</p>\n<span id=\"more\"></span>\n<p>  提到大宋，应该有很多人的第一印象是羸弱，乃至有很多人叫弱宋，更有甚者称之为“弱怂”；他们认为，<strong>有宋一代，积贫积弱，重文轻武，尽管文化上十分发达，但是对外的软弱，导致了后来汉族的沉沦</strong>，这是从宋朝的结果来看，得出的最明显的结论；坚持这一观点的著名人物有<strong>钱穆</strong>，<strong>吕思勉</strong>，他们都是成长于<strong>中华民族备受外族凌辱，随时有可能国破家亡</strong>的时代[1]；因为，我们可以肯定，在他们坚持这一观点的背后，有一部分原因是想要**“以古论今”<strong>，为当时的政治服务；南宋的学者</strong>叶适**也曾发表过类似的言论，他说：“天下之弱势，历数古人之为国，无甚于本朝者。”</p>\n<p>  也有很多人坚持<strong>富宋论</strong>，这一观点是英国学者<strong>伊懋可</strong>提出的；与之持类似观点的还有美国学者<strong>费正清</strong>，费正清认为宋代是**“中国历史上最伟大的时期”<strong>；伊懋可主要是从</strong>经济<strong>角度去看待</strong>唐宋的变局**，他认为，<strong>唐宋变革</strong>其实是经济的转型、技术的转型、生产模式的转型；经济转型的一个主要方面，就是江南的农业开发和市场的发展造成了中国经济重心的南移[2]</p>\n<p>  但值得注意的是，他们在研究这一段历史时，采用的是西方学者管用的<strong>冲击-回应模式</strong>[3]，是为了解答为什么中国没有自主进入近现代化，反而在元朝之后陷入长久的停滞，费正清在他的《美国与中国》一书中也有所反映。他认为，“传统中国不是不变的，也不是静态的或停滞的。正相反，它曾经有过不断的变化，并且变化多端。可是变化总是在一个明显的文化形式与规章制度形式的范围之内。”</p>\n<p>  在十九世纪末、二十世纪初，日本<strong>京都学派</strong>的<strong>内藤湖南</strong>提出了<strong>唐宋变革论</strong>[4]，也就是前文提及的<strong>唐宋变革</strong>的来源；内藤湖南在《概括的唐宋时代观》中提到：“唐和宋在文化上有显著差异：唐代是中世的结束，而宋代则是近世的开始，其间包含了唐末至五代一段过渡期……从政治上来说，在于贵族政治的式微和君主独裁的出现”；其实类似的观点，在宋明乃至民国时期就有人提出，北宋的<strong>郑樵</strong>在《通志》卷二十五《氏族略》称：“自隋唐而上，官有簿状，家有谱系，官之选举必由于簿状，家之婚姻必由于谱系。”“自五季[5]以来，取士不问家世，婚姻不问阀阅。”</p>\n<p>  明朝人<strong>陈邦瞻</strong>更是从中国历史发展的大势来看待唐宋之际的大变动，而且把中国历史分作三个阶段。他在《宋史纪事本末•序》中说“然而未暇考其世已，宇宙[6]风气，其变之大者有三：鸿荒[7]一变而为唐、虞，以至于周，七国为极；再变而为汉，以至于唐，五季为极；宋其三变，而吾未其极也。变未极，则治不得不相为因。”</p>\n<p>  民国大师<strong>陈寅恪</strong>，对宋代也有自己的见解，他认为：“华夏民族之文化，历数千载之演进，<strong>造极于赵宋之世</strong>。后渐衰微，终必复振。”在建国后，<strong>胡如雷</strong>基于当时的政治形势，根据阶级斗争和土地所有制的变化，认为唐宋之际中国封建社会有着巨大变革</p>\n<p>  本文不想在这些事情上有过多的讨论，也不想发表自己的意见；于是，顺着《清平乐》的脚步，将剧中的故事娓娓道来，逐一展开，成了一个很好的选择</p>\n<p>  首先，关于这部剧的主角：宋仁宗，很多人不理解为什么要选这么一个主角。的确，在我们接受的小初高教育中，唯有秦皇汉武，唐宗宋祖，能够称之为天骄，才能够说对历史有重大贡献，至于高皇帝刘邦、宣帝刘洵、光武刘秀、三国三帝、北魏孝文、文帝杨坚、武后武曌、玄宗隆基，太祖重八、成祖朱棣、圣祖康熙、高宗乾隆也可以算是人杰</p>\n<p>  至于北宋仁宗，没有秦皇汉武的丰功伟业，没有唐宗宋祖的雄才大略，反而被他手下的臣子、一个又一个巨星所掩盖；吕夷简、宋痒、庞籍、晏殊、范仲淹、欧阳修、韩琦、富弼、文彦博、曾公亮、包拯、狄青、苏轼、曾巩、王安石、司马光、柳永、周敦颐、邵雍、张载、程颢、程颐、章惇、韩绛、吕诲、梅尧臣、王尧臣、王拱辰……这一长串的名字，让我们迷失在他们璀璨的光辉中，不由自主地忽视了散发着微弱光芒的仁宗</p>\n<p>  但是仁宗真的只是名声好，没有半点历史功绩吗？仁宗真的握着一手好牌，却打得稀巴烂吗？异国百姓、君王均为仁宗之死感到悲哀，是因为仁宗好欺负，难得遇上吗？这些问题，我们都可以在后面讲述的过程中，稍加思考；当然，仁者见仁智者见智，每个人得出的结论都会不一样，那就看各自的领悟啦</p>\n<p>  好啦，这一期就结束了，下一期开始进入正题</p>\n\n        <h2 id=\"注释\"   >\n          <a href=\"#注释\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#注释\"></a> 注释</h2>\n      \n<ol>\n<li>钱穆，1895-1900；吕思勉，1884-1957</li>\n<li>唐和北宋在实际上还没有完成经济重心南移的过程，实际上，在北宋，人口、科技、经济仍然集中在北方</li>\n<li>冲击-回应模式，强调了西方的冲击对中国进步的重要性</li>\n<li>除京都学派外，日本的东京学派也对中国的历史分期有所研究，但值得注意的是，两者在战前&amp;战时的学术研究，基本上是为了替日本侵略中国寻找合适的理由与借口</li>\n<li>五季，即五代，后梁、后唐、后晋、后汉、后周</li>\n<li>宇宙，宇代表空间，宙代表时间，与现在的宇宙有所不同</li>\n<li>鸿荒，指太古，混沌初开之世</li>\n</ol>\n\n        <h2 id=\"参考资料\"   >\n          <a href=\"#参考资料\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#参考资料\"></a> 参考资料</h2>\n      \n<ul>\n<li>课件&amp;课堂讲授，清华大学历史系，方城峰</li>\n<li>唐宋变革论究竟是怎么回事，北京大学历史系，陆扬</li>\n<li>唐宋变革论的由来与发展，首都师范大学历史学院，李华瑞</li>\n</ul>\n\n        <h4 id=\"声明以上内容如有不当之处欢迎指出如有侵权请联系作者立马删除\"   >\n          <a href=\"#声明以上内容如有不当之处欢迎指出如有侵权请联系作者立马删除\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#声明以上内容如有不当之处欢迎指出如有侵权请联系作者立马删除\"></a> 声明：以上内容如有不当之处，欢迎指出；如有侵权，请联系作者，立马删除</h4>\n      \n","categories":["历史"],"tags":["科普","宋代"]},{"title":"哈勃分歧 | 2.分析","url":"/posts/202004-c.html","content":"<p>  上一次,我介绍了测量Hubble Constant的两种方法,发现测量值有差异;这一期,我将简要分析存在差异的可能原因,并介绍一些前沿的测量哈勃常数的方法.</p>\n\n        <h3 id=\"宇宙加速膨胀因子\"   >\n          <a href=\"#宇宙加速膨胀因子\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#宇宙加速膨胀因子\"></a> 宇宙加速膨胀因子</h3>\n      \n<p>  前文介绍了,哈勃常数其实是时间的函数,因此将哈勃常数对时间求导,可以得到H’(t)=-H^2(t)(1+q)</p>\n<span id=\"more\"></span>\n<p>  其中q被称为宇宙加速膨胀因子.当一个天体的红移量较大的时候,其视向速度的计算不再按照前文的公式,而需要引入参量q引入该参量之后在较高红移区域得到的哈勃常数比低红移区域要小.<br />\n  但是q的值在当今仍然无法确定,采用不同方法测定的q值相差甚远,可能影响到距离阶梯法对哈勃常数的测定.<br />\n  下图中,上方绿线是采用前文公式计算的结果,下方蓝线是考虑q=0.5后计算的结果,横轴为红移量,纵轴为v/c<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/02_q%E7%9A%84%E5%BD%B1%E5%93%8D.png\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"距离差异大\"   >\n          <a href=\"#距离差异大\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#距离差异大\"></a> 距离差异大</h3>\n      \n<p>  CMB方法测量的哈勃常数是在高红移(z=1100)的情况下.而目前造父变星周光关系的测距方法只能适用到一亿光年左右,再远的造父变星我们无法将其从本底星系中分辨出. 通过Ia型超新星,我们可以将测量更远范围内的哈勃常数,但是其最远距离依然限制在z＜1内,远远不如z=1100.<br />\n  在z=1到1100的广阔空间内,哈勃常数有着怎样的变化我们并不清楚,可能我们当前假定的哈勃常数在空间中是定值是错误的,这需要我们进一步拓展距离阶梯法的测距范围,能够得到更远距离的哈勃常数值来修正当前测量值.</p>\n\n        <h3 id=\"宇宙演化模型存在错误\"   >\n          <a href=\"#宇宙演化模型存在错误\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#宇宙演化模型存在错误\"></a> 宇宙演化模型存在错误</h3>\n      \n<p>  诺贝尔奖得主亚当·里斯(Adam Guy Riess)曾说:用CMB相关的方法测量哈勃常数,就像根据一个人童年时的照片推断现在的身体特征;用造父变星与Ia型超新星等方法计算哈勃常数,就像直接看这个人当前的特征.<br />\n  使用CMB相关方法进行测量时,我们需要建立一套理论模型来进行推断.如果这套理论模型存在错误,显然我们会得到一个错误的观测结果;为了在这种情形下得到现有的观测结果,我们就必须对初始条件进行修改,得到了错误的测量值.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/CMB.jpg\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"其他\"   >\n          <a href=\"#其他\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h3>\n      \n<p>  当然,上面的猜测纯属作者的一派胡言;真实的原因可能非常复杂,甚至可能牵扯到一些更深层次的假设,例如我们目前普遍认为的大部分星光基本各向同性等.<br />\n  除了这些,我们可能还需要考虑到我们的仪器:我们的原始数据准确吗?可信吗?我们能不能找到更加先进的设备和方法去测量Hubble Constant这一重要的物理常数?这些都需要未来的天文学家,物理学家去思考,解决.<br />\n  下面将介绍一些最新的测量Hubble Constant的方法.</p>\n\n        <h3 id=\"bao重子声波振荡\"   >\n          <a href=\"#bao重子声波振荡\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#bao重子声波振荡\"></a> BAO重子声波振荡</h3>\n      \n<p>  光子－重子在早期宇宙的等离子体中碰撞产生声学振荡(BAO).它们会在背景光子里留下印记,形成冷热不均的斑点.几亿年后,物质在热斑所在的区域聚集,产生了星系.研究这些星系,也就可以探索出BAO的特征.<br />\n  除此之外,正如超新星可以作为标准烛光,BAO的物质成团性也可以作为测量宇宙学距离的标准尺,目前大约能够达到5亿光年.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/05_BAO.jpg\"  alt=\"\" />\n      <br />\n  目前采用BAO方法得到的数值(69.8)与CMB相关方法得到的相差不大,但是目前BAO方法的样本太小,获得的数据太少.不过这项工作目前正由中国科学家进行研究.</p>\n\n        <h3 id=\"引力波\"   >\n          <a href=\"#引力波\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#引力波\"></a> 引力波</h3>\n      \n<p>  自2016年人类首次探测到引力波以来,对引力波的研究进入了全新时代.<br />\n  双中子星合并的引力波源往往存在电磁对映体,观测可以得到一种特定的光面曲线(千新星),从这个光面曲线中我们可以得到其电磁对映体的红移,进而推断出其视向速度.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/06_%E5%8D%83%E6%96%B0%E6%98%9F.jpeg\"  alt=\"\" />\n      <br />\n  <scan style=\"font-size: 12px;color: grey;text-algin: center\">GW170817 引力波事件发生前后所在天区光学成像照片(负片)的对比。右图箭头所指黑点即为千新星AT2017gfo(SSS17a)，其附近的亮斑是它的宿主星系NGC4993</scan><br />\n  通过对合并前后引力波曲线的分析,我们可以得到合并前两个天体分别的质量以及合并后天体的质量,计算出损失的质量,进而计算出引力波所拥有的能量.通过测量我们所处位置的引力波强度,再前文测算绝对星等的方法(假定各向同性),我们可以得到引力波源的距离.<br />\n  目前双中子星合并的实例暂时只有一例,得到的Hubble Constant的值为70,但是在未来必将观测到更多的案例.</p>\n\n        <h3 id=\"红巨星\"   >\n          <a href=\"#红巨星\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#红巨星\"></a> 红巨星</h3>\n      \n<p>  红巨星(TRGB)是恒星演化过程中的一个阶段,是恒星的老年期.在这个阶段,恒星由于点燃了壳层的氢聚变反应,使得外面包层受热膨胀,体积很快增大数千倍以上,温度降低.但是由于表面积巨大,因此在地球上看来极为明亮.<br />\n  红巨星形成之前,晚年恒星内部的氦核处于简并态.当内部氦核质量达到一定程度时,恒星将会发生氦闪,其亮度大致恒定为-4等,因此也可以作为标准烛光.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/03_TRGB.png\"  alt=\"\" />\n      <br />\n  温迪·佛里德曼(Wendy L. Freedman)通过分析来自HST(哈勃望远镜)的18个红巨星的数据,得到的哈勃常数值为:<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/07_Hubble-Constant.png\"  alt=\"\" />\n      <br />\n  目前红巨星的数据只有18个,随着数据量的积累,这种方法的分析精度将会进一步提高,为最终确定哈勃常数提供重要依据.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/01_%E5%B0%81%E9%9D%A2.png\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"原文链接哈勃分歧-2分析\"   >\n          <a href=\"#原文链接哈勃分歧-2分析\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#原文链接哈勃分歧-2分析\"></a> 原文链接：<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://mp.weixin.qq.com/s/A0XScDgj7I861GE_-LGFKw\"  title=\"哈勃分歧  2.分析\">哈勃分歧 2.分析</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></h3>\n      \n","categories":["天文"],"tags":["科普","哈勃常数"]},{"title":"哈勃分歧 | 1.测定","url":"/posts/202004-b.html","content":"<p>  哈勃常数是哈勃定律中的退行速度与距离的比值,是一个常数值;传统的方法通过距离阶梯测量出星际间的距离,再根据多普勒效应和红移计算出退行速度,由此得到哈勃常数;现代科学家通过测量宇宙微波背景辐射,结合宇宙的演化理论,得到哈勃常数;而两种方法得到的哈勃常数的值有大约9%的差异.这个差异我们称之为<strong>哈勃分歧(the tension of Hubble Constant)</strong></p>\n<span id=\"more\"></span>\n\n        <h3 id=\"哈勃定律\"   >\n          <a href=\"#哈勃定律\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#哈勃定律\"></a> 哈勃定律</h3>\n      \n<p>  1929年哈勃对河外星系的视向速度与距离的关系进行了研究,得出了<strong>视向速度与距离之间大致的线性正比关系</strong>:<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>v</mi><mo>=</mo><mi>H</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">v=Hd</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathdefault\">d</span></span></span></span><br />\n  其中v为退行速度,d为星系距离,H为比例常数,称为<strong>哈勃常数(Hubble constant)</strong>.下图中,z可以表征v.<br />\n  实际上,哈勃常数并不是一个常数,而是<strong>随时间变化的一个函数</strong>,准确的称呼应该是哈勃参量.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/02_d-z%E5%9B%BE.png\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"造父变星\"   >\n          <a href=\"#造父变星\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#造父变星\"></a> 造父变星</h3>\n      \n<p>  上一期中提到了<strong>造父变星(Cepheid)<strong>以及周光关系,下面介绍一下造父变星的光变机理.造父变星是脉动变星的一种,<strong>光变周期稍长,变化星等不大,周期稳定</strong>;造父变星分为长周期造父变星和短周期造父变星,其中长周期造父变星又分为</strong>经典造父变星和室女座W型变星</strong>,两种类型的周光关系零点不同.<br />\n  当恒星演化到一定阶段,内部会出现不稳定性,引力和辐射压力会失去平衡,外部包层会出现<strong>周期性的膨胀和收缩</strong>,但这个脉动不涉及恒星的核心.造父变星的光变机理是基于上述原理产生的星体本身的膨胀收缩,引起半径周期性的增大与减小,表面积也周期性的增加与减少,温度和总辐射能量都发生变化,因而光度也周期性的增大与减小.另外恒星的颜色,光谱型,以及视向速度都会发生变化.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/Cepheid.jpg\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"宇宙微波背景辐射\"   >\n          <a href=\"#宇宙微波背景辐射\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#宇宙微波背景辐射\"></a> 宇宙微波背景辐射</h3>\n      \n<p>  1965年,贝尔实验室的彭齐亚斯(Arno Penzias)和威尔逊(Robert Wilson)在调试一个为回声卫星计划而建造的角形反射天线时,在射电波段意外发现了约为3.5K的过剩天线温度.在排除了辐射来自天线内部或临近环境的可能性后,他们肯定这一<strong>各向同性,非极化</strong>的,与季节无关的辐射是来自宇宙远处的辐射信号.科学家认为,这就是宇宙微波背景辐射(cosmic microwave background,CMB)的信号.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/CMB.jpg\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"红移\"   >\n          <a href=\"#红移\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#红移\"></a> 红移</h3>\n      \n<p>  观测发现,宇宙中绝大部分的<strong>星系,恒星都远离我们而去</strong>,这在光谱上的体现就是红移,而只有极少部分的天体谱线蓝移.这充分体现了<strong>宇宙大爆炸和宇宙膨胀</strong>的思想.<br />\n  红移的大小由红移量衡量,用z表示:<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>z</mi><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">Δ</mi><mi>λ</mi></mrow><mi>λ</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">z=\\frac{\\Delta\\lambda}{\\lambda}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">λ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">Δ</span><span class=\"mord mathdefault mtight\">λ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><br />\n  其中,λ是谱线原本的波长.</p>\n\n        <h3 id=\"测速\"   >\n          <a href=\"#测速\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#测速\"></a> 测速</h3>\n      \n<p>  通过测得光谱红(蓝)移量,我们可以利用多普勒效应的简化公式计算出天体的视向速度:<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>z</mi><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">Δ</mi><mi>λ</mi></mrow><mi>λ</mi></mfrac><mo>=</mo><mfrac><mi>v</mi><mi>c</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">z=\\frac{\\Delta\\lambda}{\\lambda}=\\frac{v}{c}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">λ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">Δ</span><span class=\"mord mathdefault mtight\">λ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.040392em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><br />\n  但是当速度接近光速时,简化公式不再适用,这时必须使用按相对论推导出的严格公式进行计算:<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>z</mi><mo>=</mo><msqrt><mfrac><mrow><mi>c</mi><mo>+</mo><mi>v</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>v</mi></mrow></mfrac></msqrt><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">z=\\sqrt{\\frac{c+v}{c-v}}-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8399999999999999em;vertical-align:-0.6555000000000001em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1844999999999999em;\"><span class=\"svg-align\" style=\"top:-3.8em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.802331em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span><span class=\"mbin mtight\">−</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">c</span><span class=\"mbin mtight\">+</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.403331em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.1445em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.8800000000000001em;\"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\nM1001 80H400000v40H1013z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6555000000000001em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span><br />\n  由此我们可以通过<strong>测量天体的红移量,进而测定出天体的视向速度.</strong></p>\n\n        <h3 id=\"周光关系\"   >\n          <a href=\"#周光关系\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#周光关系\"></a> 周光关系</h3>\n      \n<p>  造父变星的<strong>绝对星等与光变周期之间存在简单的线性关系</strong>,通过多种方法均可得到该线性方程.通过多种方法的综合利用,现在得到的两种类型的造父变星的周光关系公式为(M为绝对照相星等,P为光变周期,以天为单位): M=-1.80-1.74lgP (经典造父变星) M=-0.35-1.75lgP (室女座W型变星)<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/03_PL-relation.jpg\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"视星等与绝对星等\"   >\n          <a href=\"#视星等与绝对星等\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#视星等与绝对星等\"></a> 视星等与绝对星等</h3>\n      \n<p>  视星等(m)是指肉眼或通过天体辐射接收器所观测到的恒星亮度,实际上是<strong>接收到的星光的照度</strong>,而绝对星等(M)是天文学家为了比较恒星亮度的真实差异定义的,数值上等于<strong>恒星在10pc(32.6ly)处的视星等.</strong> 星等公式：M=m+5-5lgr(r为距离) 发展   有了上述的方法,我们就可以计算出哈勃常数了:<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/H.png\"  alt=\"\" />\n      <br />\n(e=10)<br />\n  在科学发展的过程中,科学家通过新的观测目标来代替造父变星,特别是星系距离远到一定程度时,现有的望远镜无法分辨出单独的恒星,新的观测目标其中之一就是<strong>Ⅰa型超新星(被称为标准烛光)</strong>.拓展的方法我们称之为距离阶梯法.<br />\n  迄今为止,由距离阶梯法测得的较为精确的值是:<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/H1.png\"  alt=\"\" />\n      </p>\n\n        <h3 id=\"宇宙大爆炸\"   >\n          <a href=\"#宇宙大爆炸\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#宇宙大爆炸\"></a> 宇宙大爆炸</h3>\n      \n<p>  根据宇宙大爆炸模型,大爆炸后最初的宇宙是“一锅粒子汤”,均匀的分布在当时的宇宙中.但是在这原始能量分布中有<strong>微小的涨落</strong>.大约在大爆炸后10-35s,宇宙开始经历<strong>暴涨</strong>,原本的微小涨落随着宇宙的暴涨也从微观尺度急剧放大,造成的影响在宇宙中传播,从而造成了<strong>物质分布的不均匀</strong>(即微小的<strong>各向异性</strong>),其中密度较大的“沟”在未来发育成为第一代的恒星与星系.<br />\n  在宇宙暴涨和冷却的过程中,离子和电子结合形成中性原子,这些<strong>中性原子不再吸收热辐射</strong>,宇宙不再是不透明的“云雾”,光子可以在宇宙中传播,这创世的第一缕曙光残留到今天就是宇宙微波背景辐射.<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/Big-bang.jpg\"  alt=\"\" />\n      <br />\n  涨落的影响在宇宙中的传播速度与哈勃常数有关,而这种影响造成的各向异性被记录在微波背景辐射中.目前通过卫星对微波背景辐射的扫描测量,我们可以从CMB的观测数据中得到这种影响的大小,再通过宇宙的演化模型来估计哈勃常数值.这是测量的方法之一.现代天文学家采用了ΛCDM模型的方法.<br />\n  目前通过普朗克卫星测得哈勃常数值为:<br />\n\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/H2.png\"  alt=\"\" />\n      <br />\n  这一期就到这儿啦.我们了解了测量Hubble Constant的两种方法后,可以发现两个数值之间存在明显的差异,下一期将从作者的角度,简单分析可能的原因.</p>\n\n        <h3 id=\"原文链接哈勃分歧-1测量\"   >\n          <a href=\"#原文链接哈勃分歧-1测量\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a class=\"markdownIt-Anchor\" href=\"#原文链接哈勃分歧-1测量\"></a> 原文链接：<span class=\"exturl\"><a class=\"exturl__link\"   href=\"https://mp.weixin.qq.com/s/CKJjtJw993NZdlNV51Ov0A\"  title=\"哈勃分歧  1.测量\">哈勃分歧 1.测量</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></h3>\n      \n","categories":["天文"],"tags":["科普","哈勃常数"]},{"title":"夜空 | 2020-03-31","url":"/posts/202004-d.html","content":"<p>  昨天是难得一遇的晴天，作为星空摄影小白的我，拿着手机去拍星空，也是为了我《天文学导论》的个人观星作业：<br />\n  在晴朗无月的夜晚，向北找到<strong>北极星和北斗七星</strong>，向南找到<strong>天狼星和猎户座</strong>，观测并记录<strong>这些星星在天球上的运行规律</strong>。分别在<strong>相距至少一个月的两个晴朗无月</strong>的夜晚，用相机拍摄（或手绘）以上星星组成的图像（手绘时注意各星的相对位置）</p>\n<span id=\"more\"></span>\n<p>  在图像上，按照标准的星座方式把<strong>北斗七星和猎户座中的星星用线连接起来，并标出每颗星的中文名</strong>。在每个夜晚要选择两个<strong>间隔不少于3个小时的任意两个时间节点</strong>进行拍摄和手绘。特别提醒：图像中所标注的星星必须是<strong>裸眼可见</strong>的。为了表明<strong>星群位置是否有相对变化</strong>，图中需明确画出<strong>子午线和正北（正南）位置</strong><br />\n  由于昨晚有课，下课就九点了，没有三个小时的间隔，那就只能采用手绘+拍摄的方式啦。下面是昨晚的情况：<br />\n  地点：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2</mn><msup><mn>8</mn><mi mathvariant=\"normal\">°</mi></msup><mn>2</mn><msup><mn>0</mn><mi mathvariant=\"normal\">′</mi></msup><mn>5</mn><msup><mn>8</mn><mi mathvariant=\"normal\">″</mi></msup><mi>N</mi><mn>11</mn><msup><mn>1</mn><mi mathvariant=\"normal\">°</mi></msup><mn>5</mn><msup><mn>0</mn><mi mathvariant=\"normal\">′</mi></msup><mn>4</mn><msup><mn>4</mn><mi mathvariant=\"normal\">″</mi></msup><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">28^{°}20^{′}58^{″}N   111^{°}50^{′}44^{″}E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">8</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">°</span></span></span></span></span></span></span></span></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord\">8</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.363em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">″</span></span></span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">°</span></span></span></span></span></span></span></span></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.363em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">″</span></span></span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span>   时间：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>22</mn><mo>:</mo><mn>00</mn><mo>−</mo><mn>23</mn><mo>:</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">22:00-23:10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span><br />\n  首先找到的是<strong>北斗七星</strong>，这是北半球最常见，也是我们最熟悉的星象了：</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/IMG_20200331_222813.jpg\"  alt=\"\" />\n      </p>\n<p>  上面的是<strong>北斗七星</strong>，是<strong>大熊座</strong>的一部分。小时候还没有那么大的光污染，在老家能够轻而易举的看见明亮的勺状北斗；中间的是<strong>天龙座(Dragon)</strong>，所以就会有<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ζ</mi><mi>D</mi><mi>r</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">\\zeta Dra</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07378em;\">ζ</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">a</span></span></span></span>这种名字；中心偏左的是<strong>小北斗</strong>，是<strong>小熊座</strong>的一部分，**北极星(勾陈一)**是其中的一颗；这张图不太清晰，下面是一张相对而言更高清的图片：</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/IMG_20200331_222839.jpg\"  alt=\"\" />\n      </p>\n<p>  昨晚我拍照的时候，我的星座：<strong>狮子座</strong>就在我的头顶，但是没有把它拍下来；而且昨晚虽然不是满月，但是初八正巧是上弦月，月光也是蛮强的，对拍摄也造成了一定影响：</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/IMG_20200331_225051.jpg\"  alt=\"\" />\n      </p>\n<p>  天空中的最亮的那一块就是月亮了，旁边有两颗亮星。下方那颗是<strong>猎户座</strong>的<strong>参宿四</strong>，下方的电线中间，掩藏着<strong>猎户座</strong>的<strong>腰带三星</strong>；上方那颗是<strong>双子座</strong>的四只脚之一：<strong>井宿三</strong>，还有一只脚被月亮挡住了；月亮上方的两颗亮星是<strong>双子座</strong>的两个头：<strong>北河二</strong>、<strong>北河三</strong><br />\n  左侧的电线杆旁边的亮星是<strong>天狼星</strong>，是整个夜空中最亮的一颗恒星，也是<strong>大犬座</strong>的一部分；而最上方的三根电线的中间那一根上面，有着<strong>小犬座</strong>仅有的两颗恒星之一：<strong>南河二</strong>，旁边的那颗亮星是<strong>小犬座</strong>的另一颗恒星：<strong>南河三</strong><br />\n  现在让我们掉头，看向我们的身后，有一颗十分明亮的星星：<strong>大角星</strong>：</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/IMG_20200331_222933.jpg\"  alt=\"\" />\n      </p>\n<p>  上方那一个星座是<strong>牧夫座</strong>，<strong>大角星</strong>是<strong>牧夫座</strong>的主星；中间的星座因为看着就像一个皇冠一样，然后又在北天球，所以称之为<strong>北冕座</strong>；右侧的那一条直线，是<strong>室女座</strong>的一条腿；下方的三个星座中，左侧是<strong>武仙座</strong>的一条手臂和部分躯干；中间是<strong>巨蛇座</strong>的头；右边是<strong>天秤座</strong>的一颗亮星</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/IMG_20200331_222944.jpg\"  alt=\"\" />\n      </p>\n<p>  除了这些星座的照片，我还花了10min拍了一个<strong>星轨</strong>，但是这一切却被一辆车的车灯毁了，大哭😭，流泪😭，下面的人影是我自己，想着把车灯挡住，然而并没有起到什么效果：</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/2020/12/13/IMG_20200331_224609.jpg\"  alt=\"\" />\n      </p>\n<p>  可以明显地看到，圆弧状的<strong>星轨</strong>都围绕着一个共同的圆心：<strong>北天极</strong>，<strong>北极星</strong>就是因为靠近<strong>北天极</strong>而得名，在<strong>南天极</strong>附近没有明显的亮星，所以大家是不是也没有听过<strong>南极星</strong>这个名字？而且<strong>北极星</strong>一直在不断变化，现在的<strong>北极星</strong>是<strong>勾陈一</strong>，而我们很熟悉的“牛郎织女”中的<strong>织女星</strong>也会在一段时间内成为<strong>北极星</strong><br />\n  今天又是一个大晴天，尽管晚上要上宋元史的课，十点才下课，但是我还是可以找机会拍一拍<strong>狮子座</strong>嘛，那么，星空，晚上再会！</p>\n","categories":["天文"],"tags":["科普"]},{"title":"世界，您好！","url":"/posts/202003-a.html","content":"<p>  多年前在DevC++上敲下第一行代码#include<iostream>，向世界说：“Hello! World!”</p>\n<span id=\"more\"></span>\n<p>  现在开通了第一个博客，同样说一声：“世界你好”</p>\n<p>  不怎么会说话，就引用一句歌词吧：</p>\n<p>\n        <img   class=\"lazyload lazyload-gif\"\n          src=\"/images/loading.svg\" data-src=\"https://img.foolishfox.cn/images/static/fox_paint.jpg\"  alt=\"\" />\n      </p>\n<p>  我还是从前那个少年，没有一丝丝改变；时间只不过是考验，种在心中信念丝毫未减</p>\n<p>        ——梦然</p>\n","categories":["随记"]}]